{
    "resources": [
        {
            "server_url": "",
            "path": "/account",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Account fetched successfully",
                    "schema": {
                        "$ref": "#/definitions/AccountResponse"
                    }
                },
                "404": {
                    "description": "Account not found. (code: `accounts.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "accounts.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Fetch current account information.",
            "tags": [
                "Accounts"
            ],
            "operationId": "get-current-account"
        },
        {
            "server_url": "",
            "path": "/billing/costs/{organization_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "from",
                    "in": "query",
                    "description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "to",
                    "in": "query",
                    "description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date.",
                    "required": false,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Top-level cost overview for the organization",
                    "schema": {
                        "$ref": "#/definitions/CostsOverview"
                    }
                },
                "400": {
                    "description": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "costs.invalid_date_range"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_access"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "An error occurred when fetching an overview of the costs for the organization. (code: `billing_service.failed_request`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "billing_service.failed_request"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "EXPERIMENTAL (it may change in future versions): Retrieves an overview of the costs by organization ID.",
            "tags": [
                "BillingCostsAnalysis"
            ],
            "operationId": "get-costs-overview"
        },
        {
            "server_url": "",
            "path": "/billing/costs/{organization_id}/charts",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "from",
                    "in": "query",
                    "description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "to",
                    "in": "query",
                    "description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "bucketing_strategy",
                    "in": "query",
                    "description": "The desired bucketing strategy for the charts. Defaults to `daily`.",
                    "required": false,
                    "type": "string",
                    "default": "daily",
                    "enum": [
                        "daily",
                        "monthly"
                    ]
                }
            ],
            "responses": {
                "200": {
                    "description": "The usage charts of an organization.",
                    "schema": {
                        "$ref": "#/definitions/ChartItems"
                    }
                },
                "400": {
                    "description": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "costs.invalid_date_range"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_access"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "429": {
                    "description": "Too many requests. (code: `billing_service.rate_limited`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "billing_service.rate_limited"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "billing_service.failed_request"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "EXPERIMENTAL (it may change in future versions): Retrieves the usage charts for the organization.",
            "tags": [
                "BillingCostsAnalysis"
            ],
            "operationId": "get-costs-charts"
        },
        {
            "server_url": "",
            "path": "/billing/costs/{organization_id}/deployments",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "from",
                    "in": "query",
                    "description": "A datetime for the beginning of the desired range for which to fetch activity. Defaults to start of current month.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "to",
                    "in": "query",
                    "description": "A datetime for the end of the desired range for which to fetch activity. Defaults to the current date.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "Accept header containing the content preference.",
                    "required": false,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The costs associated to a set of products",
                    "schema": {
                        "$ref": "#/definitions/DeploymentsCosts"
                    }
                },
                "400": {
                    "description": "Invalid date range specified. (code: `costs.invalid_date_range`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "costs.invalid_date_range"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_access"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "An error occurred when fetching the costs associated with all deployments for the organization. (code: `billing_service.failed_request`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "billing_service.failed_request"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "EXPERIMENTAL (it may change in future versions): Retrieves the costs associated with all deployments for the organization.",
            "tags": [
                "BillingCostsAnalysis"
            ],
            "operationId": "get-costs-deployments"
        },
        {
            "server_url": "",
            "path": "/billing/costs/{organization_id}/deployments/{deployment_id}/charts",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Id of a Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "from",
                    "in": "query",
                    "description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "to",
                    "in": "query",
                    "description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "bucketing_strategy",
                    "in": "query",
                    "description": "The desired bucketing strategy for the charts. Defaults to `daily`.",
                    "required": false,
                    "type": "string",
                    "default": "daily",
                    "enum": [
                        "daily",
                        "monthly"
                    ]
                }
            ],
            "responses": {
                "200": {
                    "description": "The usage charts of a deployment.",
                    "schema": {
                        "$ref": "#/definitions/ChartItems"
                    }
                },
                "400": {
                    "description": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "costs.invalid_date_range"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_access"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "429": {
                    "description": "Too many requests. (code: `billing_service.rate_limited`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "billing_service.rate_limited"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "billing_service.failed_request"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "EXPERIMENTAL (it may change in future versions): Retrieves the usage charts for the given  deployment.",
            "tags": [
                "BillingCostsAnalysis"
            ],
            "operationId": "get-costs-charts-by-deployment"
        },
        {
            "server_url": "",
            "path": "/billing/costs/{organization_id}/deployments/{deployment_id}/items",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Id of a Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "from",
                    "in": "query",
                    "description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "to",
                    "in": "query",
                    "description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "Determines the response body format. Can be either application/json or text/csv.",
                    "required": false,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The costs associated to a set items billed for a single deployment.",
                    "schema": {
                        "$ref": "#/definitions/ItemsCosts"
                    }
                },
                "400": {
                    "description": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "costs.invalid_date_range"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_access"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "* The organization was not found. (code: `organization.not_found`)\n* The Elasticsearch cluster was not found. (code: `billing_service.es_cluster_id_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found",
                                "billing_service.es_cluster_id_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "An error occurred when fetching the itemized costs for the given deployment of the organization. (code: `billing_service.failed_request`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "billing_service.failed_request"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "EXPERIMENTAL (it may change in future versions): Retrieves the itemized costs for the given deployment.",
            "tags": [
                "BillingCostsAnalysis"
            ],
            "operationId": "get-costs-items-by-deployment"
        },
        {
            "server_url": "",
            "path": "/billing/costs/{organization_id}/items",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "from",
                    "in": "query",
                    "description": "A datetime for the beginning of the desired range for which to fetch costs. Defaults to start of current month.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "to",
                    "in": "query",
                    "description": "A datetime for the end of the desired range for which to fetch costs. Defaults to the current date.",
                    "required": false,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The costs associated to a set of items",
                    "schema": {
                        "$ref": "#/definitions/ItemsCosts"
                    }
                },
                "400": {
                    "description": "The specified date range is invalid. (code: `costs.invalid_date_range`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "costs.invalid_date_range"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_access"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Error fetching the itemized costs for the organization. (code: `billing_service.failed_request`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "billing_service.failed_request"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "EXPERIMENTAL (it may change in future versions): Retrieves the itemized costs for the organization.",
            "tags": [
                "BillingCostsAnalysis"
            ],
            "operationId": "get-costs-items"
        },
        {
            "server_url": "",
            "path": "/deployments",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "The list of deployments that belong to the authenticated user.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentsListResponse"
                    }
                },
                "401": {
                    "description": "You are not authorized to perform this action.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List Deployments.",
            "tags": [
                "Deployments"
            ],
            "operationId": "list-deployments"
        },
        {
            "server_url": "",
            "path": "/deployments/extensions",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "The extensions that are available",
                    "schema": {
                        "$ref": "#/definitions/Extensions"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves all of the available extensions.",
            "tags": [
                "Extensions"
            ],
            "operationId": "list-extensions"
        },
        {
            "server_url": "",
            "path": "/deployments/extensions/{extension_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "extension_id",
                    "in": "path",
                    "description": "Id of an extension",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "include_deployments",
                    "in": "query",
                    "description": "Include deployments referencing this extension. Up to only 10000 deployments will be included.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "The Extension",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/Extension"
                    }
                },
                "404": {
                    "description": "The extension requested does not exist. (code: `extensions.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves an extension.",
            "tags": [
                "Extensions"
            ],
            "operationId": "get-extension"
        },
        {
            "server_url": "",
            "path": "/deployments/templates",
            "method": "get",
            "parameters": [
                {
                    "name": "metadata",
                    "in": "query",
                    "description": "An optional key/value pair in the form of (key:value) that will act as a filter and exclude any templates that do not have a matching metadata item associated.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "show_instance_configurations",
                    "in": "query",
                    "description": "If true, will return details for each instance configuration referenced by the template.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_max_zones",
                    "in": "query",
                    "description": "If true, will populate the max_zones field in the instance configurations. Only relevant if show_instance_configurations=true.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "stack_version",
                    "in": "query",
                    "description": "If present, it will cause the returned deployment templates to be adapted to return only the elements allowed in that version.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "hide_deprecated",
                    "in": "query",
                    "description": "If true, templates flagged as deprecated will NOT be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "region",
                    "in": "query",
                    "description": "Region of the deployment templates",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The deployment templates were returned successfully.",
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/DeploymentTemplateInfoV2"
                        }
                    }
                },
                "401": {
                    "description": "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "templates.region_not_allowed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "The requested region was not found. (code: `templates.region_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "templates.region_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves all deployment templates.",
            "tags": [
                "DeploymentTemplates"
            ],
            "operationId": "get-deployment-templates-v2"
        },
        {
            "server_url": "",
            "path": "/deployments/templates/{template_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "template_id",
                    "in": "path",
                    "description": "The identifier for the deployment template.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "show_instance_configurations",
                    "in": "query",
                    "description": "If true, will return details for each instance configuration referenced by the template.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_max_zones",
                    "in": "query",
                    "description": "If true, will populate the max_zones field in the instance configurations. Only relevant if show_instance_configurations=true.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "stack_version",
                    "in": "query",
                    "description": "If present, it will cause the returned deployment template to be adapted to return only the elements allowed in that version.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "region",
                    "in": "query",
                    "description": "Region of the deployment template",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The deployment template was found and returned successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentTemplateInfoV2"
                    }
                },
                "404": {
                    "description": "The deployment template specified by {template_id} cannot be found. (code: `templates.template_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "templates.template_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "templates.region_not_allowed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "The requested region is not supported. (code: `templates.region_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "templates.region_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves a deployment template by id.",
            "tags": [
                "DeploymentTemplates"
            ],
            "operationId": "get-deployment-template-v2"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/associations/{association_type}/{associated_entity_id}/rulesets",
            "method": "get",
            "parameters": [
                {
                    "name": "association_type",
                    "in": "path",
                    "description": "Association type",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "associated_entity_id",
                    "in": "path",
                    "description": "Associated entity ID",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Rulesets in the deployment were successfully returned",
                    "schema": {
                        "$ref": "#/definitions/TrafficFilterSettings"
                    }
                },
                "400": {
                    "description": "Invalid association type. (code: `traffic_filter.invalid_association_type`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.invalid_association_type"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves the rulesets associated with a deployment.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "get-traffic-filter-deployment-ruleset-associations"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/link-ids",
            "method": "get",
            "parameters": [
                {
                    "name": "region",
                    "in": "query",
                    "description": "If provided limits the claimed id to that region only.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "organization_id",
                    "in": "query",
                    "description": "Retrieves a list of resources that are associated to the specified organization ID. It only takes effect if the user is an admin.",
                    "required": false,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The collection of traffic filter claimed link id",
                    "schema": {
                        "$ref": "#/definitions/TrafficFilterClaimedLinkIds"
                    }
                },
                "500": {
                    "description": "Error fetching traffic filter claimed link ids. (code: `traffic_filter_claimed_link_id.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter_claimed_link_id.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List all of the traffic filter claimed link id.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "get-traffic-filter-claimed-link-ids"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/rulesets",
            "method": "get",
            "parameters": [
                {
                    "name": "include_associations",
                    "in": "query",
                    "description": "Retrieves a list of resources that are associated to the specified ruleset.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "region",
                    "in": "query",
                    "description": "If provided limits the rulesets to that region only.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "organization_id",
                    "in": "query",
                    "description": "Retrieves a list of resources that are associated to the specified organization ID. It only takes effect if the user is an admin.",
                    "required": false,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The collection of traffic filter routes",
                    "schema": {
                        "$ref": "#/definitions/TrafficFilterRulesets"
                    }
                },
                "500": {
                    "description": "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List all of the traffic filter rulesets.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "get-traffic-filter-rulesets"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/rulesets/{ruleset_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "ruleset_id",
                    "in": "path",
                    "description": "The mandatory ruleset ID.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "include_associations",
                    "in": "query",
                    "description": "Retrieves a list of resources that are associated to the specified ruleset.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "The container for a set of traffic filter rules.",
                    "schema": {
                        "$ref": "#/definitions/TrafficFilterRulesetInfo"
                    }
                },
                "404": {
                    "description": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves a list of resources that are associated to the specified ruleset.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "get-traffic-filter-ruleset"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/rulesets/{ruleset_id}/associations",
            "method": "get",
            "parameters": [
                {
                    "name": "ruleset_id",
                    "in": "path",
                    "description": "The mandatory ruleset ID.",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Associations referred by traffic filter rulesets were successfully returned",
                    "schema": {
                        "$ref": "#/definitions/RulesetAssociations"
                    }
                },
                "500": {
                    "description": "Error fetching deployments. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves a list of deployments that are associated to the specified ruleset.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "get-traffic-filter-ruleset-deployment-associations"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "show_security",
                    "in": "query",
                    "description": "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_metadata",
                    "in": "query",
                    "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plans",
                    "in": "query",
                    "description": "Whether to include the full current and pending plan information in the response - can be large per cluster",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_plan_logs",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_history",
                    "in": "query",
                    "description": "Whether to include the plan history with the current and pending plan information. The results can be very large per cluster.\n By default, if a given resource kind (e.g. Elasticsearch, Kibana, etc.) has more than 100 plans\n (which should be very rare, most likely caused by a bug) only 100 plans are returned for the given resource type:\n The first 10 plans, and the last 90 plans for that resource type.\n If ALL of the plans are desired, pass the `force_all_plan_history` parameter with a value of `true`.\n",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_defaults",
                    "in": "query",
                    "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "convert_legacy_plans",
                    "in": "query",
                    "description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_system_alerts",
                    "in": "query",
                    "description": "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field.",
                    "required": false,
                    "type": "integer",
                    "default": 0
                },
                {
                    "name": "show_settings",
                    "in": "query",
                    "description": "Whether to show cluster settings in the response.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_instance_metrics",
                    "in": "query",
                    "description": "Whether to show resources instance metrics in the response.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_instance_configurations",
                    "in": "query",
                    "description": "If true, will return details for each instance configuration referenced by the deployment.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "enrich_with_template",
                    "in": "query",
                    "description": "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "force_all_plan_history",
                    "in": "query",
                    "description": "Force show the entire plan history no matter how long.\n As noted in the `show_plan_history` parameter description, by default, a maximum of 100 plans are shown per resource. \n If `true`, this parameter overrides the default, and ALL plans are returned.\n Use with care as the plan history can be VERY large. Consider pairing with `show_plan_logs=false`.\n ",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "clear_transient",
                    "in": "query",
                    "description": "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "The Deployment info response",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/DeploymentGetResponse"
                    }
                },
                "401": {
                    "description": "You are not authorized to perform this action.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves information about a Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/apm/{ref_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "show_metadata",
                    "in": "query",
                    "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plans",
                    "in": "query",
                    "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_plan_logs",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_history",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_defaults",
                    "in": "query",
                    "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_settings",
                    "in": "query",
                    "description": "Whether to show cluster settings in the response.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "clear_transient",
                    "in": "query",
                    "description": "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response.",
                    "schema": {
                        "$ref": "#/definitions/ApmResourceInfo"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get info about an APM Resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-apm-resource-info"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/appsearch/{ref_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "show_metadata",
                    "in": "query",
                    "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plans",
                    "in": "query",
                    "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_plan_logs",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_history",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_defaults",
                    "in": "query",
                    "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_settings",
                    "in": "query",
                    "description": "Whether to show cluster settings in the response.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "clear_transient",
                    "in": "query",
                    "description": "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response.",
                    "schema": {
                        "$ref": "#/definitions/AppSearchResourceInfo"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get info about an App Search Resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-appsearch-resource-info"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/appsearch/{ref_id}/read_only_mode",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response",
                    "schema": {
                        "$ref": "#/definitions/ReadOnlyResponse"
                    }
                },
                "404": {
                    "description": "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Enable/Disable read-only mode on the given App Search resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-appsearch-read-only-mode"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/certificate-authority",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The certificate authority used to sign the certificates of this deployment",
                    "schema": {
                        "$ref": "#/definitions/CertificateAuthority"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Elasticsearch Resource cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the certificate authority used to sign the certificates of this deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-certificate-authority"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "show_security",
                    "in": "query",
                    "description": "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_metadata",
                    "in": "query",
                    "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plans",
                    "in": "query",
                    "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_plan_logs",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_history",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_defaults",
                    "in": "query",
                    "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "convert_legacy_plans",
                    "in": "query",
                    "description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true').",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_system_alerts",
                    "in": "query",
                    "description": "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field.",
                    "required": false,
                    "type": "integer",
                    "default": 0
                },
                {
                    "name": "show_settings",
                    "in": "query",
                    "description": "Whether to show cluster settings in the response.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "enrich_with_template",
                    "in": "query",
                    "description": "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "clear_transient",
                    "in": "query",
                    "description": "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response.",
                    "schema": {
                        "$ref": "#/definitions/ElasticsearchResourceInfo"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get info about an Elasticsearch Resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-es-resource-info"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/keystore",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one)",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The contents of the Elasticsearch keystore, with values redacted",
                    "schema": {
                        "$ref": "#/definitions/KeystoreContents"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.metadata_internal_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.metadata_internal_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Fetches the current fields and metadata (but not the values) of the keystore for the Elasticsearch resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-es-resource-keystore"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/remote-clusters",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "List of certificate based remote clusters for the resource",
                    "schema": {
                        "$ref": "#/definitions/RemoteResources"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the list of certificate based remote clusters for the elasticsearch resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-es-resource-remote-clusters"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/enterprise_search/{ref_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "show_metadata",
                    "in": "query",
                    "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plans",
                    "in": "query",
                    "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_plan_logs",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_history",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_defaults",
                    "in": "query",
                    "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_settings",
                    "in": "query",
                    "description": "Whether to show cluster settings in the response.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "clear_transient",
                    "in": "query",
                    "description": "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response.",
                    "schema": {
                        "$ref": "#/definitions/EnterpriseSearchResourceInfo"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get info about an Enterprise Search Resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-enterprise-search-resource-info"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/integrations_server/{ref_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "show_metadata",
                    "in": "query",
                    "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plans",
                    "in": "query",
                    "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_plan_logs",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_history",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_defaults",
                    "in": "query",
                    "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_settings",
                    "in": "query",
                    "description": "Whether to show cluster settings in the response.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "clear_transient",
                    "in": "query",
                    "description": "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response.",
                    "schema": {
                        "$ref": "#/definitions/IntegrationsServerResourceInfo"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get info about an Integrations Server Resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-integrations-server-resource-info"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/kibana/{ref_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "show_metadata",
                    "in": "query",
                    "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plans",
                    "in": "query",
                    "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "show_plan_logs",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_history",
                    "in": "query",
                    "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_plan_defaults",
                    "in": "query",
                    "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "convert_legacy_plans",
                    "in": "query",
                    "description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true').",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_settings",
                    "in": "query",
                    "description": "Whether to show cluster settings in the response.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "clear_transient",
                    "in": "query",
                    "description": "If set (defaults to false) then removes the transient section from all child resources, making it safe to reapply via an update",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response.",
                    "schema": {
                        "$ref": "#/definitions/KibanaResourceInfo"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get info about a Kibana Resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-kib-resource-info"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/migrate_template",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "template_id",
                    "in": "query",
                    "description": "The ID of the deployment template to migrate to",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The request was valid and the deployment can be migrated to the template with the provided ID.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentUpdateRequest"
                    }
                },
                "400": {
                    "description": "The deployment cannot be successfully migrated to the template with the provided ID.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "You are not authorized to perform this action.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns a deployment update request that would migrate this deployment to a different template.",
            "tags": [
                "Deployments"
            ],
            "operationId": "migrate-deployment-template"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/upgrade_assistant/status",
            "method": "get",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "target_version",
                    "in": "query",
                    "description": "If present, value is included in resource request to provide additional context (only supported for Kibana)",
                    "required": false,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The Upgrade Assistant returned the status successfully",
                    "schema": {
                        "$ref": "#/definitions/DeploymentUpgradeAssistantStatusResponse"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get details about an Elasticsearch resource belonging to a given deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-upgrade-assistant-status"
        },
        {
            "server_url": "",
            "path": "/organizations",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Organizations fetched successfully",
                    "schema": {
                        "$ref": "#/definitions/OrganizationList"
                    }
                },
                "401": {
                    "description": "User not found. (code: `user.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "user.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Fetch organizations available to the current user. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "list-organizations"
        },
        {
            "server_url": "",
            "path": "/organizations/invitations/{invitation_token}",
            "method": "get",
            "parameters": [
                {
                    "name": "invitation_token",
                    "in": "path",
                    "description": "Organization invitation token",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Organization invitation fetched successfully",
                    "schema": {
                        "$ref": "#/definitions/OrganizationInvitation"
                    }
                },
                "404": {
                    "description": "Invitation not found. (code: `organization.invitation_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invitation_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Gets a single invitation to an organization by token. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "get-organization-invitation"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Organization fetched successfully",
                    "schema": {
                        "$ref": "#/definitions/Organization"
                    }
                },
                "401": {
                    "description": "User not found. (code: `user.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "user.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_access"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Fetch a single organization by id. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "get-organization"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/domains",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The claimed domains for the organization",
                    "schema": {
                        "$ref": "#/definitions/GetOrganizationClaimedDomainsResponse"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get domain claims for the organization.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "domain-claim-get-domain-claims"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/idp",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The IdP info",
                    "schema": {
                        "$ref": "#/definitions/OrganizationIdp"
                    }
                },
                "404": {
                    "description": "IdP was not configured yet. (code: `org.idp.idp_not_configured`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "org.idp.idp_not_configured"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Gets the oranization's IdP. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "get-organization-idp"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/idp/metadata.xml",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The IdP info",
                    "schema": {
                        "type": "string"
                    }
                },
                "404": {
                    "description": "IdP was not configured yet. (code: `org.idp.idp_not_configured`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "org.idp.idp_not_configured"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Gets the oranization's IdP metadata.xml. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "get-organization-idp-metadata"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/invitations",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Organization invitations fetched successfully",
                    "schema": {
                        "$ref": "#/definitions/OrganizationInvitations"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Fetch open invitations to the selected organization. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "list-organization-invitations"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/members",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Organization members fetched successfully",
                    "schema": {
                        "$ref": "#/definitions/OrganizationMemberships"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Fetch users belonging to the selected organization. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "list-organization-members"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/role_mappings",
            "method": "get",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The IdP info",
                    "schema": {
                        "$ref": "#/definitions/GetRoleMappingsResponse"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Gets the organization role  mappings. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "get-role-mappings"
        },
        {
            "server_url": "",
            "path": "/stack/versions",
            "method": "get",
            "parameters": [
                {
                    "name": "show_deleted",
                    "in": "query",
                    "description": "Whether to show deleted stack versions or not",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "show_unusable",
                    "in": "query",
                    "description": "Whether to show versions that are unusable by the authenticated user",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "The list of all available Elastic Stack versions are retrieved, including the template version and structure.",
                    "schema": {
                        "$ref": "#/definitions/StackVersionConfigs"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "By default, retrieves only the available Elastic Stack versions. To retrieve all of the Elastic Stack versions, use the `show_deleted parameter`.",
            "tags": [
                "Stack"
            ],
            "operationId": "get-version-stacks"
        },
        {
            "server_url": "",
            "path": "/trusted-environments",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Trusted environments for this organization",
                    "schema": {
                        "$ref": "#/definitions/ElasticsearchClusterTrustSettings"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the list of trusted environments for the organization. If no organization is passed in, the organization attached to the user is assumed.",
            "tags": [
                "TrustedEnvironments"
            ],
            "operationId": "get-trusted-envs"
        },
        {
            "server_url": "",
            "path": "/users/auth/keys",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "The metadata for the API keys is retrieved.",
                    "schema": {
                        "$ref": "#/definitions/ApiKeysResponse"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves the metadata for all of the API keys that the user generated.",
            "tags": [
                "Authentication",
                "IamService"
            ],
            "operationId": "get-api-keys"
        },
        {
            "server_url": "",
            "path": "/users/auth/keys/{api_key_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "api_key_id",
                    "in": "path",
                    "description": "The API Key ID.",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The API key metadata is retrieved.",
                    "schema": {
                        "$ref": "#/definitions/ApiKeyResponse"
                    }
                },
                "404": {
                    "description": "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "api_keys.key_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves the metadata for an API key.",
            "tags": [
                "Authentication",
                "IamService"
            ],
            "operationId": "get-api-key"
        }
    ],
    "tools": [
        {
            "server_url": "",
            "path": "/account",
            "method": "put",
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "the current account",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "trust": {
                                "description": "Settings related to the level of trust of the clusters in this account",
                                "$ref": "#/definitions/AccountTrustSettings"
                            }
                        },
                        "description": "A request to update an account"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Account updated successfully",
                    "schema": {
                        "$ref": "#/definitions/AccountResponse"
                    }
                },
                "404": {
                    "description": "Account not found. (code: `accounts.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "accounts.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Updates the current account.",
            "tags": [
                "Accounts"
            ],
            "operationId": "update-current-account"
        },
        {
            "server_url": "",
            "path": "/account",
            "method": "patch",
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "All changes in the specified object are applied to the current account according to the JSON Merge Patch processing rules. Omitting existing fields causes the same values to be reapplied. Specifying a `null` value reverts the field to the default value, or removes the field when no default value exists.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Account updated successfully",
                    "schema": {
                        "$ref": "#/definitions/AccountResponse"
                    }
                },
                "404": {
                    "description": "Account not found. (code: `accounts.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "accounts.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Updates the current account.",
            "tags": [
                "Accounts"
            ],
            "operationId": "patch-current-account"
        },
        {
            "server_url": "",
            "path": "/deployments",
            "method": "post",
            "parameters": [
                {
                    "name": "request_id",
                    "in": "query",
                    "description": "An optional idempotency token - if two create requests share the same request_id token (min size 32 characters, max 128) then only one deployment will be created, the second request will return the info of that deployment (in the same format described below, but with blanks for auth-related fields)",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "validate_only",
                    "in": "query",
                    "description": "If true, will just validate the Deployment definition but will not perform the creation",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "template_id",
                    "in": "query",
                    "description": "An optional template id - if present, the referenced template will be used to fill in the resources field of the deployment creation request. If any resources are present in the request together with the template, the ones coming in the request will prevail and no merging with the template will be performed.",
                    "required": false,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The deployment definition",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "A name for the deployment; otherwise this will be the generated deployment id"
                            },
                            "resources": {
                                "description": "The Resources that will belong to this Deployment",
                                "$ref": "#/definitions/DeploymentCreateResources"
                            },
                            "settings": {
                                "description": "Additional configuration for this Deployment",
                                "$ref": "#/definitions/DeploymentCreateSettings"
                            },
                            "metadata": {
                                "description": "Additional information about this deployment",
                                "$ref": "#/definitions/DeploymentCreateMetadata"
                            },
                            "alias": {
                                "type": "string",
                                "description": "A user-defined alias to use in place of Cluster IDs for user-friendly URLs"
                            },
                            "region": {
                                "type": "string",
                                "description": "Identifier of the region to be used as the default for all the resources of the deployment"
                            },
                            "version": {
                                "type": "string",
                                "description": "The version for all the resources of the deployment (must be one of the supported versions). Defaults to the latest version if not specified."
                            }
                        },
                        "description": "A request for creating a new Deployment consisting of multiple clusters"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "The request was valid and a new deployment was created",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/DeploymentCreateResponse"
                    }
                },
                "202": {
                    "description": "The request was valid and deployment creation had already been started.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentCreateResponse"
                    }
                },
                "200": {
                    "description": "The request was valid (used when validate_only is true).",
                    "schema": {
                        "$ref": "#/definitions/DeploymentCreateResponse"
                    }
                },
                "400": {
                    "description": "The deployment request had errors.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "You are not authorized to perform this action.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Creates a Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "create-deployment"
        },
        {
            "server_url": "",
            "path": "/deployments/_search",
            "method": "post",
            "parameters": [
                {
                    "name": "minimal_metadata",
                    "in": "query",
                    "description": "Comma separated list of attributes to include in response for deployments found. Useful for reducing response size when retrieving many deployments. Use of this parameter moves the result to the minimal_metadata section of the response.",
                    "required": false,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "(Optional) The search query to run. When not specified, all of the deployments are matched.",
                    "required": false,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deprecated, use cursor for a more scalable approach to paging."
                            },
                            "cursor": {
                                "type": "string",
                                "description": "To retrieve the next page of hits, set this to the cursor value of the previous response. When set, all other fields are ignored."
                            },
                            "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum number of search results to return."
                            },
                            "query": {
                                "$ref": "#/definitions/QueryContainer"
                            },
                            "sort": {
                                "type": "array",
                                "description": "An array of fields to sort the search results by. Defaults to query rank and last modified date descending.",
                                "items": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        },
                        "description": "An Elasticsearch search request with a subset of options."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "The list of deployments that match the specified query and belong to the authenticated user.",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/DeploymentsSearchResponse"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves the information for all of the deployments that match the specified query.",
            "tags": [
                "Deployments"
            ],
            "operationId": "search-deployments"
        },
        {
            "server_url": "",
            "path": "/deployments/eligible-remote-clusters",
            "method": "post",
            "parameters": [
                {
                    "name": "version",
                    "in": "query",
                    "description": "The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters.",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "(Optional) The search query to run against all deployments containing eligible remote clusters. When not specified, all the eligible deployments are matched.",
                    "required": false,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deprecated, use cursor for a more scalable approach to paging."
                            },
                            "cursor": {
                                "type": "string",
                                "description": "To retrieve the next page of hits, set this to the cursor value of the previous response. When set, all other fields are ignored."
                            },
                            "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum number of search results to return."
                            },
                            "query": {
                                "$ref": "#/definitions/QueryContainer"
                            },
                            "sort": {
                                "type": "array",
                                "description": "An array of fields to sort the search results by. Defaults to query rank and last modified date descending.",
                                "items": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        },
                        "description": "An Elasticsearch search request with a subset of options."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "List of deployments which contains eligible remote clusters for a specific version",
                    "schema": {
                        "$ref": "#/definitions/DeploymentsSearchResponse"
                    }
                },
                "400": {
                    "description": "The provided version is invalid. (code: `stackpack.invalid_version`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "stackpack.invalid_version"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the list of deployments which contain eligible remote clusters for a specific version.",
            "tags": [
                "Deployments"
            ],
            "operationId": "search-eligible-remote-clusters"
        },
        {
            "server_url": "",
            "path": "/deployments/extensions",
            "method": "post",
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "the data that creates the extension",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "extension_type",
                            "name",
                            "version"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The extension name. Only ASCII alphanumeric and [_.-] characters allowed"
                            },
                            "description": {
                                "type": "string",
                                "description": "The extension description."
                            },
                            "download_url": {
                                "type": "string",
                                "description": "The URL to download the extension archive."
                            },
                            "extension_type": {
                                "type": "string",
                                "description": "The extension type.",
                                "enum": [
                                    "plugin",
                                    "bundle"
                                ]
                            },
                            "version": {
                                "type": "string",
                                "description": "The Elasticsearch version."
                            }
                        },
                        "description": "The body of a request to create a new extension"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "The extension that was just created.",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/Extension"
                    }
                },
                "404": {
                    "description": "Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.no_user_id"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "409": {
                    "description": "An extension already exists with the generated id. Please try again. (code: `extensions.id_already_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.id_already_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Creates the extension.\n The extensions API supports two types of usage patterns.\n A). Specify a `download_url`, http or https URL,  where the extension is currently hosted. This will result in extension being copied to elastic repository.\n B). Create only the extension metadata using the `POST` endpoint and then use `PUT` to upload the extension file. Leave the `download_url` unspecified in this case.\n",
            "tags": [
                "Extensions"
            ],
            "operationId": "create-extension"
        },
        {
            "server_url": "",
            "path": "/deployments/extensions/{extension_id}",
            "method": "post",
            "parameters": [
                {
                    "name": "extension_id",
                    "in": "path",
                    "description": "Id of an extension",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The extension update data.",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "extension_type",
                            "name",
                            "version"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The extension name."
                            },
                            "description": {
                                "type": "string",
                                "description": "The extension description."
                            },
                            "download_url": {
                                "type": "string",
                                "description": "The URL to download the extension archive."
                            },
                            "extension_type": {
                                "type": "string",
                                "description": "The extension type.",
                                "enum": [
                                    "plugin",
                                    "bundle"
                                ]
                            },
                            "version": {
                                "type": "string",
                                "description": "The Elasticsearch version."
                            }
                        },
                        "description": "The body of a request to update an extension"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Extension updated successfully.",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/Extension"
                    }
                },
                "401": {
                    "description": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.unauthorised",
                                "extensions.no_user_id"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "The extension you want does not exist. (code: `extensions.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "409": {
                    "description": "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.version_conflict"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Updates an extension.",
            "tags": [
                "Extensions"
            ],
            "operationId": "update-extension"
        },
        {
            "server_url": "",
            "path": "/deployments/extensions/{extension_id}",
            "method": "put",
            "parameters": [
                {
                    "name": "extension_id",
                    "in": "path",
                    "description": "Id of an extension",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "file",
                    "in": "formData",
                    "description": "Zip file that contains the extension",
                    "required": true,
                    "type": "file"
                }
            ],
            "responses": {
                "200": {
                    "description": "Archive uploaded successfully.",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/Extension"
                    }
                },
                "401": {
                    "description": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.unauthorised",
                                "extensions.no_user_id"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "The extension you want does not exist. (code: `extensions.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "Could not accept the extensions file. (code: `extensions.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Uploads archive for an extension.",
            "tags": [
                "Extensions"
            ],
            "operationId": "upload-extension"
        },
        {
            "server_url": "",
            "path": "/deployments/extensions/{extension_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "extension_id",
                    "in": "path",
                    "description": "Id of an extension",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Extension deleted successfully.",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "401": {
                    "description": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.unauthorised",
                                "extensions.no_user_id"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "The extension requested does not exist. (code: `extensions.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "409": {
                    "description": "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "extensions.version_conflict"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Deletes a Extension.",
            "tags": [
                "Extensions"
            ],
            "operationId": "delete-extension"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/link-ids/_claim",
            "method": "post",
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "The specification for traffic filter claimed link id.",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "region"
                        ],
                        "properties": {
                            "link_id": {
                                "type": "string",
                                "description": "Link id. A GCP private service connect ID or AWS VPC endpoint ID"
                            },
                            "azure_endpoint_name": {
                                "type": "string",
                                "description": "Name of the Azure Private Endpoint to allow connections from"
                            },
                            "azure_endpoint_guid": {
                                "type": "string",
                                "description": "Resource GUID of the Azure Private Endpoint to allow connections from"
                            },
                            "region": {
                                "type": "string",
                                "description": "The claimed link id can be used only for traffic filter in the specific region"
                            }
                        },
                        "description": "The specification for traffic filter claimed link id."
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "The ruleset definition is valid and the creation has started.",
                    "schema": {
                        "$ref": "#/definitions/TrafficFilterClaimedLinkIdInfo"
                    }
                },
                "500": {
                    "description": "Error creating the traffic filter ruleset. (code: `traffic_filter_claimed_link_id.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter_claimed_link_id.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Claim the ownership of a link id.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "claim-traffic-filter-link-id"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/link-ids/_unclaim",
            "method": "post",
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "The specification for traffic filter claimed link id.",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "region"
                        ],
                        "properties": {
                            "link_id": {
                                "type": "string",
                                "description": "Link id. A GCP private service connect ID or AWS VPC endpoint ID"
                            },
                            "azure_endpoint_name": {
                                "type": "string",
                                "description": "Name of the Azure Private Endpoint to allow connections from"
                            },
                            "azure_endpoint_guid": {
                                "type": "string",
                                "description": "Resource GUID of the Azure Private Endpoint to allow connections from"
                            },
                            "region": {
                                "type": "string",
                                "description": "The claimed link id can be used only for traffic filter in the specific region"
                            }
                        },
                        "description": "The specification for traffic filter claimed link id."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "The claimed link id was successfully deleted.",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "400": {
                    "description": "Error validating the request. (code: `traffic_filter_claimed_link_id.invalid_input`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter_claimed_link_id.invalid_input"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Error deleting the traffic filter claimed link id. (code: `traffic_filter_claimed_link_id.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter_claimed_link_id.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Unclaims the ownership of a link id.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "unclaim-traffic-filter-link-id"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/rulesets",
            "method": "post",
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "The specification for traffic filter ruleset.",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "include_by_default",
                            "name",
                            "region",
                            "rules",
                            "type"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the ruleset"
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the ruleset"
                            },
                            "type": {
                                "type": "string",
                                "description": "Type of the ruleset"
                            },
                            "include_by_default": {
                                "type": "boolean",
                                "description": "Should the ruleset be automatically included in the new deployments"
                            },
                            "region": {
                                "type": "string",
                                "description": "The ruleset can be attached only to deployments in the specific region"
                            },
                            "rules": {
                                "type": "array",
                                "description": "List of rules",
                                "items": {
                                    "$ref": "#/definitions/TrafficFilterRule"
                                }
                            }
                        },
                        "description": "The specification for traffic filter ruleset."
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "The ruleset definition is valid and the creation has started.",
                    "schema": {
                        "$ref": "#/definitions/TrafficFilterRulesetResponse"
                    }
                },
                "500": {
                    "description": "Error creating the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Creates a ruleset that consists of a set of rules.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "create-traffic-filter-ruleset"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/rulesets/{ruleset_id}",
            "method": "put",
            "parameters": [
                {
                    "name": "ruleset_id",
                    "in": "path",
                    "description": "The mandatory ruleset ID.",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The specification for traffic filter ruleset.",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "include_by_default",
                            "name",
                            "region",
                            "rules",
                            "type"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the ruleset"
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the ruleset"
                            },
                            "type": {
                                "type": "string",
                                "description": "Type of the ruleset"
                            },
                            "include_by_default": {
                                "type": "boolean",
                                "description": "Should the ruleset be automatically included in the new deployments"
                            },
                            "region": {
                                "type": "string",
                                "description": "The ruleset can be attached only to deployments in the specific region"
                            },
                            "rules": {
                                "type": "array",
                                "description": "List of rules",
                                "items": {
                                    "$ref": "#/definitions/TrafficFilterRule"
                                }
                            }
                        },
                        "description": "The specification for traffic filter ruleset."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "The ruleset definition was valid and the update has started.",
                    "schema": {
                        "$ref": "#/definitions/TrafficFilterRulesetResponse"
                    }
                },
                "404": {
                    "description": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Updates the ruleset with the definition.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "update-traffic-filter-ruleset"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/rulesets/{ruleset_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "ruleset_id",
                    "in": "path",
                    "description": "The mandatory ruleset ID.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ignore_associations",
                    "in": "query",
                    "description": "When true, ignores the associations and deletes the ruleset. When false, recognizes the associations, which prevents the deletion of the rule set.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "The traffic filter ruleset was successfully deleted.",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Error deleting the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Deletes the ruleset by ID.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "delete-traffic-filter-ruleset"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/rulesets/{ruleset_id}/associations",
            "method": "post",
            "parameters": [
                {
                    "name": "ruleset_id",
                    "in": "path",
                    "description": "The mandatory ruleset ID.",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "Mandatory ruleset association description",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "entity_type",
                            "id"
                        ],
                        "properties": {
                            "entity_type": {
                                "type": "string",
                                "description": "Type of the traffic filter ruleset association, such as 'deployment', 'cluster'"
                            },
                            "id": {
                                "type": "string",
                                "description": "ID of the entity, such as the deployment ID or Elasticsearch cluster ID."
                            }
                        },
                        "description": "The association with a ruleset or user auth token for a deployment, template, or product."
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Create association request was valid and the association has been created",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "200": {
                    "description": "Create association request was valid and the association already exists",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Creation failed. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Applies the ruleset to the specified deployment.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "create-traffic-filter-ruleset-association"
        },
        {
            "server_url": "",
            "path": "/deployments/traffic-filter/rulesets/{ruleset_id}/associations/{association_type}/{associated_entity_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "ruleset_id",
                    "in": "path",
                    "description": "The mandatory ruleset ID.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "association_type",
                    "in": "path",
                    "description": "Association type",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "associated_entity_id",
                    "in": "path",
                    "description": "Associated entity ID",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Delete association request was valid and the association has been deleted",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "The traffic filter ruleset association cannot be found. (code: `traffic_filter.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Deletion failed. (code: `traffic_filter.request_execution_failed`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "traffic_filter.request_execution_failed"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Deletes the traffic rules in the ruleset from the deployment.",
            "tags": [
                "DeploymentsTrafficFilter"
            ],
            "operationId": "delete-traffic-filter-ruleset-association"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}",
            "method": "put",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "hide_pruned_orphans",
                    "in": "query",
                    "description": "Whether or not to hide orphaned resources that were shut down (relevant if prune on the request is true)",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "skip_snapshot",
                    "in": "query",
                    "description": "Whether or not to skip snapshots before shutting down orphaned resources (relevant if prune on the request is true)",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "validate_only",
                    "in": "query",
                    "description": "If true, will just validate the Deployment definition but will not perform the update",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "version",
                    "in": "query",
                    "description": "If specified then checks for conflicts against the version stored in the persistent store (returned in 'x-cloud-resource-version' of the GET request)",
                    "required": false,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The deployment definition",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "prune_orphans"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "A new name for the deployment, otherwise stays the same."
                            },
                            "prune_orphans": {
                                "type": "boolean",
                                "description": "Whether or not to prune orphan resources that are no longer mentioned in this request. Note that resourcesare tracked by ref_id, and if a resource's ref_id is changed, any previous running resources created with that previousref_id are considered to be orphaned as well."
                            },
                            "resources": {
                                "description": "New information about the Resources that will have this Deployment, otherwise they stay the same",
                                "$ref": "#/definitions/DeploymentUpdateResources"
                            },
                            "settings": {
                                "description": "Any new configuration for the current deployment object. If there is no new configuration the value is unchanged.",
                                "$ref": "#/definitions/DeploymentUpdateSettings"
                            },
                            "metadata": {
                                "description": "Any new information about the current deployment object. If there is no new information the value is unchanged.",
                                "$ref": "#/definitions/DeploymentUpdateMetadata"
                            },
                            "alias": {
                                "type": "string",
                                "description": "A user-defined alias to use in place of Cluster IDs for user-friendly URLs"
                            }
                        },
                        "description": "A request for updating a Deployment consisting of multiple resources"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "The request was valid and the deployment was updated.",
                    "headers": {
                        "x-cloud-resource-version": {
                            "type": "string",
                            "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                        },
                        "x-cloud-resource-created": {
                            "type": "string",
                            "description": "The date-time when the resource was created (ISO format relative to UTC)"
                        },
                        "x-cloud-resource-last-modified": {
                            "type": "string",
                            "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/DeploymentUpdateResponse"
                    }
                },
                "400": {
                    "description": "The deployment request had errors.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "You are not authorized to perform this action.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Updates a Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "update-deployment"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/_restore",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "restore_snapshot",
                    "in": "query",
                    "description": "Whether or not to restore a snapshot for those resources that allow it.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "The request was valid and the resources of the deployment were restored.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentRestoreResponse"
                    }
                },
                "400": {
                    "description": "There are Elasticsearch resources in the deployment which are not shut down.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "You are not authorized to perform this action.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Restores all resources in a Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "restore-deployment"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/_shutdown",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "hide",
                    "in": "query",
                    "description": "Whether or not to hide the deployment and its resources.Only applicable for Platform administrators.",
                    "required": false,
                    "type": "boolean"
                },
                {
                    "name": "skip_snapshot",
                    "in": "query",
                    "description": "Whether or not to skip snapshots before shutting down the resources",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "The request was valid and the resources of the deployment were shutdown.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentShutdownResponse"
                    }
                },
                "400": {
                    "description": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.restricted_parameter"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "You are not authorized to perform this action.",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Shuts down all resources in a Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "shutdown-deployment"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/apm/{ref_id}/_reset-token",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "202": {
                    "description": "Response containing the new secret token, plan to apply it starts",
                    "schema": {
                        "$ref": "#/definitions/ApmCrudResponse"
                    }
                },
                "400": {
                    "description": "Reset token is not supported when APM is managed by Elastic Agent. (code: `clusters.cluster_plan_state_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "clusters.cluster_plan_state_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Reset the token of an APM resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "deployment-apm-reset-secret-token"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/appsearch/{ref_id}/read_only_mode",
            "method": "put",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "read-only request body",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "enabled"
                        ],
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "Enabled or disabled read-only mode"
                            }
                        },
                        "description": "Read-only mode request payload"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response",
                    "schema": {
                        "$ref": "#/definitions/ReadOnlyResponse"
                    }
                },
                "404": {
                    "description": "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Enable/Disable read-only mode on the given App Search resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "set-appsearch-read-only-mode"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-ccr",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "validate_only",
                    "in": "query",
                    "description": "When `true`, will not enable CCR but returns warnings if any elements may lose availability during CCR enablement",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Migrates the specified Elasticsearch resource and its associated Kibana to enable CCR (if supported).",
            "tags": [
                "Deployments"
            ],
            "operationId": "enable-deployment-resource-ccr"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-ilm",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "validate_only",
                    "in": "query",
                    "description": "When `true`, does not enable ILM but returns warnings if any applications may lose availability during ILM migration.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "Information to build the ILM policies that will be created",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "index_patterns"
                        ],
                        "properties": {
                            "index_patterns": {
                                "type": "array",
                                "description": "A locally-unique user-specified id for Kibana",
                                "items": {
                                    "$ref": "#/definitions/IndexPattern"
                                }
                            }
                        },
                        "description": "Request sent to enable ILM on a deployment."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Migrates the specified Elasticsearch resource to use ILM.",
            "tags": [
                "Deployments"
            ],
            "operationId": "enable-deployment-resource-ilm"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-slm",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "validate_only",
                    "in": "query",
                    "description": "When `true`, does not enable SLM but returns warnings if any applications may lose availability during SLM migration.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Migrates the specified Elasticsearch resource to use SLM.",
            "tags": [
                "Deployments"
            ],
            "operationId": "enable-deployment-resource-slm"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/_reset-password",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "check_completion",
                    "in": "query",
                    "description": "If true, will not reset elastic user password and instead will return a status code signaling whether or not the current credentials are ready to use (eg from creation or the last call to _reset_password)",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "The password reset was out carried successfully",
                    "schema": {
                        "$ref": "#/definitions/ElasticsearchElasticUserPasswordResetResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "Failed to reset the 'elastic' user's password. (code: `deployments.elasticsearch.password_reset_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.elasticsearch.password_reset_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Resets the password of the 'elastic' user.",
            "tags": [
                "Deployments"
            ],
            "operationId": "reset-elasticsearch-user-password"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/_restart",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "restore_snapshot",
                    "in": "query",
                    "description": "When set to true and restoring from shutdown, then will restore the cluster from the last snapshot (if available).",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "skip_snapshot",
                    "in": "query",
                    "description": "If true, will not take a snapshot of the cluster before restarting.",
                    "required": false,
                    "type": "boolean",
                    "default": true
                },
                {
                    "name": "cancel_pending",
                    "in": "query",
                    "description": "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "group_attribute",
                    "in": "query",
                    "description": "Indicates the property or properties used to divide the list of instances to restart in groups. Valid options are: '\\_\\_all\\_\\_' (restart all at once), '\\_\\_zone\\_\\_' by logical zone, '\\_\\_name\\_\\_' one instance at a time, or a comma-separated list of attributes of the instances",
                    "required": false,
                    "type": "string",
                    "default": "__zone__"
                },
                {
                    "name": "shard_init_wait_time",
                    "in": "query",
                    "description": "The time, in seconds, to wait for shards that show no progress of initializing, before rolling the next group (default: 10 minutes)",
                    "required": false,
                    "type": "integer",
                    "default": 600
                }
            ],
            "responses": {
                "202": {
                    "description": "The restart command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "422": {
                    "description": "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_plan_change_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Restarts an Elasticsearch Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.",
            "tags": [
                "Deployments"
            ],
            "operationId": "restart-deployment-es-resource"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/_shutdown",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "hide",
                    "in": "query",
                    "description": "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators.",
                    "required": false,
                    "type": "boolean"
                },
                {
                    "name": "skip_snapshot",
                    "in": "query",
                    "description": "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible).",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "400": {
                    "description": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.restricted_parameter"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Shutdown Elasticsearch Resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "shutdown-deployment-es-resource"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/eligible-remote-clusters",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "(Optional) The search query to run against all deployments containing eligible remote clusters. When not specified, all the eligible deployments are matched.",
                    "required": false,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Deprecated, use cursor for a more scalable approach to paging."
                            },
                            "cursor": {
                                "type": "string",
                                "description": "To retrieve the next page of hits, set this to the cursor value of the previous response. When set, all other fields are ignored."
                            },
                            "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum number of search results to return."
                            },
                            "query": {
                                "$ref": "#/definitions/QueryContainer"
                            },
                            "sort": {
                                "type": "array",
                                "description": "An array of fields to sort the search results by. Defaults to query rank and last modified date descending.",
                                "items": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        },
                        "description": "An Elasticsearch search request with a subset of options."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "List of deployments which contains eligible remote clusters for the resource",
                    "schema": {
                        "$ref": "#/definitions/DeploymentsSearchResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "The resource specified doesn't yet have a valid version for the current plan or the pending plan. (code: `deployments.resource_does_not_have_a_valid_version`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.resource_does_not_have_a_valid_version"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the list of deployments which contain eligible remote clusters for the elasticsearch resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "get-deployment-es-resource-eligible-remote-clusters"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/keystore",
            "method": "patch",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one)",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The new settings that will be applied to the keystore of the Elasticsearch resource.",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "secrets"
                        ],
                        "properties": {
                            "secrets": {
                                "type": "object",
                                "description": "List of secrets",
                                "additionalProperties": {
                                    "$ref": "#/definitions/KeystoreSecret"
                                }
                            }
                        },
                        "description": "The contents of the Elasticsearch keystore."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "The new contents of the Elasticsearch keystore",
                    "schema": {
                        "$ref": "#/definitions/KeystoreContents"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.metadata_internal_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.metadata_internal_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Adds the specified values to the Elasticsearch keystore, or removes the keys for the unspecified values.",
            "tags": [
                "Deployments"
            ],
            "operationId": "set-deployment-es-resource-keystore"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/elasticsearch/{ref_id}/remote-clusters",
            "method": "put",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "List of certificate based remote clusters for the resource",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "resources"
                        ],
                        "properties": {
                            "resources": {
                                "type": "array",
                                "description": "The remote resources",
                                "items": {
                                    "$ref": "#/definitions/RemoteResourceRef"
                                }
                            }
                        },
                        "description": "The list of resources used as remote clusters"
                    }
                }
            ],
            "responses": {
                "202": {
                    "description": "The Remote Clusters were updated",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Overwrites or creates the list of certificate based remote clusters for the elasticsearch resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "set-deployment-es-resource-remote-clusters"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/_restore",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "elasticsearch",
                        "kibana",
                        "apm",
                        "appsearch",
                        "enterprise_search",
                        "integrations_server"
                    ]
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one)",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "restore_snapshot",
                    "in": "query",
                    "description": "Whether or not to restore a snapshot for those resources that allow it.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard Deployment Resource Crud Response",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCrudResponse"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "* The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)\n* The resource is not shut down. (code: `deployments.resource_not_shutdown`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.resource_does_not_have_a_pending_plan",
                                "deployments.resource_not_shutdown"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Restores a shutdown resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "restore-deployment-resource"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/_start",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "202": {
                    "description": "The start command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found",
                                "deployments.instances_missing_on_update_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.instance_update_prohibited_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Starts all instances belonging to a Deployment Resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "start-deployment-resource-instances-all"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/_stop",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "202": {
                    "description": "The stop command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found",
                                "deployments.instances_missing_on_update_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.instance_update_prohibited_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Stops all instances belonging to a Deployment Resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "stop-deployment-resource-instances-all"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/maintenance-mode/_start",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "202": {
                    "description": "The start maintenance command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found",
                                "deployments.instances_missing_on_update_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.instance_update_prohibited_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Starts maintenance mode of all instances belonging to a Deployment Resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "start-deployment-resource-instances-all-maintenance-mode"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/maintenance-mode/_stop",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "202": {
                    "description": "The stop maintenance mode command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found",
                                "deployments.instances_missing_on_update_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.instance_update_prohibited_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Stops maintenance mode of all instances belonging to a Deployment Resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "stop-deployment-resource-instances-all-maintenance-mode"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/_start",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "instance_ids",
                    "in": "path",
                    "description": "A comma-separated list of instance identifiers.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "csv"
                },
                {
                    "name": "ignore_missing",
                    "in": "query",
                    "description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "202": {
                    "description": "The start command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found",
                                "deployments.instances_missing_on_update_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.instance_update_prohibited_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Starts instances belonging to a Deployment Resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "start-deployment-resource-instances"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/_stop",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "instance_ids",
                    "in": "path",
                    "description": "A comma-separated list of instance identifiers.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "csv"
                },
                {
                    "name": "ignore_missing",
                    "in": "query",
                    "description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "202": {
                    "description": "The stop command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found",
                                "deployments.instances_missing_on_update_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.instance_update_prohibited_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Stops instances belonging to a Deployment Resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "stop-deployment-resource-instances"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/maintenance-mode/_start",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "instance_ids",
                    "in": "path",
                    "description": "A comma-separated list of instance identifiers.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "csv"
                },
                {
                    "name": "ignore_missing",
                    "in": "query",
                    "description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "202": {
                    "description": "The start maintenance command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found",
                                "deployments.instances_missing_on_update_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.instance_update_prohibited_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Starts maintenance mode of instances belonging to a Deployment Resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "start-deployment-resource-maintenance-mode"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/maintenance-mode/_stop",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "instance_ids",
                    "in": "path",
                    "description": "A comma-separated list of instance identifiers.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "csv"
                },
                {
                    "name": "ignore_missing",
                    "in": "query",
                    "description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "202": {
                    "description": "The stop maintenance mode command was issued successfully.",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found",
                                "deployments.instances_missing_on_update_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.instance_update_prohibited_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Stops maintenance mode of instances belonging to a Resource.",
            "tags": [
                "Deployments"
            ],
            "operationId": "stop-deployment-resource-maintenance-mode"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{resource_kind}/{ref_id}/plan/pending",
            "method": "delete",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "resource_kind",
                    "in": "path",
                    "description": "The kind of resource",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "elasticsearch",
                        "kibana",
                        "apm",
                        "appsearch",
                        "enterprise_search",
                        "integrations_server"
                    ]
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one)",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "force_delete",
                    "in": "query",
                    "description": "When `true`, deletes the pending plan instead of attempting a graceful cancellation. The default is `false`.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                },
                {
                    "name": "ignore_missing",
                    "in": "query",
                    "description": "When `true`, returns successfully, even when plans are missing. The default is `false`.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard Deployment Resource Crud Response",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCrudResponse"
                    }
                },
                "404": {
                    "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.resource_does_not_have_a_pending_plan"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Cancels the pending plan of a Resource belonging to a given Deployment.",
            "tags": [
                "Deployments"
            ],
            "operationId": "cancel-deployment-resource-pending-plan"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_restart",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "stateless_resource_kind",
                    "in": "path",
                    "description": "The kind of stateless resource",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "kibana",
                        "apm",
                        "appsearch",
                        "enterprise_search",
                        "integrations_server"
                    ]
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "cancel_pending",
                    "in": "query",
                    "description": "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "202": {
                    "description": "The restart command was issued successfully",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "422": {
                    "description": "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_plan_change_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Restarts a Stateless Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.",
            "tags": [
                "Deployments"
            ],
            "operationId": "restart-deployment-stateless-resource"
        },
        {
            "server_url": "",
            "path": "/deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_shutdown",
            "method": "post",
            "parameters": [
                {
                    "name": "deployment_id",
                    "in": "path",
                    "description": "Identifier for the Deployment.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "stateless_resource_kind",
                    "in": "path",
                    "description": "The kind of stateless resource",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "kibana",
                        "apm",
                        "appsearch",
                        "enterprise_search",
                        "integrations_server"
                    ]
                },
                {
                    "name": "ref_id",
                    "in": "path",
                    "description": "User-specified RefId for the Resource (or '_main' if there is only one).",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "hide",
                    "in": "query",
                    "description": "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators.",
                    "required": false,
                    "type": "boolean"
                },
                {
                    "name": "skip_snapshot",
                    "in": "query",
                    "description": "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible)",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Standard response",
                    "schema": {
                        "$ref": "#/definitions/DeploymentResourceCommandResponse"
                    }
                },
                "400": {
                    "description": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.restricted_parameter"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_not_found",
                                "deployments.deployment_resource_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "500": {
                    "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "deployments.deployment_resource_no_longer_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Shut down Stateless Resource belonging to a given Deployment.\nKibana cannot be shut down on Elasticsearch Service as it is required for Elasticsearch administrative functions, such as Snapshot Lifecycle Management and version upgrades.",
            "tags": [
                "Deployments"
            ],
            "operationId": "shutdown-deployment-stateless-resource"
        },
        {
            "server_url": "",
            "path": "/organizations/invitations/{invitation_token}/_accept",
            "method": "post",
            "parameters": [
                {
                    "name": "invitation_token",
                    "in": "path",
                    "description": "Organization invitation token",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Organization invitation accepted successfully",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "400": {
                    "description": "User already belongs to organization. (code: `organization.user_organization_already_belongs`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.user_organization_already_belongs"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user authentication is not valid. (code: `root.invalid_authentication`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "root.invalid_authentication"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "* Organization not found. (code: `organization.not_found`)\n* User not found. (code: `user.not_found`)\n* Invitation not found. (code: `organization.invitation_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found",
                                "user.not_found",
                                "organization.invitation_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Accepts an organization invitation. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "accept-organization-invitation"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}",
            "method": "put",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The organization to update",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The organization's friendly name"
                            },
                            "default_disk_usage_alerts_enabled": {
                                "type": "boolean",
                                "description": "Whether the default disk alerts are enabled"
                            },
                            "notifications_allowed_email_domains": {
                                "type": "array",
                                "description": "The list of allowed domains for notification-email recipients",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "billing_contacts": {
                                "type": "array",
                                "description": "The list of contacts for billing notifications",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "operational_contacts": {
                                "type": "array",
                                "description": "The list of contacts for operational notifications",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "A request to create or update an organization"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Organization updated successfully",
                    "schema": {
                        "$ref": "#/definitions/Organization"
                    }
                },
                "400": {
                    "description": "* Name must be between 2 and 30 characters. (code: `organization.invalid_name`)\n* User already has an organization. (code: `organization.user_organization_already_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_name",
                                "organization.user_organization_already_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "You are not authorized to perform this action",
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user does not have access to the requested organization. (code: `organization.invalid_access`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invalid_access"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "> WARNING\n> This endpoint is deprecated and scheduled to be removed in the next major version.\n\nUpdates an existing organization. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "update-organization"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/domains",
            "method": "delete",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The domain claim to remove",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "domain_claim_request"
                        ],
                        "properties": {
                            "domain_claim_request": {
                                "type": "string",
                                "description": "The request to remove a domain claim"
                            }
                        }
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "With status 200 ok to signal the domain has been unclaimed",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "An IdP is configured for the organization. (code: `org.idp.idp_configured`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "org.idp.idp_configured"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "409": {
                    "description": "Concurrent organization modification. (code: `org.domain_claim.concurrent_organization_modification`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "org.domain_claim.concurrent_organization_modification"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete domain claim.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "domain-claim-delete"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/domains/_generate_verification_code",
            "method": "post",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The verification code request",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "domain_claim_request"
                        ],
                        "properties": {
                            "domain_claim_request": {
                                "type": "string",
                                "description": "The domain claim request"
                            }
                        }
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "The verification code response",
                    "schema": {
                        "$ref": "#/definitions/VerificationCodeResponse"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Generate verification code for the domain claim challenge.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "domain-claim-generate-verification-code"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/domains/_verify",
            "method": "post",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The verification code request",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "domain_claim_request"
                        ],
                        "properties": {
                            "domain_claim_request": {
                                "type": "string",
                                "description": "The domain claim request"
                            }
                        }
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "With status 200 ok to signal the domain has been claimed",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "449": {
                    "description": "The challenge can not be verified at the moment, please retry later",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "400": {
                    "description": "Domain claim already exists. (code: `org.domain_claim.already_exists`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "org.domain_claim.already_exists"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "409": {
                    "description": "Concurrent organization modification. (code: `org.domain_claim.concurrent_organization_modification`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "org.domain_claim.concurrent_organization_modification"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Verify domain claim challenge.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "domain-claim-verify-domain"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/idp",
            "method": "put",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The IdP configuration",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "enabled",
                            "login_identifier_prefix",
                            "saml_idp"
                        ],
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "Whether or not the IdP is enabled"
                            },
                            "login_identifier_prefix": {
                                "type": "string",
                                "description": "The prefix of the login identifier that will be generated"
                            },
                            "saml_idp": {
                                "description": "The SAML2 IdP configuration",
                                "$ref": "#/definitions/SamlIdp"
                            }
                        },
                        "description": "A request to setup an organization IdP"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "The IdP info",
                    "schema": {
                        "$ref": "#/definitions/OrganizationIdp"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Sets up an organization's IdP. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "setup-organization-idp"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/idp",
            "method": "delete",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The IdP was successfully removed",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "Organization IdP not configured. (code: `org.idp.idp_not_configured`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "org.idp.idp_not_configured"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Tear down up an organization's IdP. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "teardown-organization-idp"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/invitations",
            "method": "post",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The organization invitations to create or refresh",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "emails"
                        ],
                        "properties": {
                            "emails": {
                                "type": "array",
                                "description": "The email addresses to invite to the organization",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "expires_in": {
                                "type": "string",
                                "description": "The date and time when the invitation expires. Defaults to three days from now."
                            },
                            "role_assignments": {
                                "description": "The roles that will be assigned to users once they accept the invitation. Currently unavailable in self-hosted ECE.",
                                "$ref": "#/definitions/RoleAssignments"
                            }
                        },
                        "description": "A request to create one or more invitations to an organization"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Organization invitations created successfully",
                    "schema": {
                        "$ref": "#/definitions/OrganizationInvitations"
                    }
                },
                "400": {
                    "description": "* Invitation email was not valid. (code: `organization.invitation_invalid_email`)\n* Invitation already sent. (code: `organization.invitation_already_exists`)\n* User already belongs to organization. (code: `organization.user_organization_already_belongs`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invitation_invalid_email",
                                "organization.invitation_already_exists",
                                "organization.user_organization_already_belongs"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "The current user authentication is not valid. (code: `root.invalid_authentication`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "root.invalid_authentication"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "* Organization not found. (code: `organization.not_found`)\n* User not found. (code: `user.not_found`)\n* Invitation sender does not belong to organization. (code: `organization.user_organization_does_not_belong`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found",
                                "user.not_found",
                                "organization.user_organization_does_not_belong"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "429": {
                    "description": "Request exceeds organization invitation creation rate limits. (code: `organization.invitations_rate_limit_exceeded`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.invitations_rate_limit_exceeded"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Creates or refreshes organization invitations. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "create-organization-invitations"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/invitations/{invitation_tokens}",
            "method": "delete",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "invitation_tokens",
                    "in": "path",
                    "description": "CSV list of Invitation tokens",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Organization invitations deleted successfully",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "400": {
                    "description": "No valid invitation token was supplied. (code: `root.invalid_data`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "root.invalid_data"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "404": {
                    "description": "* Organization not found. (code: `organization.not_found`)\n* Invitation not found. (code: `organization.invitation_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found",
                                "organization.invitation_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Deletes one or more organization invitations. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "delete-organization-invitations"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/members/{user_ids}",
            "method": "delete",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "user_ids",
                    "in": "path",
                    "description": "CSV list of User identifiers",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "force",
                    "in": "query",
                    "description": "Whether or not to force the removal of Org memberships (effective only for Platform Admins)",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }
            ],
            "responses": {
                "200": {
                    "description": "Organization membership deleted successfully",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "* User not found. (code: `user.not_found`)\n* Organization not found. (code: `organization.not_found`)\n* Organization membership not found. (code: `organization.membership_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "user.not_found",
                                "organization.not_found",
                                "organization.membership_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Deletes one or more organization memberships. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "delete-organization-memberships"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/role_mappings",
            "method": "put",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The role  mappings to update",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "mappings"
                        ],
                        "properties": {
                            "mappings": {
                                "type": "array",
                                "description": "The rules for mapping role assignments in the organization",
                                "items": {
                                    "$ref": "#/definitions/RoleMapping"
                                }
                            }
                        }
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "An empty response",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "400": {
                    "description": "Validation error. (code: `org.role_mapping_rule.syntax_error`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "org.role_mapping_rule.syntax_error"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Updates the role assignments applicable when logging via SSO. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "update-role-mappings"
        },
        {
            "server_url": "",
            "path": "/organizations/{organization_id}/role_mappings",
            "method": "delete",
            "parameters": [
                {
                    "name": "organization_id",
                    "in": "path",
                    "description": "Identifier for the Organization",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The mappings were successfully deleted",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "Organization not found. (code: `organization.not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "organization.not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Deletes the organization role  mappings. Currently unavailable in self-hosted ECE.",
            "tags": [
                "Organizations",
                "IamService"
            ],
            "operationId": "delete-role-mappings"
        },
        {
            "server_url": "",
            "path": "/users/auth/keys",
            "method": "post",
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "The request to create the API key",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "description"
                        ],
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "API key description. Useful if there are multiple keys"
                            },
                            "expiration": {
                                "type": "string",
                                "description": "The optional expiration for the API key, provided as a duration (ex: '1d', '3h')"
                            },
                            "role_assignments": {
                                "description": "The optional roles for the API key. Takes the role of the creator if not specified. Currently unavailable in self-hosted ECE.",
                                "$ref": "#/definitions/RoleAssignments"
                            }
                        },
                        "description": "The request payload that creates the API keys."
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "The API key is created and returned in the body of the response.",
                    "schema": {
                        "$ref": "#/definitions/ApiKeyResponse"
                    }
                },
                "400": {
                    "description": "The request is invalid. Specify a different request, then try again. (code: `api_keys.invalid_input`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "api_keys.invalid_input"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Creates a new API key.",
            "tags": [
                "Authentication",
                "IamService"
            ],
            "operationId": "create-api-key"
        },
        {
            "server_url": "",
            "path": "/users/auth/keys",
            "method": "delete",
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "The request to delete API keys",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "keys"
                        ],
                        "properties": {
                            "keys": {
                                "type": "array",
                                "description": "The list of API key IDs.",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The request payload that deletes the API keys."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "The API keys are deleted.",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete or invalidate API keys.",
            "tags": [
                "Authentication",
                "IamService"
            ],
            "operationId": "delete-api-keys"
        },
        {
            "server_url": "",
            "path": "/users/auth/keys/{api_key_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "api_key_id",
                    "in": "path",
                    "description": "The API Key ID.",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "The API key is deleted.",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "404": {
                    "description": "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "api_keys.key_not_found"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete or invalidate the API key.",
            "tags": [
                "Authentication",
                "IamService"
            ],
            "operationId": "delete-api-key"
        },
        {
            "server_url": "",
            "path": "/users/{user_id}/role_assignments",
            "method": "post",
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "description": "Identifier for the user; include realm name and id if required",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The Role Assignments to add",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "platform": {
                                "type": "array",
                                "description": "Assignments for roles with platform scope.",
                                "items": {
                                    "$ref": "#/definitions/PlatformRoleAssignment"
                                }
                            },
                            "organization": {
                                "type": "array",
                                "description": "Assignments for roles with organization scope.",
                                "items": {
                                    "$ref": "#/definitions/OrganizationRoleAssignment"
                                }
                            },
                            "deployment": {
                                "type": "array",
                                "description": "Assignments for roles with deployment scope.",
                                "items": {
                                    "$ref": "#/definitions/DeploymentRoleAssignment"
                                }
                            },
                            "project": {
                                "description": "Assignments for roles with project scope.",
                                "$ref": "#/definitions/ProjectRoleAssignments"
                            }
                        },
                        "description": "Roles assigned to users, API keys or organization invitations. Currently unavailable in self-hosted ECE."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Role Assignments were successfully added to the target User",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "400": {
                    "description": "The target user Id is invalid. (code: `role_assignments.invalid_target_user_id`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "role_assignments.invalid_target_user_id"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "Credentials were invalid. (code: `root.unauthorized`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "root.unauthorized"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "You are not authorised to add the specified RoleAssignments. (code: `role_assignments.unauthorized_role_assignments`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "role_assignments.unauthorized_role_assignments"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Adds a set of RoleAssignments to the specified User. Currently unavailable in self-hosted ECE.",
            "tags": [
                "UserRoleAssignments",
                "IamService"
            ],
            "operationId": "add-role-assignments"
        },
        {
            "server_url": "",
            "path": "/users/{user_id}/role_assignments",
            "method": "delete",
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "description": "Identifier for the user; include realm name and id if required",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "The Role Assignments to remove",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "platform": {
                                "type": "array",
                                "description": "Assignments for roles with platform scope.",
                                "items": {
                                    "$ref": "#/definitions/PlatformRoleAssignment"
                                }
                            },
                            "organization": {
                                "type": "array",
                                "description": "Assignments for roles with organization scope.",
                                "items": {
                                    "$ref": "#/definitions/OrganizationRoleAssignment"
                                }
                            },
                            "deployment": {
                                "type": "array",
                                "description": "Assignments for roles with deployment scope.",
                                "items": {
                                    "$ref": "#/definitions/DeploymentRoleAssignment"
                                }
                            },
                            "project": {
                                "description": "Assignments for roles with project scope.",
                                "$ref": "#/definitions/ProjectRoleAssignments"
                            }
                        },
                        "description": "Roles assigned to users, API keys or organization invitations. Currently unavailable in self-hosted ECE."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Role Assignments were successfully removed from the target User",
                    "schema": {
                        "$ref": "#/definitions/EmptyResponse"
                    }
                },
                "400": {
                    "description": "The target user Id is invalid. (code: `role_assignments.invalid_target_user_id`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "role_assignments.invalid_target_user_id"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "401": {
                    "description": "Credentials were invalid. (code: `root.unauthorized`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "root.unauthorized"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                },
                "403": {
                    "description": "You are not authorised to remove the specified RoleAssignments. (code: `role_assignments.unauthorized_role_assignments`)",
                    "headers": {
                        "x-cloud-error-codes": {
                            "type": "string",
                            "description": "The error codes associated with the response",
                            "enum": [
                                "role_assignments.unauthorized_role_assignments"
                            ]
                        }
                    },
                    "schema": {
                        "$ref": "#/definitions/BasicFailedReply"
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Removes a set of RoleAssignments from the specified User. Currently unavailable in self-hosted ECE.",
            "tags": [
                "UserRoleAssignments",
                "IamService"
            ],
            "operationId": "remove-role-assignments"
        }
    ]
}