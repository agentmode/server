{
    "resources": [
        {
            "server_url": "",
            "path": "/api/workspace_scopes",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/WorkspaceScope"
                                },
                                "type": "array",
                                "title": "Response Get Workspace Scopes Api Workspace Scopes Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Workspace Scopes"
            ],
            "operationId": "get_workspace_scopes_api_workspace_scopes_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/permissions",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/AccountPermission"
                                },
                                "type": "array",
                                "title": "Response List Permissions Api Accounts Permissions Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List account permissions",
            "tags": [
                "Accounts"
            ],
            "operationId": "list_permissions_api_accounts_permissions_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "location": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Location",
                                        "description": "An optional physical location for the account, e.g. Washington, D.C."
                                    },
                                    "link": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Link",
                                        "description": "An optional for an external url associated with the account, e.g. https://prefect.io/."
                                    },
                                    "image_location": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Image Location",
                                        "description": "A url linking to an image for the account."
                                    },
                                    "stripe_customer_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Stripe Customer Id",
                                        "description": "Stripe customer id associated with the account."
                                    },
                                    "auth_expiration_seconds": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Auth Expiration Seconds",
                                        "description": "The number of seconds a user should be considered to be authenticated against this Account."
                                    },
                                    "status_last_updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Status Last Updated",
                                        "description": "Timestamp indicating the last time the account status was updated."
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The account name."
                                    },
                                    "handle": {
                                        "type": "string",
                                        "title": "Handle",
                                        "description": "A unique identifier for the account containing only lowercase letters, numbers, and dashes."
                                    },
                                    "settings": {
                                        "$ref": "#/components/schemas/AccountSettings-Output",
                                        "description": "The account settings."
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/AccountStatus",
                                        "description": "The account status. Indicates whether the account is in good standing, delinquent, or frozen. Frozen accounts have severely limited functionality.",
                                        "default": "ACTIVE"
                                    },
                                    "workos_connection_ids": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Workos Connection Ids",
                                        "description": "WorkOS connection_ids that can be used to authenticate against this account."
                                    },
                                    "workos_directory_ids": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Workos Directory Ids",
                                        "description": "WorkOS directory_ids that are connected for Directory Sync / SCIM."
                                    },
                                    "workos_organization_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workos Organization Id",
                                        "description": "The organization_id for this account in WorkOS."
                                    },
                                    "plan_type": {
                                        "$ref": "#/components/schemas/AccountPlanType",
                                        "description": "The type of plan this account has.  Useful for making decisions abouthow to display this account, but not for authorization or feature enablement."
                                    },
                                    "plan_tier": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AccountPlanTier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The tier of the account plan."
                                    },
                                    "self_serve": {
                                        "type": "boolean",
                                        "title": "Self Serve",
                                        "description": "Whether billing is self-serve on the plan. When a plan is self serve, users manage their own billable resources and make payments through a credit card they have setup with Stripe.",
                                        "default": false
                                    },
                                    "scim_state": {
                                        "$ref": "#/components/schemas/AccountSCIMState",
                                        "description": "The SCIM configuration state of the account."
                                    },
                                    "sso_state": {
                                        "$ref": "#/components/schemas/AccountSSOState",
                                        "description": "The SSO configuration state of the account."
                                    },
                                    "billing_email": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Billing Email",
                                        "description": "Billing email of the account. None if there if cccount has no stripe customer."
                                    },
                                    "features": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "uniqueItems": true,
                                        "title": "Features",
                                        "description": "Set of features that the account has access to."
                                    },
                                    "max_deployments_per_workspace": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Max Deployments Per Workspace",
                                        "description": "The maximum number of deployments that can be created in a workspace."
                                    },
                                    "work_pool_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Limit",
                                        "description": "The maximum number of work pools that can be created in a workspace."
                                    },
                                    "non_mex_work_pool_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Non Mex Work Pool Limit",
                                        "description": "The maximum number of non-managed work pools that can be created in a workspace."
                                    },
                                    "mex_work_pool_limit": {
                                        "type": "integer",
                                        "title": "Mex Work Pool Limit",
                                        "description": "The maximum number of `prefect:managed` work pools that can be created in a workspace."
                                    },
                                    "run_retention_days": {
                                        "type": "integer",
                                        "title": "Run Retention Days",
                                        "description": "How many days flow run data and associated objects should be retained for."
                                    },
                                    "audit_log_retention_days": {
                                        "type": "integer",
                                        "title": "Audit Log Retention Days",
                                        "description": "How many days of audit log events are available to the customer."
                                    },
                                    "automations_limit": {
                                        "type": "integer",
                                        "title": "Automations Limit",
                                        "description": "\n        The number of automations available to (1) each workspace in the account\n        and (2) the account itself (i.e. Automations not associated with a specific workspace).\n        "
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "name",
                                    "handle",
                                    "plan_type",
                                    "scim_state",
                                    "sso_state",
                                    "work_pool_limit",
                                    "mex_work_pool_limit",
                                    "run_retention_days",
                                    "audit_log_retention_days",
                                    "automations_limit"
                                ],
                                "title": "AccountResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get an account by id.",
            "tags": [
                "Accounts"
            ],
            "operationId": "read_account_api_accounts__account_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/settings",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Accounts"
            ],
            "operationId": "read_account_settings_api_accounts__account_id__settings_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/domains",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Accounts"
            ],
            "operationId": "read_account_domains_api_accounts__account_id__domains_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/usage_limits",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "audit_log_retention_days": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Audit Log Retention Days",
                                        "description": "The audit log retention days limit."
                                    },
                                    "automations_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Automations Limit",
                                        "description": "The automations limit."
                                    },
                                    "log_rate_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Log Rate Limit",
                                        "description": "The log rate limit."
                                    },
                                    "max_deployments_per_workspace": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Max Deployments Per Workspace",
                                        "description": "The max deployments per workspace limit."
                                    },
                                    "mex_compute_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Mex Compute Limit",
                                        "description": "The mex compute limit."
                                    },
                                    "mex_concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Mex Concurrency Limit",
                                        "description": "The mex concurrency limit."
                                    },
                                    "mex_work_pool_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Mex Work Pool Limit",
                                        "description": "The mex work pool limit."
                                    },
                                    "non_mex_work_pool_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Non Mex Work Pool Limit",
                                        "description": "The maximum number of non-managed work pools that can be created in a workspace."
                                    },
                                    "orchestration_rate_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Orchestration Rate Limit",
                                        "description": "The orchestration rate limit."
                                    },
                                    "run_retention_days": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Run Retention Days",
                                        "description": "The run retention days limit."
                                    },
                                    "user_limit": {
                                        "anyOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "integer"
                                            }
                                        ],
                                        "title": "User Limit",
                                        "description": "The user limit."
                                    },
                                    "work_pool_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Limit",
                                        "description": "The work pool limit."
                                    },
                                    "workspace_limit": {
                                        "anyOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "integer"
                                            }
                                        ],
                                        "title": "Workspace Limit",
                                        "description": "The workspace limit."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "audit_log_retention_days",
                                    "automations_limit",
                                    "log_rate_limit",
                                    "max_deployments_per_workspace",
                                    "mex_compute_limit",
                                    "mex_concurrency_limit",
                                    "mex_work_pool_limit",
                                    "orchestration_rate_limit",
                                    "run_retention_days",
                                    "user_limit",
                                    "work_pool_limit",
                                    "workspace_limit"
                                ],
                                "title": "UsageLimitsResponse",
                                "description": "Data returned by the API when reading a workspace's usage limits"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Accounts"
            ],
            "operationId": "read_account_usage_limits_api_accounts__account_id__usage_limits_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/teams/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The account id associated with this team."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the team."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "An optional description of the team.",
                                        "default": ""
                                    },
                                    "workos_directory_group_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workos Directory Group Id",
                                        "description": "The WorkOS directory group id."
                                    },
                                    "memberships": {
                                        "items": {
                                            "$ref": "#/components/schemas/TeamMemberResponse"
                                        },
                                        "type": "array",
                                        "title": "Memberships",
                                        "description": "The members of the team."
                                    },
                                    "workspaces": {
                                        "items": {
                                            "$ref": "#/components/schemas/TeamWorkspaceAccess"
                                        },
                                        "type": "array",
                                        "title": "Workspaces",
                                        "description": "The workspaces the team has access to."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "account_id",
                                    "name"
                                ],
                                "title": "TeamResponse",
                                "description": "Data returned by the API when reading a team."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a team by id.\n\nRequired account permissions: `read:team`",
            "tags": [
                "Teams"
            ],
            "operationId": "read_team_api_accounts__account_id__teams__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_memberships/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "actor_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Actor Id",
                                        "description": "The actor's id."
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The account id."
                                    },
                                    "account_role_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Role Id",
                                        "description": "The account role id. The account role defines permissions for the actor in this account."
                                    },
                                    "directory_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Directory Id",
                                        "description": "The id of the WorkOS directory that created this membership."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "actor_id",
                                    "account_id",
                                    "account_role_id"
                                ],
                                "title": "AccountMembership",
                                "description": "An ORM representation of an Account Membership"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get an Account Membership by id.\n\nRequired account permissions: `read:account_membership`",
            "tags": [
                "Account Memberships"
            ],
            "operationId": "read_account_membership_api_accounts__account_id__account_memberships__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_roles/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Account Id",
                                        "description": "The account id associated with the role. If `None`, the role is a globally available default not associated with a specific account."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the account role."
                                    },
                                    "permissions": {
                                        "items": {
                                            "$ref": "#/components/schemas/AccountPermission"
                                        },
                                        "type": "array",
                                        "title": "Permissions",
                                        "description": "The list of account permissions held by this role. Defines the actions account members assigned this role are allowed to take."
                                    },
                                    "is_system_role": {
                                        "type": "boolean",
                                        "title": "Is System Role",
                                        "description": "Whether the role is a system role.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "permissions"
                                ],
                                "title": "AccountRole"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get an Account Role by id.\n\nRequired account permissions: `read:account_role`",
            "tags": [
                "Account Roles"
            ],
            "operationId": "read_account_role_api_accounts__account_id__account_roles__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/sso/setup_url",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string",
                                "title": "Response Read Sso Setup Url Api Accounts  Account Id  Sso Setup Url Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get an SSO connection setup URL for a given account\n\nReturns a URL if the account doesn't already have SSO configured\n\nRequired account permissions: `administrate:sso`",
            "tags": [
                "Account SSO"
            ],
            "operationId": "read_sso_setup_url_api_accounts__account_id__sso_setup_url_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/sso/dsync_setup_url",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string",
                                "title": "Response Read Dsync Setup Url Api Accounts  Account Id  Sso Dsync Setup Url Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get an Directory Sync connection setup URL for a given account\n\nReturns a URL if the account doesn't already have Directory Sync configured\n\nRequired account permissions: `administrate:sso`",
            "tags": [
                "Account SSO"
            ],
            "operationId": "read_dsync_setup_url_api_accounts__account_id__sso_dsync_setup_url_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/sso/integrations",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "organization_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Organization Id"
                                    },
                                    "connections": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "type": "array",
                                        "title": "Connections",
                                        "default": []
                                    },
                                    "directories": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "type": "array",
                                        "title": "Directories",
                                        "default": []
                                    }
                                },
                                "type": "object",
                                "title": "WorkOSIntegrationResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Return details about an Account's SSO / SCIM integrations.\n\nRequired account permissions: `administrate:sso`",
            "tags": [
                "Account SSO"
            ],
            "operationId": "integrations_api_accounts__account_id__sso_integrations_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/bots/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "actor_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Actor Id",
                                        "description": "The actor id associated with this bot."
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The bot's account id. Bots can only belong to one account."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the bot."
                                    },
                                    "account_role_name": {
                                        "type": "string",
                                        "title": "Account Role Name",
                                        "description": "The name of the role of the bot's account membership."
                                    },
                                    "api_key": {
                                        "$ref": "#/components/schemas/APIKeyReadResponse",
                                        "description": "API Key associated with the bot"
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "actor_id",
                                    "account_id",
                                    "name",
                                    "account_role_name",
                                    "api_key"
                                ],
                                "title": "BotReadResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a bot by id.\n\nRequired account permissions: `read:bot`",
            "tags": [
                "Bots"
            ],
            "operationId": "read_bot_api_accounts__account_id__bots__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/bots/{id}/read_bot_api_keys",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "active_key": {
                                        "$ref": "#/components/schemas/APIKeyReadResponse",
                                        "description": "The key currently in use by the bot."
                                    },
                                    "rotating_keys": {
                                        "items": {
                                            "$ref": "#/components/schemas/APIKeyReadResponse"
                                        },
                                        "type": "array",
                                        "title": "Rotating Keys",
                                        "description": "The bot's rotating keys. These keys will expire in 48 hours or less. They can be deleted at any time."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "active_key",
                                    "rotating_keys"
                                ],
                                "title": "BotAPIKeyReadResponse",
                                "description": "Data returned by the API when listing a bot's api keys."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a bot's api keys by id.\n\nRequired account permissions: `read:bot`",
            "tags": [
                "Bots"
            ],
            "operationId": "read_bot_api_keys_api_accounts__account_id__bots__id__read_bot_api_keys_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/invitations/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "title": "Email",
                                        "description": "The email of the user to invite"
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The account id"
                                    },
                                    "account_role_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Role Id",
                                        "description": "The role id to assign the user"
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/InvitationStatus",
                                        "description": "The invitation status"
                                    },
                                    "expiration": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "Expiration",
                                        "description": "The expiration time of the invite"
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "email",
                                    "account_id",
                                    "account_role_id",
                                    "status",
                                    "expiration"
                                ],
                                "title": "InvitationReadResponse",
                                "description": "Data returned by the api when reading an invitation"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get an invitation by id\n\nRequired account permissions: `read:invitation`",
            "tags": [
                "Invitations"
            ],
            "operationId": "read_invitation_api_accounts__account_id__invitations__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The account id"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The workspace name"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A description of the workspace",
                                        "default": ""
                                    },
                                    "handle": {
                                        "type": "string",
                                        "title": "Handle",
                                        "description": "A unique handle for the workspace"
                                    },
                                    "default_workspace_role_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Default Workspace Role Id",
                                        "description": "The default workspace role id."
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "title": "Is Public",
                                        "description": "Whether the workspace is public.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "account_id",
                                    "name",
                                    "handle"
                                ],
                                "title": "Workspace",
                                "description": "An ORM representation of a Workspace"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a workspace by id.\n\nRequired account permissions: `read:workspace`",
            "tags": [
                "Workspaces"
            ],
            "operationId": "read_workspace_api_accounts__account_id__workspaces__workspace_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/managed_execution/details",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieves information about the managed execution usage and terms for a given workspace.\nThis includes the total compute time in seconds utilized by the workspace during the current billing period,\nas well as limits pertaining to the account terms, such as concurrency, work pool, and compute limits.\n\nReturns:\n    WorkspaceLimitsUsageResponse: An object containing the compute usage in seconds and limits on\n    concurrency, work pool, and compute usage for the specified workspace.\n\nRequired account permissions: `read:workspace`",
            "tags": [
                "Workspaces"
            ],
            "operationId": "read_managed_execution_details_api_accounts__account_id__workspaces__workspace_id__managed_execution_details_get"
        },
        {
            "server_url": "",
            "path": "/api/workspaces/{workspace_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Redirects to the full account-scoped URL of a workspace",
            "tags": [
                "Workspaces"
            ],
            "operationId": "find_workspace_without_account_id_api_workspaces__workspace_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspace_roles/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Account Id",
                                        "description": "The account id"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The workspace role name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 140,
                                        "title": "Description",
                                        "description": "A short description of the role.",
                                        "default": ""
                                    },
                                    "permissions": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Permissions",
                                        "description": "The workspace role's permissions",
                                        "deprecated": true
                                    },
                                    "scopes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Scopes",
                                        "description": "The workspace role's scopes."
                                    },
                                    "inherited_role_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Inherited Role Id",
                                        "description": "An optional built-in workspace role id from which this workspace role inherits."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "account_id",
                                    "name"
                                ],
                                "title": "WorkspaceRole",
                                "description": "An ORM representation of a WorkspaceRole"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read a workspace role.\n\nRequired account permissions: `read:workspace_role`",
            "tags": [
                "Workspace Roles"
            ],
            "operationId": "read_workspace_role_api_accounts__account_id__workspace_roles__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/rate-limits/usage",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "since",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start date of the usage period",
                        "title": "Since"
                    },
                    "description": "The start date of the usage period"
                },
                {
                    "name": "until",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end date of the usage period",
                        "title": "Until"
                    },
                    "description": "The end date of the usage period"
                },
                {
                    "name": "keys",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "description": "The keys to query usage for",
                        "title": "Keys"
                    },
                    "description": "The keys to query usage for"
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account"
                                    },
                                    "since": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "Since"
                                    },
                                    "until": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "Until"
                                    },
                                    "minutes": {
                                        "items": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "type": "array",
                                        "title": "Minutes"
                                    },
                                    "keys": {
                                        "additionalProperties": {
                                            "$ref": "#/components/schemas/RateLimitUsageByKey"
                                        },
                                        "type": "object",
                                        "title": "Keys"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "account",
                                    "since",
                                    "until",
                                    "minutes",
                                    "keys"
                                ],
                                "title": "RateLimitUsageResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read rate limit usage for a given account.\n\nRequired account permissions: `read:account`",
            "tags": [
                "Rate Limits"
            ],
            "operationId": "read_rate_limit_usage_api_accounts__account_id__rate_limits_usage_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/rate-limits/usage/download",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "since",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start date of the usage period",
                        "title": "Since"
                    },
                    "description": "The start date of the usage period"
                },
                {
                    "name": "until",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end date of the usage period",
                        "title": "Until"
                    },
                    "description": "The end date of the usage period"
                },
                {
                    "name": "keys",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "description": "The keys to query usage for",
                        "title": "Keys"
                    },
                    "description": "The keys to query usage for"
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Download rate limit usage for a given account as a CSV file.\n\nRequired account permissions: `read:account`",
            "tags": [
                "Rate Limits"
            ],
            "operationId": "download_rate_limit_usage_api_accounts__account_id__rate_limits_usage_download_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/invitations/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "title": "Email",
                                        "description": "The email of the user to invite"
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The account id"
                                    },
                                    "account_role_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Role Id",
                                        "description": "The role id to assign the user"
                                    },
                                    "workspace_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Id",
                                        "description": "The workspace id"
                                    },
                                    "workspace_role_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Role Id",
                                        "description": "The workspace role id to assign the user"
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/InvitationStatus",
                                        "description": "The invitation status"
                                    },
                                    "expiration": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "Expiration",
                                        "description": "The expiration time of the invite"
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "email",
                                    "account_id",
                                    "account_role_id",
                                    "workspace_id",
                                    "workspace_role_id",
                                    "status",
                                    "expiration"
                                ],
                                "title": "WorkspaceInvitationReadResponse",
                                "description": "Data returned by the api when reading a workspace invitation"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get an invitation by id\n\nRequired account permissions: `read:workspace_invitation`",
            "tags": [
                "Workspace Invitations"
            ],
            "operationId": "read_workspace_invitation_api_accounts__account_id__workspaces__workspace_id__invitations__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/user_access/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "workspace_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Id",
                                        "description": "The workspace id"
                                    },
                                    "workspace_role_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Role Id",
                                        "description": "The workspace role id"
                                    },
                                    "actor_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Actor Id",
                                        "description": "actor_id of user assigned a workspace access"
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "User Id",
                                        "description": "id of user assigned a workspace access"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "title": "First Name",
                                        "description": "first name of user assigned a workspace access"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "title": "Last Name",
                                        "description": "last name of user assigned a workspace access"
                                    },
                                    "email": {
                                        "type": "string",
                                        "title": "Email",
                                        "description": "email of user assigned a workspace access"
                                    },
                                    "handle": {
                                        "type": "string",
                                        "title": "Handle",
                                        "description": "unique handle of user assigned a workspace access"
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "workspace_id",
                                    "workspace_role_id",
                                    "actor_id",
                                    "user_id",
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "handle"
                                ],
                                "title": "WorkspaceUserAccessResponse",
                                "description": "Data returned by the API after creating a new user workspace access"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read a workspace user access\n\nRequired workspace scopes: `see_workspace_users`",
            "tags": [
                "Workspace User Access"
            ],
            "operationId": "read_workspace_user_access_api_accounts__account_id__workspaces__workspace_id__user_access__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/bot_access/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "workspace_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Id",
                                        "description": "The workspace id"
                                    },
                                    "workspace_role_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Role Id",
                                        "description": "The workspace role id"
                                    },
                                    "actor_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Actor Id",
                                        "description": "actor_id of bot assigned a workspace access"
                                    },
                                    "bot_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Bot Id",
                                        "description": "id of bot assigned a workspace access"
                                    },
                                    "bot_name": {
                                        "type": "string",
                                        "title": "Bot Name",
                                        "description": "The name of the bot assigned a workspace access"
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "workspace_id",
                                    "workspace_role_id",
                                    "actor_id",
                                    "bot_id",
                                    "bot_name"
                                ],
                                "title": "WorkspaceBotAccessResponse",
                                "description": "Data returned by the api after creating a new user workspace access"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read a workspace bot access\n\nRequired workspace scopes: `see_workspace_service_accounts`",
            "tags": [
                "Workspace Bot Access"
            ],
            "operationId": "read_workspace_bot_access_api_accounts__account_id__workspaces__workspace_id__bot_access__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/access/",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ObjectActorAccess"
                                },
                                "title": "Response Read Actor Access Api Accounts  Account Id  Workspaces  Workspace Id  Access  Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Return a list of all actors with access to the workspace, including\nactors granted access via team membership.\n\nRequired workspace scopes: `see_workspace_service_accounts`,`see_workspace_users`",
            "tags": [
                "Workspace Access"
            ],
            "operationId": "read_actor_access_api_accounts__account_id__workspaces__workspace_id__access__get"
        },
        {
            "server_url": "",
            "path": "/api/me/",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "handle": {
                                        "type": "string",
                                        "title": "Handle",
                                        "description": "A unique handle for the user, containing only lowercase letters, numbers, and dashes."
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "title": "First Name",
                                        "description": "The first name of a user."
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "title": "Last Name",
                                        "description": "The last name of a user."
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "title": "Email",
                                        "description": "User email."
                                    },
                                    "location": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Location",
                                        "description": "An optional physical location for a user, e.g. Washington, D.C."
                                    },
                                    "personal_account_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Personal Account Id",
                                        "description": "The user's personal account id, if it exists."
                                    },
                                    "settings": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/UserSettings-Output"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The user's default color settings",
                                        "default": {
                                            "tutorial_completed": false,
                                            "feature_previews": [],
                                            "notification_settings": {
                                                "by_service": {}
                                            }
                                        }
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "handle",
                                    "first_name",
                                    "last_name",
                                    "email"
                                ],
                                "title": "MeReadResponse",
                                "description": "Data returned by the api when reading the current user"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's user profile",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_profile_api_me__get"
        },
        {
            "server_url": "",
            "path": "/api/me/sessions",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/UserSessionResponse"
                                },
                                "type": "array",
                                "title": "Response Read My Sessions Api Me Sessions Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's user sessions",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_sessions_api_me_sessions_get"
        },
        {
            "server_url": "",
            "path": "/api/me/api_keys",
            "method": "get",
            "parameters": [
                {
                    "name": "name",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/APIKeyReadResponse"
                                },
                                "title": "Response Read My Api Keys Api Me Api Keys Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's api keys",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_api_keys_api_me_api_keys_get"
        },
        {
            "server_url": "",
            "path": "/api/me/accounts",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/UserAccountResponse"
                                },
                                "type": "array",
                                "title": "Response Read My Accounts Api Me Accounts Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's accounts",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_accounts_api_me_accounts_get"
        },
        {
            "server_url": "",
            "path": "/api/me/organizations",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/UserOrganizationResponse"
                                },
                                "type": "array",
                                "title": "Response Read My Organizations Api Me Organizations Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's accounts that have plans that\nare schemas.plans.AccountPlanType.ORGANIZATION",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_organizations_api_me_organizations_get"
        },
        {
            "server_url": "",
            "path": "/api/me/notifications",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notification_settings": {
                                        "$ref": "#/components/schemas/UserLevelNotificationSettings",
                                        "description": "The notification settings for the user."
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "User Id",
                                        "description": "The user id."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "notification_settings",
                                    "user_id"
                                ],
                                "title": "UserNotificationsResponse",
                                "description": "Data returned by the API when reading a workspace notification"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's notifications",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_notifications_api_me_notifications_get"
        },
        {
            "server_url": "",
            "path": "/api/me/accounts/{account_id}/permissions",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AccountPermission"
                                },
                                "title": "Response Read My Account Permissions Api Me Accounts  Account Id  Permissions Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's permissions for the given account",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_account_permissions_api_me_accounts__account_id__permissions_get"
        },
        {
            "server_url": "",
            "path": "/api/me/accounts/has_permission",
            "method": "get",
            "parameters": [
                {
                    "name": "permission",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "read:account",
                            "update:account",
                            "delete:account",
                            "read:account_membership",
                            "update:account_membership",
                            "delete:account_membership",
                            "create:account_role",
                            "read:account_role",
                            "update:account_role",
                            "delete:account_role",
                            "add:account_member",
                            "read:sso",
                            "administrate:sso",
                            "bypass:sso",
                            "read:billing",
                            "update:billing",
                            "create:bot",
                            "read:bot",
                            "update:bot",
                            "delete:bot",
                            "create:team",
                            "read:team",
                            "update:team",
                            "delete:team",
                            "create:invitation",
                            "read:invitation",
                            "update:invitation",
                            "create:workspace_invitation",
                            "read:workspace_invitation",
                            "update:workspace_invitation",
                            "administrate:workspace",
                            "create:workspace",
                            "read:workspace",
                            "delete:workspace",
                            "create:workspace_role",
                            "read:workspace_role",
                            "update:workspace_role",
                            "delete:workspace_role",
                            "create:audit_event",
                            "read:audit_event",
                            "update:ip_allowlist",
                            "read:ip_allowlist",
                            "read:mex-storage",
                            "update:mex-storage",
                            "delete:mex-storage",
                            "read:integrations",
                            "update:integrations"
                        ],
                        "title": "AccountPermission",
                        "description": "Enumerates possible permissions over an account"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "title": "Response Read My Accounts With Permission Api Me Accounts Has Permission Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Return the account ids the current actor has access to\nfor which they have the given permission",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_accounts_with_permission_api_me_accounts_has_permission_get"
        },
        {
            "server_url": "",
            "path": "/api/me/accounts/{account_id}/has_permission",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "permission",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "read:account",
                            "update:account",
                            "delete:account",
                            "read:account_membership",
                            "update:account_membership",
                            "delete:account_membership",
                            "create:account_role",
                            "read:account_role",
                            "update:account_role",
                            "delete:account_role",
                            "add:account_member",
                            "read:sso",
                            "administrate:sso",
                            "bypass:sso",
                            "read:billing",
                            "update:billing",
                            "create:bot",
                            "read:bot",
                            "update:bot",
                            "delete:bot",
                            "create:team",
                            "read:team",
                            "update:team",
                            "delete:team",
                            "create:invitation",
                            "read:invitation",
                            "update:invitation",
                            "create:workspace_invitation",
                            "read:workspace_invitation",
                            "update:workspace_invitation",
                            "administrate:workspace",
                            "create:workspace",
                            "read:workspace",
                            "delete:workspace",
                            "create:workspace_role",
                            "read:workspace_role",
                            "update:workspace_role",
                            "delete:workspace_role",
                            "create:audit_event",
                            "read:audit_event",
                            "update:ip_allowlist",
                            "read:ip_allowlist",
                            "read:mex-storage",
                            "update:mex-storage",
                            "delete:mex-storage",
                            "read:integrations",
                            "update:integrations"
                        ],
                        "title": "AccountPermission",
                        "description": "Enumerates possible permissions over an account"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean",
                                "title": "Response Check My Account Permissions Api Me Accounts  Account Id  Has Permission Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Return if current actor has specific permission for account",
            "tags": [
                "Me"
            ],
            "operationId": "check_my_account_permissions_api_me_accounts__account_id__has_permission_get"
        },
        {
            "server_url": "",
            "path": "/api/me/workspaces",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/UserWorkspaceResponse"
                                },
                                "type": "array",
                                "title": "Response Read My Workspaces Api Me Workspaces Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's workspaces",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_workspaces_api_me_workspaces_get"
        },
        {
            "server_url": "",
            "path": "/api/me/workspaces/{workspace_id}/scopes",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "title": "Response Read My Workspace Scopes Api Me Workspaces  Workspace Id  Scopes Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List the current actor's scopes for the given workspace",
            "tags": [
                "Me"
            ],
            "operationId": "read_my_workspace_scopes_api_me_workspaces__workspace_id__scopes_get"
        },
        {
            "server_url": "",
            "path": "/api/me/workspaces/{workspace_id}/has_scope",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "scope",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "see_flows",
                            "manage_saved_search",
                            "run_flows",
                            "manage_flows",
                            "run_tasks",
                            "see_blocks",
                            "see_secret_blocks",
                            "manage_blocks",
                            "see_deployments",
                            "run_deployments",
                            "write_deployments",
                            "manage_deployments",
                            "see_notifications",
                            "write_notifications",
                            "manage_notifications",
                            "see_workspace_settings",
                            "write_workspace_settings",
                            "manage_workspace_settings",
                            "see_workspace_users",
                            "manage_workspace_users",
                            "see_workspace_service_accounts",
                            "manage_workspace_service_accounts",
                            "manage_workspace_teams",
                            "see_work_queues",
                            "write_work_queues",
                            "manage_work_queues",
                            "see_concurrency_limits",
                            "manage_concurrency_limits",
                            "see_events",
                            "manage_events",
                            "see_automations",
                            "manage_automations",
                            "see_work_pools",
                            "write_work_pools",
                            "manage_work_pools",
                            "see_workers",
                            "write_workers",
                            "manage_workers",
                            "see_artifacts",
                            "write_artifacts",
                            "manage_artifacts",
                            "see_variables",
                            "write_variables",
                            "manage_variables",
                            "manage_acls",
                            "see_incidents",
                            "write_incidents",
                            "manage_incidents",
                            "manage_mex_storage",
                            "manage_mex_deploy",
                            "see_tags"
                        ],
                        "title": "WorkspaceScopeName",
                        "description": "Canonical list of workspace scope names.\n\nScope names should be semantically meaningful, roughly in the form of\n`<verb>_<obj>`. For example, `see_flows` allows viewing of flows within\nthe workspace.\n\nA few common patterns to follow:\n    - `see_*`: ability to view objects\n    - `write_*`: ability to create, update or view objects\n    - `manage_*`: ability to create, update, view, or delete objects"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean",
                                "title": "Response Check My Workspace Scopes Api Me Workspaces  Workspace Id  Has Scope Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Return if current actor has specific scope for workspace.",
            "tags": [
                "Me"
            ],
            "operationId": "check_my_workspace_scopes_api_me_workspaces__workspace_id__has_scope_get"
        },
        {
            "server_url": "",
            "path": "/api/users/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Title",
                                        "description": "An optional title for the user."
                                    },
                                    "image_location": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Image Location",
                                        "description": "A url linking to an image for the user."
                                    },
                                    "personal_account_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Personal Account Id",
                                        "description": "The user's personal account id, if it exists."
                                    },
                                    "settings": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/UserSettings-Output"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The user's default color settings",
                                        "default": {
                                            "tutorial_completed": false,
                                            "feature_previews": [],
                                            "notification_settings": {
                                                "by_service": {}
                                            }
                                        }
                                    },
                                    "last_login": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Login",
                                        "description": "The last time the user logged in."
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "handle": {
                                        "type": "string",
                                        "title": "Handle",
                                        "description": "A unique handle for the user, containing only lowercase letters, numbers, and dashes."
                                    },
                                    "actor_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Actor Id",
                                        "description": "The actor_id associated with this user."
                                    },
                                    "idp_user_id": {
                                        "type": "string",
                                        "title": "Idp User Id",
                                        "description": "The idp (WorkOS or GitHub) id of a user."
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "title": "First Name",
                                        "description": "The first name of a user."
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "title": "Last Name",
                                        "description": "The last name of a user."
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "title": "Email",
                                        "description": "User email."
                                    },
                                    "location": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Location",
                                        "description": "An optional physical location for a user, e.g. Washington, D.C."
                                    },
                                    "has_used_org_trial": {
                                        "type": "boolean",
                                        "title": "Has Used Org Trial",
                                        "description": "Whether the actor has used its organization trial.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "handle",
                                    "actor_id",
                                    "idp_user_id",
                                    "first_name",
                                    "last_name",
                                    "email"
                                ],
                                "title": "User",
                                "description": "An ORM representation of an User"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a user by id.",
            "tags": [
                "Users"
            ],
            "operationId": "read_user_api_users__id__get"
        },
        {
            "server_url": "",
            "path": "/api/users/{id}/api_keys",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "name",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/APIKeyReadResponse"
                                },
                                "title": "Response Read User Api Keys Api Users  Id  Api Keys Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "List all APIKeys for a user",
            "tags": [
                "Users"
            ],
            "operationId": "read_user_api_keys_api_users__id__api_keys_get"
        },
        {
            "server_url": "",
            "path": "/api/users/{id}/api_keys/{api_key_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "api_key_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Api Key Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the api key."
                                    },
                                    "expiration": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Expiration",
                                        "description": "The time at which the api key expires. If `None`, the api key will not expire."
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "APIKeyReadResponse",
                                "description": "Data returned by the api when reading api_keys"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read an APIKey for a user",
            "tags": [
                "Users"
            ],
            "operationId": "read_user_api_key_api_users__id__api_keys__api_key_id__get"
        },
        {
            "server_url": "",
            "path": "/api/billing/{account_id}/details",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stripe_customer_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Stripe Customer Id",
                                        "description": "Stripe customer id associated with the account."
                                    },
                                    "self_serve": {
                                        "type": "boolean",
                                        "title": "Self Serve",
                                        "description": "Whether billing is self-serve on the plan. When a plan is self serve, users manage their own billable resources and make payments through a credit card they have setup with Stripe.",
                                        "default": false
                                    },
                                    "plan_type": {
                                        "$ref": "#/components/schemas/AccountPlanType",
                                        "description": "The type of plan this account has.  Useful for making decisions abouthow to display this account, but not for authorization or feature enablement."
                                    },
                                    "plan_tier": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Plan Tier",
                                        "description": "The tier of the account plan."
                                    },
                                    "users": {
                                        "$ref": "#/components/schemas/BillingObjectDetailsResponse",
                                        "description": "User related billing information."
                                    },
                                    "workspaces": {
                                        "$ref": "#/components/schemas/BillingObjectDetailsResponse",
                                        "description": "Workspace related billing information."
                                    },
                                    "trial_start": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Trial Start",
                                        "description": "Start date of the account's stripe subscription's free trial if one exists, otherwise None."
                                    },
                                    "trial_end": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Trial End",
                                        "description": "End date of the account's stripe subscription's free trial if one exists, otherwise None."
                                    },
                                    "annual_billing": {
                                        "type": "boolean",
                                        "title": "Annual Billing",
                                        "description": "Whether this account is on a yearly plan or not.",
                                        "default": true
                                    },
                                    "cancel_at_period_end": {
                                        "type": "boolean",
                                        "title": "Cancel At Period End",
                                        "description": "Whether this account is going to be cancelling at their end of term. If truethe account won't be able to update workspace nor user slots.",
                                        "default": false
                                    },
                                    "billing_enabled": {
                                        "type": "boolean",
                                        "title": "Billing Enabled",
                                        "description": "Whether billing is enabled on the plan. When billing is disabled, users may add up to the free workspace/user slots specified in their account's terms. When billing is enabled, if implicit_slots=True we will automatically reconcile their current slots as users/workspaces are added and removed. If implicit_slots=True users/workspaces slots can purchased and filled.",
                                        "default": false
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "plan_type",
                                    "users",
                                    "workspaces"
                                ],
                                "title": "BillingDetailsResponse",
                                "description": "Data returned by the api for details about an account's billing"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the billing details for an account.\n\nRequired account permissions: `read:billing`",
            "tags": [
                "Account Billing"
            ],
            "operationId": "get_billing_details_api_billing__account_id__details_get"
        },
        {
            "server_url": "",
            "path": "/api/collections/views/{view}",
            "method": "get",
            "parameters": [
                {
                    "name": "view",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "enum": [
                            "aggregate-block-metadata",
                            "aggregate-collection-metadata",
                            "aggregate-flow-metadata",
                            "aggregate-worker-metadata",
                            "demo-flows"
                        ],
                        "type": "string",
                        "title": "View"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "Response Read View Content Api Collections Views  View  Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Reads the content of a view from the prefect-collection-registry.",
            "tags": [
                "Collections"
            ],
            "operationId": "read_view_content_api_collections_views__view__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/lenses/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Lenses"
            ],
            "operationId": "read_lens_api_accounts__account_id__workspaces__workspace_id__lenses__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/lenses/filter",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "lenses": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LensFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "sort_by": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LensSortOptions"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_lenses_api_accounts__account_id__workspaces__workspace_id__lenses_filter_get"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Lenses"
            ],
            "operationId": "read_lenses_api_accounts__account_id__workspaces__workspace_id__lenses_filter_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/notifications/workspace/slack",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkspaceNotification"
                                },
                                "title": "Response Get Workspace Slack Notifications Api Accounts  Account Id  Workspaces  Workspace Id  Notifications Workspace Slack Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Notifications"
            ],
            "operationId": "get_workspace_slack_notifications_api_accounts__account_id__workspaces__workspace_id__notifications_workspace_slack_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/events/filter/next",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "page-token",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Page-Token"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "events": {
                                        "items": {
                                            "$ref": "#/components/schemas/ReceivedEvent"
                                        },
                                        "type": "array",
                                        "title": "Events",
                                        "description": "The Events matching the query"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total",
                                        "description": "The total number of matching Events"
                                    },
                                    "next_page": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "minLength": 1,
                                                "format": "uri"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Page",
                                        "description": "The URL for the next page of results, if there are more"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "events",
                                    "total",
                                    "next_page"
                                ],
                                "title": "EventPage",
                                "description": "A single page of events returned from the API, with an optional link to the\nnext page of results"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the next page of Events for a previous query against the given Account, and\nthe URL to request the next page (if there are more results).",
            "tags": [
                "Events"
            ],
            "operationId": "read_account_events_page_api_accounts__account_id__events_filter_next_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/events/filter/next",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "page-token",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Page-Token"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "events": {
                                        "items": {
                                            "$ref": "#/components/schemas/ReceivedEvent"
                                        },
                                        "type": "array",
                                        "title": "Events",
                                        "description": "The Events matching the query"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total",
                                        "description": "The total number of matching Events"
                                    },
                                    "next_page": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "minLength": 1,
                                                "format": "uri"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Page",
                                        "description": "The URL for the next page of results, if there are more"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "events",
                                    "total",
                                    "next_page"
                                ],
                                "title": "EventPage",
                                "description": "A single page of events returned from the API, with an optional link to the\nnext page of results"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the next page of Events for a previous query against the given Account and\nWorkspace, and the URL to request the next page (if there are more results).",
            "tags": [
                "Events"
            ],
            "operationId": "read_workspace_events_page_api_accounts__account_id__workspaces__workspace_id__events_filter_next_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{flow_run_id}/events",
            "method": "get",
            "parameters": [
                {
                    "name": "flow_run_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Flow Run Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "offset",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "integer",
                        "maximum": 20000,
                        "minimum": 0,
                        "default": 0,
                        "title": "Offset"
                    }
                },
                {
                    "name": "order",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "title": "EventOrder"
                    }
                },
                {
                    "name": "with_task_runs",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "boolean",
                        "default": true,
                        "title": "With Task Runs"
                    }
                },
                {
                    "name": "limit",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "integer",
                        "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.",
                        "title": "Limit"
                    },
                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                },
                {
                    "name": "if-none-match",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "If-None-Match"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the first page of Events for a flow run against the given Account and Workspace.\n\nIf the `if-none-match` header is provided with the value of the current event count,\nthe server will return a 304 Not Modified response since the client already has the\nlatest events.",
            "tags": [
                "Events"
            ],
            "operationId": "get_events_for_flow_run_api_accounts__account_id__workspaces__workspace_id__flow_runs__flow_run_id__events_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/filter/next",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "page-token",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Page-Token"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "resources": {
                                        "items": {
                                            "$ref": "#/components/schemas/Resource"
                                        },
                                        "type": "array",
                                        "title": "Resources",
                                        "description": "The Resources matching the query"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total",
                                        "description": "The total number of matching Resources"
                                    },
                                    "next_page": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "minLength": 1,
                                                "format": "uri"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Page",
                                        "description": "The URL for the next page of results, if there are more"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "resources",
                                    "total",
                                    "next_page"
                                ],
                                "title": "ResourcePage",
                                "description": "A single page of resources returned from the API, with an optional link to the\nnext page of results"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the next page of Resources for a previous query against the given Account and\nWorkspace, and the URL to request the next page (if there are more results).",
            "tags": [
                "Resources"
            ],
            "operationId": "read_resources_page_api_accounts__account_id__workspaces__workspace_id__resources_filter_next_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/related/next",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "page-token",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Page-Token"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "resources": {
                                        "items": {
                                            "$ref": "#/components/schemas/RelatedResourceResult"
                                        },
                                        "type": "array",
                                        "title": "Resources",
                                        "description": "The Resources that were interacted with"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total",
                                        "description": "The total number of matching Resources"
                                    },
                                    "next_page": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "minLength": 1,
                                                "format": "uri"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Page",
                                        "description": "The URL for the next page of results, if there are more"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "resources",
                                    "total",
                                    "next_page"
                                ],
                                "title": "RelatedResourcePage"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns the next page of Resources for a previous query against the given Account and\nWorkspace, and the URL to request the next page (if there are more results).",
            "tags": [
                "Resources"
            ],
            "operationId": "read_related_resources_page_api_accounts__account_id__workspaces__workspace_id__resources_related_next_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/hidden-resources",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "paths": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Paths",
                                        "description": "The paths of the resources to exclude"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "paths"
                                ],
                                "title": "ResourceExclusions"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Resources"
            ],
            "operationId": "get_hidden_resources_api_accounts__account_id__workspaces__workspace_id__resources_hidden_resources_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of this automation"
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "A longer description of this automation",
                                        "default": ""
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Whether this automation will be evaluated",
                                        "default": true
                                    },
                                    "trigger": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/EventTrigger"
                                            },
                                            {
                                                "$ref": "#/components/schemas/MetricTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CompoundTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SequenceTrigger-Output"
                                            }
                                        ],
                                        "title": "Trigger",
                                        "description": "The criteria for which events this Automation covers and how it will respond to the presence or absence of those events"
                                    },
                                    "actions": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions",
                                        "description": "The actions to perform when this Automation triggers"
                                    },
                                    "actions_on_trigger": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Trigger",
                                        "description": "The actions to perform when an Automation goes into a triggered state"
                                    },
                                    "actions_on_resolve": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Resolve",
                                        "description": "The actions to perform when an Automation goes into a resolving state"
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "Labels to apply to this automation"
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account",
                                        "description": "The Account to which this automation belongs"
                                    },
                                    "workspace": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workspace",
                                        "description": "The Workspace to which this automation belongs"
                                    },
                                    "actor": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/ActorReference"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The Prefect Actor to use when running actions, defaulting to the Actor who created the Automation"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "trigger",
                                    "actions",
                                    "account",
                                    "workspace"
                                ],
                                "title": "Automation"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "read_automation_api_accounts__account_id__workspaces__workspace_id__automations__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/related-to/{resource_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "resource_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Resource Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Automation"
                                },
                                "title": "Response Read Automations Related To Resource Api Accounts  Account Id  Workspaces  Workspace Id  Automations Related To  Resource Id  Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "read_automations_related_to_resource_api_accounts__account_id__workspaces__workspace_id__automations_related_to__resource_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/{sla_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "sla_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Sla Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of this automation"
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "A longer description of this automation",
                                        "default": ""
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Whether this automation will be evaluated",
                                        "default": true
                                    },
                                    "trigger": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/EventTrigger"
                                            },
                                            {
                                                "$ref": "#/components/schemas/MetricTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CompoundTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SequenceTrigger-Output"
                                            }
                                        ],
                                        "title": "Trigger",
                                        "description": "The criteria for which events this Automation covers and how it will respond to the presence or absence of those events"
                                    },
                                    "actions": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions",
                                        "description": "The actions to perform when this Automation triggers"
                                    },
                                    "actions_on_trigger": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Trigger",
                                        "description": "The actions to perform when an Automation goes into a triggered state"
                                    },
                                    "actions_on_resolve": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Resolve",
                                        "description": "The actions to perform when an Automation goes into a resolving state"
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "Labels to apply to this automation"
                                    },
                                    "severity": {
                                        "$ref": "#/components/schemas/SlaSeverity",
                                        "description": "The severity level of violations of this SLA",
                                        "default": "moderate"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "TimeToCompletionSla",
                                            "FrequencySla",
                                            "FreshnessSla",
                                            "LatenessSla"
                                        ],
                                        "title": "Type",
                                        "description": "The type of the SLA"
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account",
                                        "description": "The Account to which this automation belongs"
                                    },
                                    "workspace": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workspace",
                                        "description": "The Workspace to which this automation belongs"
                                    },
                                    "actor": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/ActorReference"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The Prefect Actor to use when running actions, defaulting to the Actor who created the Automation"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "trigger",
                                    "actions",
                                    "type",
                                    "account",
                                    "workspace"
                                ],
                                "title": "ServiceLevelAgreement",
                                "description": "A Service Level Agreement that inherits from ServiceLevelAgreementCore"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "read_sla_api_accounts__account_id__workspaces__workspace_id__slas__sla_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/default/list",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Automation"
                                },
                                "title": "Response Read Default Sla List Api Accounts  Account Id  Workspaces  Workspace Id  Slas Default List Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "read_default_sla_list_api_accounts__account_id__workspaces__workspace_id__slas_default_list_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/default/{sla_severity}",
            "method": "get",
            "parameters": [
                {
                    "name": "sla_severity",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "minor",
                            "low",
                            "moderate",
                            "high",
                            "critical"
                        ],
                        "title": "SlaSeverity",
                        "description": "The severity of a SLA violation"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of this automation"
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "A longer description of this automation",
                                        "default": ""
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Whether this automation will be evaluated",
                                        "default": true
                                    },
                                    "trigger": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/EventTrigger"
                                            },
                                            {
                                                "$ref": "#/components/schemas/MetricTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CompoundTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SequenceTrigger-Output"
                                            }
                                        ],
                                        "title": "Trigger",
                                        "description": "The criteria for which events this Automation covers and how it will respond to the presence or absence of those events"
                                    },
                                    "actions": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions",
                                        "description": "The actions to perform when this Automation triggers"
                                    },
                                    "actions_on_trigger": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Trigger",
                                        "description": "The actions to perform when an Automation goes into a triggered state"
                                    },
                                    "actions_on_resolve": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Resolve",
                                        "description": "The actions to perform when an Automation goes into a resolving state"
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "Labels to apply to this automation"
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account",
                                        "description": "The Account to which this automation belongs"
                                    },
                                    "workspace": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workspace",
                                        "description": "The Workspace to which this automation belongs"
                                    },
                                    "actor": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/ActorReference"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The Prefect Actor to use when running actions, defaulting to the Actor who created the Automation"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "trigger",
                                    "actions",
                                    "account",
                                    "workspace"
                                ],
                                "title": "Automation"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "read_default_sla_api_accounts__account_id__workspaces__workspace_id__slas_default__sla_severity__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/webhooks/{webhook_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "webhook_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Webhook Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the webhook"
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "A longer description of the webhook",
                                        "default": ""
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Whether the webhook is enabled",
                                        "default": true
                                    },
                                    "service_account_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Service Account Id",
                                        "description": "The Service Account to which this webhook belongs"
                                    },
                                    "template": {
                                        "type": "string",
                                        "title": "Template",
                                        "description": "The template which translates the incoming HTTP headers and body into a Prefect Event"
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account",
                                        "description": "The Account to which this webhook belongs"
                                    },
                                    "workspace": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workspace",
                                        "description": "The Workspace to which this webhook belongs"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "title": "Slug",
                                        "description": "The slug of the webhook, used in the URL"
                                    },
                                    "service_account": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BotPartial"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The Service Account to which this webhook belongs"
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "name",
                                    "template",
                                    "account",
                                    "workspace",
                                    "service_account"
                                ],
                                "title": "WebhookRead"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Webhooks"
            ],
            "operationId": "read_webhook_api_accounts__account_id__workspaces__workspace_id__webhooks__webhook_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/tags",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TagResponse"
                                },
                                "title": "Response List Tags Api Accounts  Account Id  Workspaces  Workspace Id  Tags Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get all tags for the current workspace\n\nReturns:\n    List[TagResponse]: A list of tags with their first and last seen timestamps",
            "tags": [
                "Events"
            ],
            "operationId": "list_tags_api_accounts__account_id__workspaces__workspace_id__tags_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/logs/ai/flow_run_logs/{flow_run_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "flow_run_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Flow Run Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "result": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Result",
                                        "description": "Result returned by an LLM, if any."
                                    },
                                    "detail": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Detail",
                                        "description": "Details about an error that occurred while running the LLM, if any."
                                    }
                                },
                                "type": "object",
                                "title": "MarvinResult"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Summarize error logs for a flow run.\n\nIf the `flow_run_id` is not found, or if there are no error logs for the\nflow run, the `result` will be `None`.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "AI"
            ],
            "operationId": "summarize_flow_run_logs_api_accounts__account_id__workspaces__workspace_id__logs_ai_flow_run_logs__flow_run_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/logs",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "level_ge",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level Ge"
                    }
                },
                {
                    "name": "level_le",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level Le"
                    }
                },
                {
                    "name": "offset",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0,
                        "title": "Offset"
                    }
                },
                {
                    "name": "sort",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "TIMESTAMP_ASC",
                            "TIMESTAMP_DESC"
                        ],
                        "title": "LogSort",
                        "description": "Defines log sorting options."
                    }
                },
                {
                    "name": "limit",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "integer",
                        "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided.",
                        "title": "Limit"
                    },
                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                },
                {
                    "name": "if-none-match",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "If-None-Match"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Returns a page of logs for a flow run\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Logs",
                "Download"
            ],
            "operationId": "get_flow_run_logs_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__logs_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/download-logs-csv",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Download all flow run logs as a CSV file, collecting all logs until there are no more logs to retrieve.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Logs",
                "Download"
            ],
            "operationId": "download_flow_run_logs_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__download_logs_csv_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/logs/download",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Download all flow run logs as a CSV file, collecting all logs until there are no more logs to retrieve.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Logs",
                "Download"
            ],
            "operationId": "download_flow_run_logs_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__logs_download_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the artifact to retrieve.",
                        "title": "Id"
                    },
                    "description": "The ID of the artifact to retrieve."
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "key": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Key",
                                        "description": "An optional unique reference key for this artifact."
                                    },
                                    "type": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Type",
                                        "description": "An identifier that describes the shape of the data field. e.g. 'result', 'table', 'markdown'"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A markdown-enabled description of the artifact."
                                    },
                                    "data": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {},
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Data",
                                        "description": "Data associated with the artifact, e.g. a result.; structure depends on the artifact type.Content must be storable as JSON."
                                    },
                                    "metadata_": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Metadata",
                                        "description": "User-defined artifact metadata. Content must be string key and value pairs."
                                    },
                                    "flow_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Run Id",
                                        "description": "The flow run associated with the artifact."
                                    },
                                    "task_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Task Run Id",
                                        "description": "The task run associated with the artifact."
                                    }
                                },
                                "type": "object",
                                "title": "Artifact"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieve an artifact from the database.\n\nRequired workspace scopes: `see_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "read_artifact_api_accounts__account_id__workspaces__workspace_id__artifacts__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/{key}/latest",
            "method": "get",
            "parameters": [
                {
                    "name": "key",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The key of the artifact to retrieve.",
                        "title": "Key"
                    },
                    "description": "The key of the artifact to retrieve."
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "key": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Key",
                                        "description": "An optional unique reference key for this artifact."
                                    },
                                    "type": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Type",
                                        "description": "An identifier that describes the shape of the data field. e.g. 'result', 'table', 'markdown'"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A markdown-enabled description of the artifact."
                                    },
                                    "data": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {},
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Data",
                                        "description": "Data associated with the artifact, e.g. a result.; structure depends on the artifact type.Content must be storable as JSON."
                                    },
                                    "metadata_": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Metadata",
                                        "description": "User-defined artifact metadata. Content must be string key and value pairs."
                                    },
                                    "flow_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Run Id",
                                        "description": "The flow run associated with the artifact."
                                    },
                                    "task_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Task Run Id",
                                        "description": "The task run associated with the artifact."
                                    }
                                },
                                "type": "object",
                                "title": "Artifact"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Retrieve the latest artifact from the database.\n\nRequired workspace scopes: `see_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "read_latest_artifact_api_accounts__account_id__workspaces__workspace_id__artifacts__key__latest_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/collections/work_pool_types",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "Response Read Available Work Pool Types Api Accounts  Account Id  Workspaces  Workspace Id  Collections Work Pool Types Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Reads the content of a view from the prefect-collection-registry.\n\nRequired workspace scopes: `see_work_pools`",
            "tags": [
                "Collections"
            ],
            "operationId": "read_available_work_pool_types_api_accounts__account_id__workspaces__workspace_id__collections_work_pool_types_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flows/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow id",
                        "title": "Id"
                    },
                    "description": "The flow id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the flow",
                                        "examples": [
                                            "1"
                                        ]
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of flow tags",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "Flow",
                                "description": "An ORM representation of flow data."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a flow by id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flows"
            ],
            "operationId": "read_flow_api_accounts__account_id__workspaces__workspace_id__flows__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flows/name/{name}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The name of the flow",
                        "title": "Name"
                    },
                    "description": "The name of the flow"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the flow",
                                        "examples": [
                                            "1"
                                        ]
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of flow tags",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "Flow",
                                "description": "An ORM representation of flow data."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a flow by name.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flows"
            ],
            "operationId": "read_flow_by_name_api_accounts__account_id__workspaces__workspace_id__flows_name__name__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the flow run. Defaults to a random slug if not specified.",
                                        "examples": [
                                            "my-flow-run"
                                        ]
                                    },
                                    "flow_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Flow Id",
                                        "description": "The id of the flow being run."
                                    },
                                    "flow_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Name",
                                        "description": "The name of the flow being run."
                                    },
                                    "flow_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Version",
                                        "description": "The version of the flow executed in this flow run.",
                                        "examples": [
                                            "1.0"
                                        ]
                                    },
                                    "state_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Id",
                                        "description": "The id of the flow run's current state."
                                    },
                                    "deployment_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Id",
                                        "description": "The deployment associated with this flow run"
                                    },
                                    "deployment_version_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Version Id",
                                        "description": "The deployment version associated with this flow run."
                                    },
                                    "deployment_version_info": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/VersionInfo"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The version info of the deployment associated with this flow run."
                                    },
                                    "deployment_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Version",
                                        "description": "The version of the deployment associated with this flow run.",
                                        "examples": [
                                            "1.0"
                                        ]
                                    },
                                    "work_queue_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Id",
                                        "description": "The id of the run's work pool queue."
                                    },
                                    "work_queue_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Name",
                                        "description": "The work queue that handled this flow run."
                                    },
                                    "parameters": {
                                        "type": "object",
                                        "title": "Parameters",
                                        "description": "Parameters for the flow run."
                                    },
                                    "idempotency_key": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Idempotency Key",
                                        "description": "An optional idempotency key for the flow run. Used to ensure the same flow run is not created multiple times."
                                    },
                                    "context": {
                                        "type": "object",
                                        "title": "Context",
                                        "description": "Additional context for the flow run.",
                                        "examples": [
                                            {
                                                "my_var": "my_val"
                                            }
                                        ]
                                    },
                                    "empirical_policy": {
                                        "$ref": "#/components/schemas/FlowRunPolicy"
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags on the flow run",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    },
                                    "parent_task_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Parent Task Run Id",
                                        "description": "If the flow run is a subflow, the id of the 'dummy' task in the parent flow used to track subflow state."
                                    },
                                    "state_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/StateType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The type of the current flow run state."
                                    },
                                    "state_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Name",
                                        "description": "The name of the current flow run state."
                                    },
                                    "run_count": {
                                        "type": "integer",
                                        "title": "Run Count",
                                        "description": "The number of times the flow run was executed.",
                                        "default": 0
                                    },
                                    "expected_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Expected Start Time",
                                        "description": "The flow run's expected start time."
                                    },
                                    "next_scheduled_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Scheduled Start Time",
                                        "description": "The next time the flow run is scheduled to start."
                                    },
                                    "start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Start Time",
                                        "description": "The actual start time."
                                    },
                                    "end_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "End Time",
                                        "description": "The actual end time."
                                    },
                                    "total_run_time": {
                                        "type": "number",
                                        "title": "Total Run Time",
                                        "description": "Total run time. If the flow run was executed multiple times, the time of each run will be summed.",
                                        "default": 0.0
                                    },
                                    "estimated_run_time": {
                                        "type": "number",
                                        "title": "Estimated Run Time",
                                        "description": "A real-time estimate of the total run time.",
                                        "default": 0.0
                                    },
                                    "estimated_start_time_delta": {
                                        "type": "number",
                                        "title": "Estimated Start Time Delta",
                                        "description": "The difference between actual and expected start time.",
                                        "default": 0.0
                                    },
                                    "auto_scheduled": {
                                        "type": "boolean",
                                        "title": "Auto Scheduled",
                                        "description": "Whether or not the flow run was automatically scheduled.",
                                        "default": false
                                    },
                                    "infrastructure_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Document Id",
                                        "description": "The block document defining infrastructure to use this flow run."
                                    },
                                    "infrastructure_pid": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Pid",
                                        "description": "The id of the flow run as returned by an infrastructure block."
                                    },
                                    "created_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/CreatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the creator of this flow run."
                                    },
                                    "work_pool_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Id",
                                        "description": "The id of the flow run's work pool."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the flow run's work pool.",
                                        "examples": [
                                            "my-work-pool"
                                        ]
                                    },
                                    "state": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/State"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The current state of the flow run."
                                    },
                                    "job_variables": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Job Variables",
                                        "description": "Variables used as overrides in the base job template"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "flow_id"
                                ],
                                "title": "FlowRunResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a flow run by id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "read_flow_run_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/graph",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DependencyResult"
                                },
                                "title": "Response Read Flow Run Graph V1 Api Accounts  Account Id  Workspaces  Workspace Id  Flow Runs  Id  Graph Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a task run dependency map for a given flow run.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "read_flow_run_graph_v1_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__graph_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/graph-v2",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "since",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only include runs that start or end after this time.",
                        "default": "0001-01-01T00:00:00",
                        "title": "Since"
                    },
                    "description": "Only include runs that start or end after this time."
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "Start Time"
                                    },
                                    "end_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "End Time"
                                    },
                                    "root_node_ids": {
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "type": "array",
                                        "title": "Root Node Ids"
                                    },
                                    "nodes": {
                                        "items": {
                                            "prefixItems": [
                                                {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/Node"
                                                }
                                            ],
                                            "type": "array",
                                            "maxItems": 2,
                                            "minItems": 2
                                        },
                                        "type": "array",
                                        "title": "Nodes"
                                    },
                                    "artifacts": {
                                        "items": {
                                            "$ref": "#/components/schemas/GraphArtifact"
                                        },
                                        "type": "array",
                                        "title": "Artifacts"
                                    },
                                    "states": {
                                        "items": {
                                            "$ref": "#/components/schemas/GraphState"
                                        },
                                        "type": "array",
                                        "title": "States"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "start_time",
                                    "end_time",
                                    "root_node_ids",
                                    "nodes",
                                    "artifacts",
                                    "states"
                                ],
                                "title": "Graph"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a graph of the tasks and subflow runs for the given flow run\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "read_flow_run_graph_v2_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__graph_v2_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/input/{key}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "key",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The input key",
                        "title": "Key"
                    },
                    "description": "The input key"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Create a value from a flow run input\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "read_flow_run_input_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__input__key__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/job/config",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read the job configuration that a worker used to deploy a flow run.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "get_flow_run_job_config_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__job_config_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The task run id",
                        "title": "Id"
                    },
                    "description": "The task run id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "examples": [
                                            "my-task-run"
                                        ]
                                    },
                                    "flow_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Run Id",
                                        "description": "The flow run id of the task run."
                                    },
                                    "task_key": {
                                        "type": "string",
                                        "title": "Task Key",
                                        "description": "A unique identifier for the task being run."
                                    },
                                    "dynamic_key": {
                                        "type": "string",
                                        "title": "Dynamic Key",
                                        "description": "A dynamic key used to differentiate between multiple runs of the same task within the same flow run."
                                    },
                                    "cache_key": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Cache Key",
                                        "description": "An optional cache key. If a COMPLETED state associated with this cache key is found, the cached COMPLETED state will be used instead of executing the task run."
                                    },
                                    "cache_expiration": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Cache Expiration",
                                        "description": "Specifies when the cached state should expire."
                                    },
                                    "task_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Task Version",
                                        "description": "The version of the task being run."
                                    },
                                    "empirical_policy": {
                                        "$ref": "#/components/schemas/TaskRunPolicy"
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags for the task run.",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    },
                                    "state_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Id",
                                        "description": "The id of the current task run state."
                                    },
                                    "task_inputs": {
                                        "additionalProperties": {
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "$ref": "#/components/schemas/TaskRunResult"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Parameter"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Constant"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "type": "object",
                                        "title": "Task Inputs",
                                        "description": "Tracks the source of inputs to a task run. Used for internal bookkeeping."
                                    },
                                    "state_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/StateType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The type of the current task run state."
                                    },
                                    "state_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Name",
                                        "description": "The name of the current task run state."
                                    },
                                    "run_count": {
                                        "type": "integer",
                                        "title": "Run Count",
                                        "description": "The number of times the task run has been executed.",
                                        "default": 0
                                    },
                                    "flow_run_run_count": {
                                        "type": "integer",
                                        "title": "Flow Run Run Count",
                                        "description": "If the parent flow has retried, this indicates the flow retry this run is associated with.",
                                        "default": 0
                                    },
                                    "expected_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Expected Start Time",
                                        "description": "The task run's expected start time."
                                    },
                                    "next_scheduled_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Scheduled Start Time",
                                        "description": "The next time the task run is scheduled to start."
                                    },
                                    "start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Start Time",
                                        "description": "The actual start time."
                                    },
                                    "end_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "End Time",
                                        "description": "The actual end time."
                                    },
                                    "total_run_time": {
                                        "type": "number",
                                        "title": "Total Run Time",
                                        "description": "Total run time. If the task run was executed multiple times, the time of each run will be summed.",
                                        "default": 0.0
                                    },
                                    "estimated_run_time": {
                                        "type": "number",
                                        "title": "Estimated Run Time",
                                        "description": "A real-time estimate of total run time.",
                                        "default": 0.0
                                    },
                                    "estimated_start_time_delta": {
                                        "type": "number",
                                        "title": "Estimated Start Time Delta",
                                        "description": "The difference between actual and expected start time.",
                                        "default": 0.0
                                    },
                                    "state": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/State"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The current task run state."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "task_key",
                                    "dynamic_key"
                                ],
                                "title": "TaskRun",
                                "description": "An ORM representation of task run data."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a task run by id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "read_task_run_api_accounts__account_id__workspaces__workspace_id__task_runs__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_run_states/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run state id",
                        "title": "Id"
                    },
                    "description": "The flow run state id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/StateType"
                                    },
                                    "name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Name"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "Timestamp"
                                    },
                                    "message": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Message",
                                        "examples": [
                                            "Run started"
                                        ]
                                    },
                                    "data": {
                                        "anyOf": [
                                            {},
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Data",
                                        "description": "Data associated with the state, e.g. a result. Content must be storable as JSON."
                                    },
                                    "state_details": {
                                        "$ref": "#/components/schemas/StateDetails"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "type"
                                ],
                                "title": "State",
                                "description": "Represents the state of a run."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a flow run state by id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Run States"
            ],
            "operationId": "read_flow_run_state_api_accounts__account_id__workspaces__workspace_id__flow_run_states__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_run_states/",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "flow_run_id",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Flow Run Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/State"
                                },
                                "title": "Response Read Flow Run States Api Accounts  Account Id  Workspaces  Workspace Id  Flow Run States  Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get states associated with a flow run.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Run States"
            ],
            "operationId": "read_flow_run_states_api_accounts__account_id__workspaces__workspace_id__flow_run_states__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_run_states/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The task run state id",
                        "title": "Id"
                    },
                    "description": "The task run state id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/StateType"
                                    },
                                    "name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Name"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "Timestamp"
                                    },
                                    "message": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Message",
                                        "examples": [
                                            "Run started"
                                        ]
                                    },
                                    "data": {
                                        "anyOf": [
                                            {},
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Data",
                                        "description": "Data associated with the state, e.g. a result. Content must be storable as JSON."
                                    },
                                    "state_details": {
                                        "$ref": "#/components/schemas/StateDetails"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "type"
                                ],
                                "title": "State",
                                "description": "Represents the state of a run."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a task run state by id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Run States"
            ],
            "operationId": "read_task_run_state_api_accounts__account_id__workspaces__workspace_id__task_run_states__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_run_states/",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "task_run_id",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Task Run Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/State"
                                },
                                "title": "Response Read Task Run States Api Accounts  Account Id  Workspaces  Workspace Id  Task Run States  Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get states associated with a task run.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Run States"
            ],
            "operationId": "read_task_run_states_api_accounts__account_id__workspaces__workspace_id__task_run_states__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "infra_overrides": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infra Overrides",
                                        "description": "Deprecated field. Use `job_variables` instead."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the deployment."
                                    },
                                    "version_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Version Id",
                                        "description": "The ID of the default version of this deployment"
                                    },
                                    "version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Version",
                                        "description": "An optional version for the deployment."
                                    },
                                    "version_info": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/VersionInfo"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Information about the version of the deployment."
                                    },
                                    "branch": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Branch",
                                        "description": "The branch that this deployment belongs to."
                                    },
                                    "root": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Root",
                                        "description": "The deployment id of the root deployment when following the chain of deployments from base."
                                    },
                                    "base": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Base",
                                        "description": "The id of the deployment that this deployment branched from"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A description for the deployment."
                                    },
                                    "flow_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Flow Id",
                                        "description": "The flow id associated with the deployment."
                                    },
                                    "schedule": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/IntervalSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CronSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RRuleSchedule"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Schedule",
                                        "description": "A schedule for the deployment."
                                    },
                                    "is_schedule_active": {
                                        "type": "boolean",
                                        "title": "Is Schedule Active",
                                        "description": "Whether or not the deployment schedule is active.",
                                        "default": true
                                    },
                                    "paused": {
                                        "type": "boolean",
                                        "title": "Paused",
                                        "description": "Whether or not the deployment is paused.",
                                        "default": false
                                    },
                                    "disabled": {
                                        "type": "boolean",
                                        "title": "Disabled",
                                        "description": "Whether or not the deployment is disabled.",
                                        "default": false
                                    },
                                    "schedules": {
                                        "items": {
                                            "$ref": "#/components/schemas/DeploymentSchedule"
                                        },
                                        "type": "array",
                                        "title": "Schedules",
                                        "description": "A list of schedules for the deployment."
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "DEPRECATED: Prefer `global_concurrency_limit`. Will always be None for backwards compatibility. Will be removed after December 2024.",
                                        "deprecated": true
                                    },
                                    "global_concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/GlobalConcurrencyLimitResponse"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The global concurrency limit object for enforcing the maximum number of flow runs that can be active at once."
                                    },
                                    "concurrency_options": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/ConcurrencyOptions"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Options for configuring deployment concurrency."
                                    },
                                    "job_variables": {
                                        "type": "object",
                                        "title": "Job Variables",
                                        "description": "Overrides to apply to the base infrastructure block at runtime."
                                    },
                                    "parameters": {
                                        "type": "object",
                                        "title": "Parameters",
                                        "description": "Parameters for flow runs scheduled by the deployment."
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags for the deployment",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    },
                                    "work_queue_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Name",
                                        "description": "The work queue for the deployment. If no work queue is set, work will not be scheduled."
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time the deployment was polled for status updates."
                                    },
                                    "parameter_openapi_schema": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Parameter Openapi Schema",
                                        "description": "The parameter schema of the flow, including defaults."
                                    },
                                    "path": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Path",
                                        "description": "The path to the working directory for the workflow, relative to remote storage or an absolute path."
                                    },
                                    "pull_steps": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Pull Steps",
                                        "description": "Pull steps for cloning and running this deployment."
                                    },
                                    "entrypoint": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Entrypoint",
                                        "description": "The path to the entrypoint for the workflow, relative to the `path`."
                                    },
                                    "manifest_path": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Manifest Path",
                                        "description": "The path to the flow's manifest file, relative to the chosen storage."
                                    },
                                    "storage_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Storage Document Id",
                                        "description": "The block document defining storage used for this flow."
                                    },
                                    "infrastructure_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Document Id",
                                        "description": "The block document defining infrastructure to use for flow runs."
                                    },
                                    "created_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/CreatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the creator of this deployment."
                                    },
                                    "updated_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/UpdatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the updater of this deployment."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the deployment's work pool."
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DeploymentStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Whether the deployment is ready to run flows.",
                                        "default": "NOT_READY"
                                    },
                                    "enforce_parameter_schema": {
                                        "type": "boolean",
                                        "title": "Enforce Parameter Schema",
                                        "description": "Whether or not the deployment should enforce the parameter schema.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "flow_id"
                                ],
                                "title": "DeploymentResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a deployment by id.\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "read_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/name/{flow_name}/{deployment_name}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "flow_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The name of the flow",
                        "title": "Flow Name"
                    },
                    "description": "The name of the flow"
                },
                {
                    "name": "deployment_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The name of the deployment",
                        "title": "Deployment Name"
                    },
                    "description": "The name of the deployment"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "infra_overrides": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infra Overrides",
                                        "description": "Deprecated field. Use `job_variables` instead."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the deployment."
                                    },
                                    "version_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Version Id",
                                        "description": "The ID of the default version of this deployment"
                                    },
                                    "version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Version",
                                        "description": "An optional version for the deployment."
                                    },
                                    "version_info": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/VersionInfo"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Information about the version of the deployment."
                                    },
                                    "branch": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Branch",
                                        "description": "The branch that this deployment belongs to."
                                    },
                                    "root": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Root",
                                        "description": "The deployment id of the root deployment when following the chain of deployments from base."
                                    },
                                    "base": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Base",
                                        "description": "The id of the deployment that this deployment branched from"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A description for the deployment."
                                    },
                                    "flow_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Flow Id",
                                        "description": "The flow id associated with the deployment."
                                    },
                                    "schedule": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/IntervalSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CronSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RRuleSchedule"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Schedule",
                                        "description": "A schedule for the deployment."
                                    },
                                    "is_schedule_active": {
                                        "type": "boolean",
                                        "title": "Is Schedule Active",
                                        "description": "Whether or not the deployment schedule is active.",
                                        "default": true
                                    },
                                    "paused": {
                                        "type": "boolean",
                                        "title": "Paused",
                                        "description": "Whether or not the deployment is paused.",
                                        "default": false
                                    },
                                    "disabled": {
                                        "type": "boolean",
                                        "title": "Disabled",
                                        "description": "Whether or not the deployment is disabled.",
                                        "default": false
                                    },
                                    "schedules": {
                                        "items": {
                                            "$ref": "#/components/schemas/DeploymentSchedule"
                                        },
                                        "type": "array",
                                        "title": "Schedules",
                                        "description": "A list of schedules for the deployment."
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "DEPRECATED: Prefer `global_concurrency_limit`. Will always be None for backwards compatibility. Will be removed after December 2024.",
                                        "deprecated": true
                                    },
                                    "global_concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/GlobalConcurrencyLimitResponse"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The global concurrency limit object for enforcing the maximum number of flow runs that can be active at once."
                                    },
                                    "concurrency_options": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/ConcurrencyOptions"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Options for configuring deployment concurrency."
                                    },
                                    "job_variables": {
                                        "type": "object",
                                        "title": "Job Variables",
                                        "description": "Overrides to apply to the base infrastructure block at runtime."
                                    },
                                    "parameters": {
                                        "type": "object",
                                        "title": "Parameters",
                                        "description": "Parameters for flow runs scheduled by the deployment."
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags for the deployment",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    },
                                    "work_queue_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Name",
                                        "description": "The work queue for the deployment. If no work queue is set, work will not be scheduled."
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time the deployment was polled for status updates."
                                    },
                                    "parameter_openapi_schema": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Parameter Openapi Schema",
                                        "description": "The parameter schema of the flow, including defaults."
                                    },
                                    "path": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Path",
                                        "description": "The path to the working directory for the workflow, relative to remote storage or an absolute path."
                                    },
                                    "pull_steps": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Pull Steps",
                                        "description": "Pull steps for cloning and running this deployment."
                                    },
                                    "entrypoint": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Entrypoint",
                                        "description": "The path to the entrypoint for the workflow, relative to the `path`."
                                    },
                                    "manifest_path": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Manifest Path",
                                        "description": "The path to the flow's manifest file, relative to the chosen storage."
                                    },
                                    "storage_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Storage Document Id",
                                        "description": "The block document defining storage used for this flow."
                                    },
                                    "infrastructure_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Document Id",
                                        "description": "The block document defining infrastructure to use for flow runs."
                                    },
                                    "created_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/CreatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the creator of this deployment."
                                    },
                                    "updated_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/UpdatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the updater of this deployment."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the deployment's work pool."
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DeploymentStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Whether the deployment is ready to run flows.",
                                        "default": "NOT_READY"
                                    },
                                    "enforce_parameter_schema": {
                                        "type": "boolean",
                                        "title": "Enforce Parameter Schema",
                                        "description": "Whether or not the deployment should enforce the parameter schema.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "flow_id"
                                ],
                                "title": "DeploymentResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a deployment using the name of the flow and the deployment.\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "read_deployment_by_name_api_accounts__account_id__workspaces__workspace_id__deployments_name__flow_name___deployment_name__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/access",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "manage_actors": {
                                        "items": {
                                            "$ref": "#/components/schemas/ObjectActorAccess"
                                        },
                                        "type": "array",
                                        "title": "Manage Actors",
                                        "description": "A list of actors with access to manage the deployment."
                                    },
                                    "run_actors": {
                                        "items": {
                                            "$ref": "#/components/schemas/ObjectActorAccess"
                                        },
                                        "type": "array",
                                        "title": "Run Actors",
                                        "description": "A list of actors with access to run the deployment."
                                    },
                                    "view_actors": {
                                        "items": {
                                            "$ref": "#/components/schemas/ObjectActorAccess"
                                        },
                                        "type": "array",
                                        "title": "View Actors",
                                        "description": "A list of actors with access to view the deployment."
                                    }
                                },
                                "type": "object",
                                "title": "DeploymentAccessControl",
                                "description": "A representation of the access control for a deployment."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read access controls for a deployment.\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "read_deployment_access_api_accounts__account_id__workspaces__workspace_id__deployments__id__access_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/work_queue_check",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkQueue"
                                },
                                "title": "Response Work Queue Check For Deployment Api Accounts  Account Id  Workspaces  Workspace Id  Deployments  Id  Work Queue Check Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get list of work-queues that are able to pick up the specified deployment.\n\nThis endpoint is intended to be used by the UI to provide users warnings\nabout deployments that are unable to be executed because there are no work\nqueues that will pick up their runs, based on existing filter criteria. It\nmay be deprecated in the future because there is not a strict relationship\nbetween work queues and deployments.",
            "tags": [
                "Deployments"
            ],
            "operationId": "work_queue_check_for_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__work_queue_check_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/schedules",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeploymentScheduleResponse"
                                },
                                "title": "Response Read Deployment Schedules Api Accounts  Account Id  Workspaces  Workspace Id  Deployments  Id  Schedules Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "read_deployment_schedules_api_accounts__account_id__workspaces__workspace_id__deployments__id__schedules_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/versions/{version_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "version_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The version id",
                        "title": "Version Id"
                    },
                    "description": "The version id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "infra_overrides": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infra Overrides",
                                        "description": "Deprecated field. Use `job_variables` instead."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A description for the deployment."
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags for the deployment."
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels."
                                    },
                                    "entrypoint": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Entrypoint",
                                        "description": "The path to the entrypoint for the workflow, relative to the `path`."
                                    },
                                    "pull_steps": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Pull Steps",
                                        "description": "The steps required to pull this deployment's project to a remote location."
                                    },
                                    "parameters": {
                                        "type": "object",
                                        "title": "Parameters",
                                        "description": "Parameters for flow runs scheduled by the deployment."
                                    },
                                    "parameter_openapi_schema": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Parameter Openapi Schema",
                                        "description": "The parameter schema of the flow, including defaults."
                                    },
                                    "enforce_parameter_schema": {
                                        "type": "boolean",
                                        "title": "Enforce Parameter Schema",
                                        "description": "Whether or not the deployment should enforce the parameter schema.",
                                        "default": false
                                    },
                                    "work_queue_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Id",
                                        "description": "The id of the work pool queue to which this deployment is assigned."
                                    },
                                    "work_queue_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Name",
                                        "description": "The work queue for the deployment. If no work queue is set, work will not be scheduled."
                                    },
                                    "job_variables": {
                                        "type": "object",
                                        "title": "Job Variables",
                                        "description": "Overrides to apply to the base infrastructure block at runtime."
                                    },
                                    "created_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/CreatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the creator of this deployment."
                                    },
                                    "updated_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/UpdatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the updater of this deployment."
                                    },
                                    "deployment_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Deployment Id",
                                        "description": "The deployment ID."
                                    },
                                    "version_info": {
                                        "$ref": "#/components/schemas/VersionInfo",
                                        "description": "Information about the version of the deployment."
                                    },
                                    "last_active": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Active",
                                        "description": "The timestamp of the last time the deployment version was live or run. Is updated when the version moves from live to non-live, none-live to live, or when a run occurs."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the work pool the work pool resides within."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "deployment_id",
                                    "version_info"
                                ],
                                "title": "DeploymentVersionResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "read_deployment_version_api_accounts__account_id__workspaces__workspace_id__deployments__id__versions__version_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/saved_searches/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The saved search id",
                        "title": "Id"
                    },
                    "description": "The saved search id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the saved search."
                                    },
                                    "filters": {
                                        "items": {
                                            "$ref": "#/components/schemas/SavedSearchFilter"
                                        },
                                        "type": "array",
                                        "title": "Filters",
                                        "description": "The filter set for the saved search."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "SavedSearch",
                                "description": "An ORM representation of saved search data. Represents a set of filter criteria."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a saved search by id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "SavedSearches"
            ],
            "operationId": "read_saved_search_api_accounts__account_id__workspaces__workspace_id__saved_searches__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The concurrency limit id",
                        "title": "Id"
                    },
                    "description": "The concurrency limit id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "title": "Tag",
                                        "description": "A tag the concurrency limit is applied to."
                                    },
                                    "concurrency_limit": {
                                        "type": "integer",
                                        "title": "Concurrency Limit",
                                        "description": "The concurrency limit."
                                    },
                                    "active_slots": {
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "type": "array",
                                        "title": "Active Slots",
                                        "description": "A list of active run ids using a concurrency slot"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "tag",
                                    "concurrency_limit"
                                ],
                                "title": "ConcurrencyLimit",
                                "description": "An ORM representation of a concurrency limit."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a concurrency limit by id.\n\nThe `active slots` field contains a list of TaskRun IDs currently using a\nconcurrency slot for the specified tag.\n\nRequired workspace scopes: `see_concurrency_limits`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "read_concurrency_limit_api_accounts__account_id__workspaces__workspace_id__concurrency_limits__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/tag/{tag}",
            "method": "get",
            "parameters": [
                {
                    "name": "tag",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The tag name",
                        "title": "Tag"
                    },
                    "description": "The tag name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "title": "Tag",
                                        "description": "A tag the concurrency limit is applied to."
                                    },
                                    "concurrency_limit": {
                                        "type": "integer",
                                        "title": "Concurrency Limit",
                                        "description": "The concurrency limit."
                                    },
                                    "active_slots": {
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "type": "array",
                                        "title": "Active Slots",
                                        "description": "A list of active run ids using a concurrency slot"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "tag",
                                    "concurrency_limit"
                                ],
                                "title": "ConcurrencyLimit",
                                "description": "An ORM representation of a concurrency limit."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a concurrency limit by tag.\n\nThe `active slots` field contains a list of TaskRun IDs currently using a\nconcurrency slot for the specified tag.\n\nRequired workspace scopes: `see_concurrency_limits`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "read_concurrency_limit_by_tag_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_tag__tag__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/v2/concurrency_limits/{id_or_name}",
            "method": "get",
            "parameters": [
                {
                    "name": "id_or_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "The ID or name of the concurrency limit",
                        "title": "Id Or Name"
                    },
                    "description": "The ID or name of the concurrency limit"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "title": "Active",
                                        "description": "Whether the global concurrency limit is active.",
                                        "default": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the global concurrency limit."
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit",
                                        "description": "The concurrency limit."
                                    },
                                    "active_slots": {
                                        "type": "integer",
                                        "title": "Active Slots",
                                        "description": "The number of active slots."
                                    },
                                    "slot_decay_per_second": {
                                        "type": "number",
                                        "title": "Slot Decay Per Second",
                                        "description": "The decay rate for active slots when used as a rate limit.",
                                        "default": 0.0
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "limit",
                                    "active_slots"
                                ],
                                "title": "GlobalConcurrencyLimitResponse",
                                "description": "A response object for global concurrency limits."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_concurrency_limits`",
            "tags": [
                "Concurrency Limits V2"
            ],
            "operationId": "read_concurrency_limit_v2_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits__id_or_name__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block type ID",
                        "title": "Id"
                    },
                    "description": "The block type ID"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "A block type's name"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "title": "Slug",
                                        "description": "A block type's slug"
                                    },
                                    "logo_url": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Logo Url",
                                        "description": "Web URL for the block type's logo"
                                    },
                                    "documentation_url": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Documentation Url",
                                        "description": "Web URL for the block type's documentation"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A short blurb about the corresponding block's intended use"
                                    },
                                    "code_example": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Code Example",
                                        "description": "A code snippet demonstrating use of the corresponding block"
                                    },
                                    "is_protected": {
                                        "type": "boolean",
                                        "title": "Is Protected",
                                        "description": "Protected block types cannot be modified via API.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "title": "BlockType",
                                "description": "An ORM representation of a block type"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a block type by ID.\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block types"
            ],
            "operationId": "read_block_type_by_id_api_accounts__account_id__workspaces__workspace_id__block_types__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/slug/{slug}",
            "method": "get",
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The block type name",
                        "title": "Slug"
                    },
                    "description": "The block type name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "A block type's name"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "title": "Slug",
                                        "description": "A block type's slug"
                                    },
                                    "logo_url": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Logo Url",
                                        "description": "Web URL for the block type's logo"
                                    },
                                    "documentation_url": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Documentation Url",
                                        "description": "Web URL for the block type's documentation"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A short blurb about the corresponding block's intended use"
                                    },
                                    "code_example": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Code Example",
                                        "description": "A code snippet demonstrating use of the corresponding block"
                                    },
                                    "is_protected": {
                                        "type": "boolean",
                                        "title": "Is Protected",
                                        "description": "Protected block types cannot be modified via API.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "title": "BlockType",
                                "description": "An ORM representation of a block type"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a block type by name.\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block types"
            ],
            "operationId": "read_block_type_by_slug_api_accounts__account_id__workspaces__workspace_id__block_types_slug__slug__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/slug/{slug}/block_documents",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The block type name",
                        "title": "Slug"
                    },
                    "description": "The block type name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "include_secrets",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "boolean",
                        "description": "Whether to include sensitive values in the block document.",
                        "default": false,
                        "title": "Include Secrets"
                    },
                    "description": "Whether to include sensitive values in the block document."
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BlockDocument"
                                },
                                "title": "Response Read Block Documents For Block Type Api Accounts  Account Id  Workspaces  Workspace Id  Block Types Slug  Slug  Block Documents Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block types",
                "Block types",
                "Block documents"
            ],
            "operationId": "read_block_documents_for_block_type_api_accounts__account_id__workspaces__workspace_id__block_types_slug__slug__block_documents_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/slug/{slug}/block_documents/name/{block_document_name}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The block type name",
                        "title": "Slug"
                    },
                    "description": "The block type name"
                },
                {
                    "name": "block_document_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The block type name",
                        "title": "Block Document Name"
                    },
                    "description": "The block type name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "include_secrets",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "boolean",
                        "description": "Whether to include sensitive values in the block document.",
                        "default": false,
                        "title": "Include Secrets"
                    },
                    "description": "Whether to include sensitive values in the block document."
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "^[^/%&><]+$"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Name",
                                        "description": "The block document's name. Not required for anonymous block documents."
                                    },
                                    "data": {
                                        "type": "object",
                                        "title": "Data",
                                        "description": "The block document's data"
                                    },
                                    "block_schema_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Block Schema Id",
                                        "description": "A block schema ID"
                                    },
                                    "block_schema": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockSchema"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block schema"
                                    },
                                    "block_type_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Block Type Id",
                                        "description": "A block type ID"
                                    },
                                    "block_type_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Block Type Name",
                                        "description": "A block type name"
                                    },
                                    "block_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block type"
                                    },
                                    "block_document_references": {
                                        "additionalProperties": {
                                            "type": "object"
                                        },
                                        "type": "object",
                                        "title": "Block Document References",
                                        "description": "Record of the block document's references"
                                    },
                                    "is_anonymous": {
                                        "type": "boolean",
                                        "title": "Is Anonymous",
                                        "description": "Whether the block is anonymous (anonymous blocks are usually created by Prefect automatically)",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "block_schema_id",
                                    "block_type_id"
                                ],
                                "title": "BlockDocument",
                                "description": "An ORM representation of a block document."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block types",
                "Block types",
                "Block documents"
            ],
            "operationId": "read_block_document_by_name_for_block_type_api_accounts__account_id__workspaces__workspace_id__block_types_slug__slug__block_documents_name__block_document_name__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block document id",
                        "title": "Id"
                    },
                    "description": "The block document id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "include_secrets",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "boolean",
                        "description": "Whether to include sensitive values in the block document.",
                        "default": false,
                        "title": "Include Secrets"
                    },
                    "description": "Whether to include sensitive values in the block document."
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "^[^/%&><]+$"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Name",
                                        "description": "The block document's name. Not required for anonymous block documents."
                                    },
                                    "data": {
                                        "type": "object",
                                        "title": "Data",
                                        "description": "The block document's data"
                                    },
                                    "block_schema_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Block Schema Id",
                                        "description": "A block schema ID"
                                    },
                                    "block_schema": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockSchema"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block schema"
                                    },
                                    "block_type_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Block Type Id",
                                        "description": "A block type ID"
                                    },
                                    "block_type_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Block Type Name",
                                        "description": "A block type name"
                                    },
                                    "block_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block type"
                                    },
                                    "block_document_references": {
                                        "additionalProperties": {
                                            "type": "object"
                                        },
                                        "type": "object",
                                        "title": "Block Document References",
                                        "description": "Record of the block document's references"
                                    },
                                    "is_anonymous": {
                                        "type": "boolean",
                                        "title": "Is Anonymous",
                                        "description": "Whether the block is anonymous (anonymous blocks are usually created by Prefect automatically)",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "block_schema_id",
                                    "block_type_id"
                                ],
                                "title": "BlockDocument",
                                "description": "An ORM representation of a block document."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "read_block_document_by_id_api_accounts__account_id__workspaces__workspace_id__block_documents__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/{id}/access",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block_document id",
                        "title": "Id"
                    },
                    "description": "The block_document id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "manage_actors": {
                                        "items": {
                                            "$ref": "#/components/schemas/ObjectActorAccess"
                                        },
                                        "type": "array",
                                        "title": "Manage Actors",
                                        "description": "A list of actors with access to manage the block document."
                                    },
                                    "view_actors": {
                                        "items": {
                                            "$ref": "#/components/schemas/ObjectActorAccess"
                                        },
                                        "type": "array",
                                        "title": "View Actors",
                                        "description": "A list of actors with access to view the block document."
                                    }
                                },
                                "type": "object",
                                "title": "BlockDocumentAccessControl",
                                "description": "A representation of the access control for a block document."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read access controls for a block_document.\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "read_block_document_access_api_accounts__account_id__workspaces__workspace_id__block_documents__id__access_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "title": "Name",
                                        "description": "The name of the variable",
                                        "examples": [
                                            "my_variable"
                                        ]
                                    },
                                    "value": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "boolean"
                                            },
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "items": {},
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Value",
                                        "description": "The value of the variable",
                                        "examples": [
                                            "my-value"
                                        ]
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of variable tags",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "value"
                                ],
                                "title": "Variable"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "read_variable_api_accounts__account_id__workspaces__workspace_id__variables__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/name/{name}",
            "method": "get",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "title": "Name",
                                        "description": "The name of the variable",
                                        "examples": [
                                            "my_variable"
                                        ]
                                    },
                                    "value": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "boolean"
                                            },
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "items": {},
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Value",
                                        "description": "The value of the variable",
                                        "examples": [
                                            "my-value"
                                        ]
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of variable tags",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "value"
                                ],
                                "title": "Variable"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "read_variable_by_name_api_accounts__account_id__workspaces__workspace_id__variables_name__name__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{name}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the work pool."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A description of the work pool."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Type",
                                        "description": "The work pool type."
                                    },
                                    "base_job_template": {
                                        "type": "object",
                                        "title": "Base Job Template",
                                        "description": "The work pool's base job template."
                                    },
                                    "is_paused": {
                                        "type": "boolean",
                                        "title": "Is Paused",
                                        "description": "Pausing the work pool stops the delivery of all work.",
                                        "default": false
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer",
                                                "minimum": 0.0
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "A concurrency limit for the work pool."
                                    },
                                    "is_push_pool": {
                                        "type": "boolean",
                                        "title": "Is Push Pool",
                                        "description": "Whether or not the work pool is a push pool. Push pools are not polled by agents/workers to deliver work.",
                                        "default": false
                                    },
                                    "is_mex_pool": {
                                        "type": "boolean",
                                        "title": "Is Mex Pool",
                                        "description": "Whether or not the work pool is a managed pool. Managed pools execute work within Prefect Cloud.",
                                        "default": false
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkPoolStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The current status of the work pool."
                                    },
                                    "default_queue_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Default Queue Id",
                                        "description": "The id of the pool's default queue."
                                    },
                                    "storage_configuration": {
                                        "$ref": "#/components/schemas/WorkPoolStorageConfiguration",
                                        "description": "The storage configuration for the work pool."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "type",
                                    "default_queue_id"
                                ],
                                "title": "WorkPool",
                                "description": "An ORM representation of a work pool"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read a work pool by name\n\nRequired workspace scopes: `see_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "read_work_pool_api_accounts__account_id__workspaces__workspace_id__work_pools__name__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{name}/access",
            "method": "get",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "manage_actors": {
                                        "items": {
                                            "$ref": "#/components/schemas/ObjectActorAccess"
                                        },
                                        "type": "array",
                                        "title": "Manage Actors",
                                        "description": "A list of actors with access to manage the deployment."
                                    },
                                    "run_actors": {
                                        "items": {
                                            "$ref": "#/components/schemas/ObjectActorAccess"
                                        },
                                        "type": "array",
                                        "title": "Run Actors",
                                        "description": "A list of actors with access to run the deployment."
                                    },
                                    "view_actors": {
                                        "items": {
                                            "$ref": "#/components/schemas/ObjectActorAccess"
                                        },
                                        "type": "array",
                                        "title": "View Actors",
                                        "description": "A list of actors with access to view the deployment."
                                    }
                                },
                                "type": "object",
                                "title": "WorkPoolAccessControl",
                                "description": "A representation of the access control for a deployment."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read access controls for a work_pool.\n\nRequired workspace scopes: `see_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "read_work_pool_access_api_accounts__account_id__workspaces__workspace_id__work_pools__name__access_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/queues/{name}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool queue name",
                        "title": "Name"
                    },
                    "description": "The work pool queue name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the work queue."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "An optional description for the work queue.",
                                        "default": ""
                                    },
                                    "is_paused": {
                                        "type": "boolean",
                                        "title": "Is Paused",
                                        "description": "Whether or not the work queue is paused.",
                                        "default": false
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer",
                                                "minimum": 0.0
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "An optional concurrency limit for the work queue."
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "exclusiveMinimum": 0.0,
                                        "title": "Priority",
                                        "description": "The queue's priority. Lower values are higher priority (1 is the highest).",
                                        "default": 1
                                    },
                                    "work_pool_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Id",
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "filter": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/QueueFilter"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "DEPRECATED: Filter criteria for the work queue.",
                                        "deprecated": true
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time an agent polled this queue for work."
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkQueueStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work queue's current status."
                                    },
                                    "work_pool": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkPool"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the work pool the work pool resides within."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "WorkQueueResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read a work pool queue\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "read_work_queue_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__queues__name__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/workers/{worker_id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "worker_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The worker process id",
                        "title": "Worker Id"
                    },
                    "description": "The worker process id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the worker."
                                    },
                                    "work_pool_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Work Pool Id",
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "last_heartbeat_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Heartbeat Time",
                                        "description": "The last time the worker process sent a heartbeat."
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/WorkerStatus",
                                        "description": "Current status of the worker.",
                                        "default": "OFFLINE"
                                    },
                                    "heartbeat_interval_seconds": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Heartbeat Interval Seconds",
                                        "description": "The number of seconds to expect between heartbeats sent by the worker."
                                    },
                                    "client_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Client Version",
                                        "description": "The version of the Prefect client used to create the worker."
                                    },
                                    "metadata_": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Metadata",
                                        "description": "The metadata of the client that is running the worker."
                                    },
                                    "created_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/CreatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the creator of this worker."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "work_pool_id"
                                ],
                                "title": "Worker",
                                "description": "An ORM representation of a worker"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Read a single worker process\n\nRequired workspace scopes: `see_workers`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "read_worker_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__workers__worker_id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_queues/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The work queue id",
                        "title": "Id"
                    },
                    "description": "The work queue id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the work queue."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "An optional description for the work queue.",
                                        "default": ""
                                    },
                                    "is_paused": {
                                        "type": "boolean",
                                        "title": "Is Paused",
                                        "description": "Whether or not the work queue is paused.",
                                        "default": false
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer",
                                                "minimum": 0.0
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "An optional concurrency limit for the work queue."
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "exclusiveMinimum": 0.0,
                                        "title": "Priority",
                                        "description": "The queue's priority. Lower values are higher priority (1 is the highest).",
                                        "default": 1
                                    },
                                    "work_pool_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Id",
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "filter": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/QueueFilter"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "DEPRECATED: Filter criteria for the work queue.",
                                        "deprecated": true
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time an agent polled this queue for work."
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkQueueStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work queue's current status."
                                    },
                                    "work_pool": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkPool"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the work pool the work pool resides within."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "WorkQueueResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a work queue by id.\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Queues"
            ],
            "operationId": "read_work_queue_api_accounts__account_id__workspaces__workspace_id__work_queues__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_queues/name/{name}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work queue name",
                        "title": "Name"
                    },
                    "description": "The work queue name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the work queue."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "An optional description for the work queue.",
                                        "default": ""
                                    },
                                    "is_paused": {
                                        "type": "boolean",
                                        "title": "Is Paused",
                                        "description": "Whether or not the work queue is paused.",
                                        "default": false
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer",
                                                "minimum": 0.0
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "An optional concurrency limit for the work queue."
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "exclusiveMinimum": 0.0,
                                        "title": "Priority",
                                        "description": "The queue's priority. Lower values are higher priority (1 is the highest).",
                                        "default": 1
                                    },
                                    "work_pool_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Id",
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "filter": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/QueueFilter"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "DEPRECATED: Filter criteria for the work queue.",
                                        "deprecated": true
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time an agent polled this queue for work."
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkQueueStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work queue's current status."
                                    },
                                    "work_pool": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkPool"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the work pool the work pool resides within."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "WorkQueueResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a work queue by id.\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Queues"
            ],
            "operationId": "read_work_queue_by_name_api_accounts__account_id__workspaces__workspace_id__work_queues_name__name__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_queues/{id}/status",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The work queue id",
                        "title": "Id"
                    },
                    "description": "The work queue id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "healthy": {
                                        "type": "boolean",
                                        "title": "Healthy",
                                        "description": "Whether or not the work queue is healthy."
                                    },
                                    "late_runs_count": {
                                        "type": "integer",
                                        "title": "Late Runs Count",
                                        "description": "The number of late flow runs in the work queue.",
                                        "default": 0
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time an agent polled this queue for work."
                                    },
                                    "health_check_policy": {
                                        "$ref": "#/components/schemas/WorkQueueHealthPolicy",
                                        "description": "The policy used to determine whether or not the work queue is healthy."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "healthy",
                                    "health_check_policy"
                                ],
                                "title": "WorkQueueStatusDetail"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get the status of a work queue.\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Queues"
            ],
            "operationId": "read_work_queue_status_api_accounts__account_id__workspaces__workspace_id__work_queues__id__status_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_schemas/{id}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block schema id",
                        "title": "Id"
                    },
                    "description": "The block schema id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "checksum": {
                                        "type": "string",
                                        "title": "Checksum",
                                        "description": "The block schema's unique checksum"
                                    },
                                    "fields": {
                                        "type": "object",
                                        "title": "Fields",
                                        "description": "The block schema's field schema"
                                    },
                                    "block_type_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Block Type Id",
                                        "description": "A block type ID"
                                    },
                                    "block_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block type"
                                    },
                                    "capabilities": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Capabilities",
                                        "description": "A list of Block capabilities"
                                    },
                                    "version": {
                                        "type": "string",
                                        "title": "Version",
                                        "description": "Human readable identifier for the block schema",
                                        "default": "non-versioned"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "checksum",
                                    "block_type_id"
                                ],
                                "title": "BlockSchema",
                                "description": "An ORM representation of a block schema."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Get a block schema by id.\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block schemas"
            ],
            "operationId": "read_block_schema_by_id_api_accounts__account_id__workspaces__workspace_id__block_schemas__id__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_schemas/checksum/{checksum}",
            "method": "get",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "checksum",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The block schema checksum",
                        "title": "Checksum"
                    },
                    "description": "The block schema checksum"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "version",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Version of block schema. If not provided the most recently created block schema with the matching checksum will be returned.",
                        "title": "Version"
                    },
                    "description": "Version of block schema. If not provided the most recently created block schema with the matching checksum will be returned."
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "checksum": {
                                        "type": "string",
                                        "title": "Checksum",
                                        "description": "The block schema's unique checksum"
                                    },
                                    "fields": {
                                        "type": "object",
                                        "title": "Fields",
                                        "description": "The block schema's field schema"
                                    },
                                    "block_type_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Block Type Id",
                                        "description": "A block type ID"
                                    },
                                    "block_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block type"
                                    },
                                    "capabilities": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Capabilities",
                                        "description": "A list of Block capabilities"
                                    },
                                    "version": {
                                        "type": "string",
                                        "title": "Version",
                                        "description": "Human readable identifier for the block schema",
                                        "default": "non-versioned"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "checksum",
                                    "block_type_id"
                                ],
                                "title": "BlockSchema",
                                "description": "An ORM representation of a block schema."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block schemas"
            ],
            "operationId": "read_block_schema_by_checksum_api_accounts__account_id__workspaces__workspace_id__block_schemas_checksum__checksum__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_capabilities/",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "title": "Response Read Available Block Capabilities Api Accounts  Account Id  Workspaces  Workspace Id  Block Capabilities  Get"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block capabilities"
            ],
            "operationId": "read_available_block_capabilities_api_accounts__account_id__workspaces__workspace_id__block_capabilities__get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/hello",
            "method": "get",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Say hello!",
            "tags": [
                "Root"
            ],
            "operationId": "hello_api_accounts__account_id__workspaces__workspace_id__hello_get"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/health",
            "method": "get",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [],
            "operationId": "health_check_api_accounts__account_id__workspaces__workspace_id__health_get"
        }
    ],
    "tools": [
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name",
                                    "description": "The account name."
                                },
                                "handle": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Handle",
                                    "description": "A unique identifier for the account containing only lowercase letters, numbers, and dashes."
                                },
                                "location": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Location",
                                    "description": "An optional physical location for the account, e.g. Washington, D.C."
                                },
                                "link": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Link",
                                    "description": "An optional for an external url associated with the account, e.g. https://prefect.io/."
                                },
                                "workos_directory_ids": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Workos Directory Ids",
                                    "description": "WorkOS directory_ids that are connected for Directory Sync / SCIM."
                                },
                                "workos_organization_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Workos Organization Id",
                                    "description": "The organization_id for this account in WorkOS."
                                },
                                "workos_connection_ids": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Workos Connection Ids",
                                    "description": "WorkOS connection_ids that can be used to authenticate against this account."
                                },
                                "auth_expiration_seconds": {
                                    "anyOf": [
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Auth Expiration Seconds",
                                    "description": "The number of seconds a user should be considered to be authenticated against this Account."
                                },
                                "settings": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/AccountSettings-Input"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "The account settings."
                                },
                                "billing_email": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Billing Email",
                                    "description": "Billing email to apply to the account's stripe customer."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "AccountUpdate",
                            "description": "Data used by API to update an account"
                        }
                    }
                }
            },
            "description": "Update an account by id.",
            "tags": [
                "Accounts"
            ],
            "operationId": "update_account_api_accounts__account_id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Accounts"
            ],
            "operationId": "delete_account_api_accounts__account_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/settings",
            "method": "patch",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "allow_public_workspaces": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Allow Public Workspaces",
                                    "description": "Whether or not this account allows public workspaces."
                                },
                                "ai_log_summaries": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Ai Log Summaries",
                                    "description": "Whether to use AI to generate log summaries."
                                },
                                "managed_execution": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Managed Execution",
                                    "description": "Whether to enable the use of managed work pools"
                                },
                                "enforce_ip_allowlist": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Enforce Ip Allowlist",
                                    "description": "Whether to enforce account's IP allowlist."
                                },
                                "enforce_webhook_authentication": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Enforce Webhook Authentication",
                                    "description": "Whether to enforce webhook authentication."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "AccountSettingsUpdate",
                            "description": "Data used by API to update an account settings"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Accounts"
            ],
            "operationId": "update_account_settings_api_accounts__account_id__settings_patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/domains",
            "method": "patch",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "domain_names": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Domain Names"
                                }
                            },
                            "type": "object",
                            "required": [
                                "domain_names"
                            ],
                            "title": "Body_update_account_domains_api_accounts__account_id__domains_patch"
                        }
                    }
                }
            },
            "description": "Update an account's associated domains.",
            "tags": [
                "Accounts"
            ],
            "operationId": "update_account_domains_api_accounts__account_id__domains_patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/teams/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The account id associated with this team."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the team."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "An optional description of the team.",
                                        "default": ""
                                    },
                                    "workos_directory_group_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workos Directory Group Id",
                                        "description": "The WorkOS directory group id."
                                    },
                                    "memberships": {
                                        "items": {
                                            "$ref": "#/components/schemas/TeamMemberResponse"
                                        },
                                        "type": "array",
                                        "title": "Memberships",
                                        "description": "The members of the team."
                                    },
                                    "workspaces": {
                                        "items": {
                                            "$ref": "#/components/schemas/TeamWorkspaceAccess"
                                        },
                                        "type": "array",
                                        "title": "Workspaces",
                                        "description": "The workspaces the team has access to."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "account_id",
                                    "name"
                                ],
                                "title": "TeamResponse",
                                "description": "Data returned by the API when reading a team."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the team."
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "An optional description of the team.",
                                    "default": ""
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "TeamCreate",
                            "description": "Data used by the api to create a new team"
                        }
                    }
                }
            },
            "description": "Create or update a team's metadata.\n\nRequired account permissions: `create:team`",
            "tags": [
                "Teams"
            ],
            "operationId": "create_team_api_accounts__account_id__teams__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/teams/{id}",
            "method": "put",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the team."
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "An optional description of the team.",
                                    "default": ""
                                },
                                "workos_directory_group_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Workos Directory Group Id",
                                    "description": "The id of the WorkOS directory group that this team should be associated with."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "TeamUpdate",
                            "description": "Data used by the api to update a team"
                        }
                    }
                }
            },
            "description": "\n\nRequired account permissions: `update:team`",
            "tags": [
                "Teams"
            ],
            "operationId": "update_team_api_accounts__account_id__teams__id__put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/teams/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a team by id.\n\nRequired account permissions: `delete:team`",
            "tags": [
                "Teams"
            ],
            "operationId": "delete_team_api_accounts__account_id__teams__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/teams/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                },
                                "title": "Response Read Teams Api Accounts  Account Id  Teams Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "teams": {
                                    "$ref": "#/components/schemas/TeamFilter"
                                },
                                "users": {
                                    "$ref": "#/components/schemas/UserFilter"
                                },
                                "bots": {
                                    "$ref": "#/components/schemas/BotFilter"
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                }
                            },
                            "type": "object",
                            "title": "Body_read_teams_api_accounts__account_id__teams_filter_post"
                        }
                    }
                }
            },
            "description": "Query for teams.\n\nRequired account permissions: `read:team`",
            "tags": [
                "Teams"
            ],
            "operationId": "read_teams_api_accounts__account_id__teams_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/teams/{id}/members",
            "method": "put",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "members": {
                                    "items": {
                                        "$ref": "#/components/schemas/TeamMembershipCreate"
                                    },
                                    "type": "array",
                                    "title": "Members"
                                }
                            },
                            "type": "object",
                            "required": [
                                "members"
                            ],
                            "title": "Body_upsert_team_members_api_accounts__account_id__teams__id__members_put"
                        }
                    }
                }
            },
            "description": "Upsert team memberships.\n\nRequired account permissions: `update:team`",
            "tags": [
                "Teams"
            ],
            "operationId": "upsert_team_members_api_accounts__account_id__teams__id__members_put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/teams/{team_id}/members/{actor_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "team_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Team Id"
                    }
                },
                {
                    "name": "actor_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Actor Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Remove a member from a team.\n\nRequired account permissions: `update:team`",
            "tags": [
                "Teams"
            ],
            "operationId": "remove_team_member_api_accounts__account_id__teams__team_id__members__actor_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_memberships/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AccountMembershipsResponse"
                                },
                                "title": "Response Read Account Memberships Api Accounts  Account Id  Account Memberships Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "account_memberships": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/AccountMembershipFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_account_memberships_api_accounts__account_id__account_memberships_filter_post"
                        }
                    }
                }
            },
            "description": "Query for account roles.\n\nRequired account permissions: `read:account_membership`",
            "tags": [
                "Account Memberships"
            ],
            "operationId": "read_account_memberships_api_accounts__account_id__account_memberships_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_memberships/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Account Memberships Api Accounts  Account Id  Account Memberships Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/AccountMembershipFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "only_users": {
                                    "type": "boolean",
                                    "title": "Only Users",
                                    "default": false
                                },
                                "only_bots": {
                                    "type": "boolean",
                                    "title": "Only Bots",
                                    "default": false
                                }
                            },
                            "type": "object",
                            "title": "Body_count_account_memberships_api_accounts__account_id__account_memberships_count_post"
                        }
                    }
                }
            },
            "description": "Query for account memberships count\n\nRequired account permissions: `read:account_membership`",
            "tags": [
                "Account Memberships"
            ],
            "operationId": "count_account_memberships_api_accounts__account_id__account_memberships_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_memberships/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "account_role_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Account Role Id",
                                    "description": "The account role id. The account role defines permissions for the actor in this account."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "account_role_id"
                            ],
                            "title": "AccountMembershipUpdate",
                            "description": "Data used by the api to update an account membership"
                        }
                    }
                }
            },
            "description": "Update an account membership by id.\n\nRequired account permissions: `update:account_membership`",
            "tags": [
                "Account Memberships"
            ],
            "operationId": "update_account_membership_api_accounts__account_id__account_memberships__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_memberships/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete an account membership by id.\nThis will also delete any workspace accesses that the membership's actor\nhas under the account.\n\nRequired account permissions: `delete:account_membership`",
            "tags": [
                "Account Memberships"
            ],
            "operationId": "delete_account_membership_api_accounts__account_id__account_memberships__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_roles/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name",
                                    "description": "The name of the account role."
                                },
                                "permissions": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "$ref": "#/components/schemas/AccountPermission"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Permissions",
                                    "description": "The list of account permissions held by this role. Defines the actions account members assigned this role are allowed to take."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "AccountRoleUpdate",
                            "description": "Data used by API to update an account role"
                        }
                    }
                }
            },
            "description": "Update an account role by id.\n\nRequired account permissions: `update:account_role`",
            "tags": [
                "Account Roles"
            ],
            "operationId": "update_account_role_api_accounts__account_id__account_roles__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_roles/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete an account role by id.\n\nRequired account permissions: `delete:account_role`",
            "tags": [
                "Account Roles"
            ],
            "operationId": "delete_account_role_api_accounts__account_id__account_roles__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/account_roles/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AccountRole"
                                },
                                "title": "Response Read Account Roles Api Accounts  Account Id  Account Roles Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "account_roles": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/AccountRoleFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_account_roles_api_accounts__account_id__account_roles_filter_post"
                        }
                    }
                }
            },
            "description": "Query for account roles.\n\nRequired account permissions: `read:account_role`",
            "tags": [
                "Account Roles"
            ],
            "operationId": "read_account_roles_api_accounts__account_id__account_roles_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/sso/validate",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "redirect_uri": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Redirect Uri"
                                }
                            },
                            "type": "object",
                            "title": "Body_validate_api_accounts__account_id__sso_validate_post"
                        }
                    }
                }
            },
            "description": "Validate that the current actor has recently authenticated with the\nAccount's authenticator.\n\nRequired account permissions: `read:account`",
            "tags": [
                "Account SSO"
            ],
            "operationId": "validate_api_accounts__account_id__sso_validate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/sso/integrations/{integration_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "integration_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Integration Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Return details about an Account's SSO / SCIM integrations.\n\nRequired account permissions: `administrate:sso`",
            "tags": [
                "Account SSO"
            ],
            "operationId": "remove_integration_api_accounts__account_id__sso_integrations__integration_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/bots/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "actor_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Actor Id",
                                        "description": "The actor id associated with this bot."
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The bot's account id. Bots can only belong to one account."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the bot."
                                    },
                                    "account_role_name": {
                                        "type": "string",
                                        "title": "Account Role Name",
                                        "description": "The name of the role of the bot's account membership."
                                    },
                                    "api_key": {
                                        "$ref": "#/components/schemas/APIKeyCreateResponse",
                                        "description": "API Key associated with the bot."
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "actor_id",
                                    "account_id",
                                    "name",
                                    "account_role_name",
                                    "api_key"
                                ],
                                "title": "BotCreateResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the bot."
                                },
                                "api_key_expiration": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Api Key Expiration",
                                    "description": "The time at which bot's api key expires. If `None`, the api key will not expire."
                                },
                                "account_role_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Account Role Id",
                                    "description": "The account role id to assign the bot. If `None` the bot will be assignedthe MEMBER role by `models.bots.create_bot`"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "BotCreate",
                            "description": "Data used by the api to create a bot"
                        }
                    }
                }
            },
            "description": "Create a Bot\n\nRequired account permissions: `create:bot`",
            "tags": [
                "Bots"
            ],
            "operationId": "create_bot_api_accounts__account_id__bots__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/bots/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name",
                                    "description": "The name of the bot."
                                },
                                "account_role_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Account Role Id",
                                    "description": "The account role id to assign the bot."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "BotUpdate",
                            "description": "Data used by the api to update a bot"
                        }
                    }
                }
            },
            "description": "Update a bot by id.\n\nRequired account permissions: `update:bot`",
            "tags": [
                "Bots"
            ],
            "operationId": "update_bot_api_accounts__account_id__bots__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/bots/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Update a bot by id.\n\nRequired account permissions: `delete:bot`",
            "tags": [
                "Bots"
            ],
            "operationId": "delete_bot_api_accounts__account_id__bots__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/bots/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BotReadResponse"
                                },
                                "title": "Response Read Bots Api Accounts  Account Id  Bots Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "service_accounts": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BotFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_bots_api_accounts__account_id__bots_filter_post"
                        }
                    }
                }
            },
            "description": "Query for bots.\n\nRequired account permissions: `read:bot`",
            "tags": [
                "Bots"
            ],
            "operationId": "read_bots_api_accounts__account_id__bots_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/bots/{id}/rotate_api_key",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "actor_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Actor Id",
                                        "description": "The actor id associated with this bot."
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The bot's account id. Bots can only belong to one account."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the bot."
                                    },
                                    "account_role_name": {
                                        "type": "string",
                                        "title": "Account Role Name",
                                        "description": "The name of the role of the bot's account membership."
                                    },
                                    "api_key": {
                                        "$ref": "#/components/schemas/APIKeyCreateResponse",
                                        "description": "API Key associated with the bot."
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "actor_id",
                                    "account_id",
                                    "name",
                                    "account_role_name",
                                    "api_key"
                                ],
                                "title": "BotCreateResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/BotRotateAPIKey"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Bot Rotate Key"
                        }
                    }
                }
            },
            "description": "Rotate the api key for a Bot.\n\nRequired account permissions: `update:bot`",
            "tags": [
                "Bots"
            ],
            "operationId": "rotate_api_key_api_accounts__account_id__bots__id__rotate_api_key_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/bots/{id}/delete_bot_api_key/{api_key_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "api_key_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Api Key Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a bot's api key by id.\n\nRequired account permissions: `update:bot`",
            "tags": [
                "Bots"
            ],
            "operationId": "delete_bot_api_key_api_accounts__account_id__bots__id__delete_bot_api_key__api_key_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/invitations/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Success",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InvitationReadResponse"
                                },
                                "title": "Response Create Invitation Api Accounts  Account Id  Invitations  Post"
                            },
                            "examples": {
                                "created": {
                                    "summary": "Invite created",
                                    "value": {
                                        "id": "5a687053-1b66-448a-b1b6-4a4142d484d6",
                                        "email": "user@test.io",
                                        "account_id": "92db6603-1ecf-4724-a0bf-072c60336eba",
                                        "account_role_id": "399a4e1b-9f52-454b-b3f1-fa72cf5ef1a4",
                                        "status": "PENDING",
                                        "expiration": "2025-05-06T21:02:01.981671Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/InvitationCreate"
                            },
                            "title": "Invitations"
                        }
                    }
                }
            },
            "description": "Invite user(s) to an account.\nAny PENDING invitations for the same user to the account will be revoked.\n\nRequired account permissions: `create:invitation`",
            "tags": [
                "Invitations"
            ],
            "operationId": "create_invitation_api_accounts__account_id__invitations__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/invitations/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InvitationReadResponse"
                                },
                                "title": "Response Read Invitations Api Accounts  Account Id  Invitations Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "invitations": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/InvitationFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                }
                            },
                            "type": "object",
                            "title": "Body_read_invitations_api_accounts__account_id__invitations_filter_post"
                        }
                    }
                }
            },
            "description": "Query for invitations\n\nRequired account permissions: `read:invitation`",
            "tags": [
                "Invitations"
            ],
            "operationId": "read_invitations_api_accounts__account_id__invitations_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/invitations/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Invitations Api Accounts  Account Id  Invitations Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "invitations": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/InvitationFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_invitations_api_accounts__account_id__invitations_count_post"
                        }
                    }
                }
            },
            "description": "Query for invitations count\n\nRequired account permissions: `read:invitation`",
            "tags": [
                "Invitations"
            ],
            "operationId": "count_invitations_api_accounts__account_id__invitations_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/invitations/{id}/revoke",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete an invitation by id\n\nRequired account permissions: `update:invitation`",
            "tags": [
                "Invitations"
            ],
            "operationId": "revoke_invitation_api_accounts__account_id__invitations__id__revoke_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The account id"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The workspace name"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A description of the workspace",
                                        "default": ""
                                    },
                                    "handle": {
                                        "type": "string",
                                        "title": "Handle",
                                        "description": "A unique handle for the workspace"
                                    },
                                    "default_workspace_role_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Default Workspace Role Id",
                                        "description": "The default workspace role id."
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "title": "Is Public",
                                        "description": "Whether the workspace is public.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "account_id",
                                    "name",
                                    "handle"
                                ],
                                "title": "Workspace",
                                "description": "An ORM representation of a Workspace"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The workspace name"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "A description of the workspace",
                                    "default": ""
                                },
                                "handle": {
                                    "type": "string",
                                    "title": "Handle",
                                    "description": "A unique handle for the workspace"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "handle"
                            ],
                            "title": "WorkspaceCreate",
                            "description": "Data used by the api to create a workspace"
                        }
                    }
                }
            },
            "description": "Create a Workspace\n\nRequired account permissions: `create:workspace`",
            "tags": [
                "Workspaces"
            ],
            "operationId": "create_workspace_api_accounts__account_id__workspaces__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Workspace"
                                },
                                "title": "Response Read Workspaces Api Accounts  Account Id  Workspaces Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "workspaces": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkspaceFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_workspaces_api_accounts__account_id__workspaces_filter_post"
                        }
                    }
                }
            },
            "description": "Query for workspaces.\n\nRequired account permissions: `read:workspace`",
            "tags": [
                "Workspaces"
            ],
            "operationId": "read_workspaces_api_accounts__account_id__workspaces_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/transfer",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "to_account_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "To Account Id"
                                },
                                "new_handle": {
                                    "type": "string",
                                    "title": "New Handle"
                                }
                            },
                            "type": "object",
                            "required": [
                                "to_account_id"
                            ],
                            "title": "Body_transfer_workspace_api_accounts__account_id__workspaces__workspace_id__transfer_post"
                        }
                    }
                }
            },
            "description": "Transfer a workspace to a new account\n\nRequired account permissions: `delete:workspace`",
            "tags": [
                "Workspaces"
            ],
            "operationId": "transfer_workspace_api_accounts__account_id__workspaces__workspace_id__transfer_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/validate_transfer",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "title": "Response Validate Transfer Workspace Api Accounts  Account Id  Workspaces  Workspace Id  Validate Transfer Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "to_account_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "To Account Id"
                                },
                                "new_handle": {
                                    "type": "string",
                                    "title": "New Handle"
                                }
                            },
                            "type": "object",
                            "required": [
                                "to_account_id"
                            ],
                            "title": "Body_validate_transfer_workspace_api_accounts__account_id__workspaces__workspace_id__validate_transfer_post"
                        }
                    }
                }
            },
            "description": "Validate transfer of a workspace to a new account, returning any validation errors\n\nRequired account permissions: `delete:workspace`",
            "tags": [
                "Workspaces"
            ],
            "operationId": "validate_transfer_workspace_api_accounts__account_id__workspaces__workspace_id__validate_transfer_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspace_roles/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Account Id",
                                        "description": "The account id"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The workspace role name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 140,
                                        "title": "Description",
                                        "description": "A short description of the role.",
                                        "default": ""
                                    },
                                    "permissions": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Permissions",
                                        "description": "The workspace role's permissions",
                                        "deprecated": true
                                    },
                                    "scopes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Scopes",
                                        "description": "The workspace role's scopes."
                                    },
                                    "inherited_role_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Inherited Role Id",
                                        "description": "An optional built-in workspace role id from which this workspace role inherits."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "account_id",
                                    "name"
                                ],
                                "title": "WorkspaceRole",
                                "description": "An ORM representation of a WorkspaceRole"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The workspace role name"
                                },
                                "description": {
                                    "type": "string",
                                    "maxLength": 140,
                                    "title": "Description",
                                    "description": "A short description of the role.",
                                    "default": ""
                                },
                                "scopes": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Scopes",
                                    "description": "The workspace role's scopes."
                                },
                                "inherited_role_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Inherited Role Id",
                                    "description": "An optional built-in workspace role id from which this workspace role inherits."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "WorkspaceRoleCreate",
                            "description": "Data used by the api to create a workspace role"
                        }
                    }
                }
            },
            "description": "Create a custom workspace role.\n\nRequired account permissions: `create:workspace_role`",
            "tags": [
                "Workspace Roles"
            ],
            "operationId": "create_workspace_role_api_accounts__account_id__workspace_roles__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspace_roles/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name",
                                    "description": "The workspace role name."
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 140
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "A short description of the role."
                                },
                                "scopes": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Scopes",
                                    "description": "The workspace role's scopes."
                                },
                                "inherited_role_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Inherited Role Id",
                                    "description": "An optional built-in workspace role id from which this workspace role inherits."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "WorkspaceRoleUpdate",
                            "description": "Data used by the api to update a workspace role"
                        }
                    }
                }
            },
            "description": "Update a custom workspace role.\n\nRequired account permissions: `update:workspace_role`",
            "tags": [
                "Workspace Roles"
            ],
            "operationId": "update_workspace_role_api_accounts__account_id__workspace_roles__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspace_roles/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a custom workspace role.\n\nRequired account permissions: `delete:workspace_role`",
            "tags": [
                "Workspace Roles"
            ],
            "operationId": "delete_workspace_role_api_accounts__account_id__workspace_roles__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspace_roles/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkspaceRole"
                                },
                                "title": "Response Read Workspace Roles Api Accounts  Account Id  Workspace Roles Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "workspace_roles": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkspaceRoleFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_workspace_roles_api_accounts__account_id__workspace_roles_filter_post"
                        }
                    }
                }
            },
            "description": "Query for workspace roles.\n\nRequired account permissions: `read:workspace_role`",
            "tags": [
                "Workspace Roles"
            ],
            "operationId": "read_workspace_roles_api_accounts__account_id__workspace_roles_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/invitations/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Success",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "title": "Email",
                                        "description": "The email of the user to invite"
                                    },
                                    "account_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Id",
                                        "description": "The account id"
                                    },
                                    "account_role_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account Role Id",
                                        "description": "The role id to assign the user"
                                    },
                                    "workspace_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Id",
                                        "description": "The workspace id"
                                    },
                                    "workspace_role_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Role Id",
                                        "description": "The workspace role id to assign the user"
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/InvitationStatus",
                                        "description": "The invitation status"
                                    },
                                    "expiration": {
                                        "type": "string",
                                        "format": "date-time",
                                        "title": "Expiration",
                                        "description": "The expiration time of the invite"
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "email",
                                    "account_id",
                                    "account_role_id",
                                    "workspace_id",
                                    "workspace_role_id",
                                    "status",
                                    "expiration"
                                ],
                                "title": "WorkspaceInvitationReadResponse",
                                "description": "Data returned by the api when reading a workspace invitation"
                            },
                            "examples": {
                                "created": {
                                    "summary": "Invite created",
                                    "value": {
                                        "id": "884d97ad-c376-452a-a308-df86024a6311",
                                        "email": "user@test.io",
                                        "account_id": "9ae0b1f6-6094-4dbf-bbe9-e810fa3abb58",
                                        "account_role_id": "7f5eaed5-08af-4428-90b7-c75b9f46acb3",
                                        "status": "PENDING",
                                        "expiration": "2025-05-06T21:02:08.052590Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email",
                                    "description": "The email of the user to invite"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "email"
                            ],
                            "title": "WorkspaceInvitationCreate",
                            "description": "Data used by the api to create an invitation"
                        }
                    }
                }
            },
            "description": "Invite a user to a workspace.\nAny PENDING invitations for the same user to the workspace will be revoked.\n\nRequired account permissions: `create:workspace_invitation`",
            "tags": [
                "Workspace Invitations"
            ],
            "operationId": "create_workspace_invitation_api_accounts__account_id__workspaces__workspace_id__invitations__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/invitations/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkspaceInvitationReadResponse"
                                },
                                "title": "Response Read Workspace Invitations Api Accounts  Account Id  Workspaces  Workspace Id  Invitations Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "workspace_invitations": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/InvitationFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                }
                            },
                            "type": "object",
                            "title": "Body_read_workspace_invitations_api_accounts__account_id__workspaces__workspace_id__invitations_filter_post"
                        }
                    }
                }
            },
            "description": "Query for invitations\n\nRequired account permissions: `read:workspace_invitation`",
            "tags": [
                "Workspace Invitations"
            ],
            "operationId": "read_workspace_invitations_api_accounts__account_id__workspaces__workspace_id__invitations_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/invitations/{id}/revoke",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete an invitation by id\n\nRequired account permissions: `update:workspace_invitation`",
            "tags": [
                "Workspace Invitations"
            ],
            "operationId": "revoke_workspace_invitation_api_accounts__account_id__workspaces__workspace_id__invitations__id__revoke_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/user_access/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/WorkspaceUserAccessResponse"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/WorkspaceUserAccessResponse"
                                        }
                                    }
                                ],
                                "title": "Response Upsert Workspace User Access Api Accounts  Account Id  Workspaces  Workspace Id  User Access  Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/WorkspaceUserAccessCreate"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceUserAccessCreate"
                                    }
                                }
                            ],
                            "title": "Workspace User Accesses"
                        }
                    }
                }
            },
            "description": "Upsert a workspace user access\n\nRequired workspace scopes: `manage_workspace_users`",
            "tags": [
                "Workspace User Access"
            ],
            "operationId": "upsert_workspace_user_access_api_accounts__account_id__workspaces__workspace_id__user_access__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/user_access/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkspaceUserAccessResponse"
                                },
                                "title": "Response Read Workspace User Accesses Api Accounts  Account Id  Workspaces  Workspace Id  User Access Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "workspace_accesses": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkspaceActorAccessFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "users": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/UserFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_workspace_user_accesses_api_accounts__account_id__workspaces__workspace_id__user_access_filter_post"
                        }
                    }
                }
            },
            "description": "Query for workspace user accesses\n\nRequired workspace scopes: `see_workspace_users`",
            "tags": [
                "Workspace User Access"
            ],
            "operationId": "read_workspace_user_accesses_api_accounts__account_id__workspaces__workspace_id__user_access_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/user_access/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a workspace user access by id.\n\nThis route will also conditionally delete the user's account membership if:\n- account membership of the actor has `Collaborator` role\n- the actor has no more workspace accesses under the account\n\nRequired workspace scopes: `manage_workspace_users`",
            "tags": [
                "Workspace User Access"
            ],
            "operationId": "delete_workspace_user_access_api_accounts__account_id__workspaces__workspace_id__user_access__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/bot_access/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/WorkspaceBotAccessResponse"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/WorkspaceBotAccessResponse"
                                        }
                                    }
                                ],
                                "title": "Response Upsert Workspace Bot Access Api Accounts  Account Id  Workspaces  Workspace Id  Bot Access  Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/WorkspaceBotAccessCreate"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceBotAccessCreate"
                                    }
                                }
                            ],
                            "title": "Workspace Bot Accesses"
                        }
                    }
                }
            },
            "description": "Grant one or more bots access to a workspace\n\nRequired workspace scopes: `manage_workspace_service_accounts`",
            "tags": [
                "Workspace Bot Access"
            ],
            "operationId": "upsert_workspace_bot_access_api_accounts__account_id__workspaces__workspace_id__bot_access__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/bot_access/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkspaceBotAccessResponse"
                                },
                                "title": "Response Read Workspace Bot Accesses Api Accounts  Account Id  Workspaces  Workspace Id  Bot Access Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "workspace_accesses": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkspaceActorAccessFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "bots": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BotFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_workspace_bot_accesses_api_accounts__account_id__workspaces__workspace_id__bot_access_filter_post"
                        }
                    }
                }
            },
            "description": "Query for workspace bot accesses\n\nRequired workspace scopes: `see_workspace_service_accounts`",
            "tags": [
                "Workspace Bot Access"
            ],
            "operationId": "read_workspace_bot_accesses_api_accounts__account_id__workspaces__workspace_id__bot_access_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/bot_access/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a workspace bot access by id.\n\nRequired workspace scopes: `manage_workspace_service_accounts`",
            "tags": [
                "Workspace Bot Access"
            ],
            "operationId": "delete_workspace_bot_access_api_accounts__account_id__workspaces__workspace_id__bot_access__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/team_access/",
            "method": "put",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkspaceTeamAccess"
                                },
                                "title": "Response Upsert Workspace Team Access Api Accounts  Account Id  Workspaces  Workspace Id  Team Access  Put"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/WorkspaceTeamAccessCreate"
                            },
                            "title": "Workspace Team Accesses"
                        }
                    }
                }
            },
            "description": "Grant one or more teams access to a workspace\n\nRequired workspace scopes: `manage_workspace_teams`",
            "tags": [
                "Workspace Team Access"
            ],
            "operationId": "upsert_workspace_team_access_api_accounts__account_id__workspaces__workspace_id__team_access__put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/team_access/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkspaceTeamAccessResponse"
                                },
                                "title": "Response Read Workspace Team Accesses Api Accounts  Account Id  Workspaces  Workspace Id  Team Access Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                }
                            },
                            "type": "object",
                            "title": "Body_read_workspace_team_accesses_api_accounts__account_id__workspaces__workspace_id__team_access_filter_post"
                        }
                    }
                }
            },
            "description": "List teams with access to a workspaces\n\nRequired workspace scopes: `manage_workspace_teams`",
            "tags": [
                "Workspace Team Access"
            ],
            "operationId": "read_workspace_team_accesses_api_accounts__account_id__workspaces__workspace_id__team_access_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/team_access/{team_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "team_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Team Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Remove a team's access to a workspace\n\nRequired workspace scopes: `manage_workspace_teams`",
            "tags": [
                "Workspace Team Access"
            ],
            "operationId": "remove_workspace_team_access_api_accounts__account_id__workspaces__workspace_id__team_access__team_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/me/sessions/filter",
            "method": "post",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/UserSessionResponse"
                                },
                                "type": "array",
                                "title": "Response Filter My Sessions Api Me Sessions Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/UserSessionFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                }
                            },
                            "type": "object",
                            "title": "Body_filter_my_sessions_api_me_sessions_filter_post"
                        }
                    }
                }
            },
            "description": "Filter the current actor's user sessions",
            "tags": [
                "Me"
            ],
            "operationId": "filter_my_sessions_api_me_sessions_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/me/sessions/{session_id}/terminate",
            "method": "post",
            "parameters": [
                {
                    "name": "session_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Session Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Terminate the current actor's user session",
            "tags": [
                "Me"
            ],
            "operationId": "terminate_my_session_api_me_sessions__session_id__terminate_post"
        },
        {
            "server_url": "",
            "path": "/api/me/api_keys/filter",
            "method": "post",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "api_keys": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/APIKeyFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "default": 200
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                }
                            },
                            "type": "object",
                            "title": "Body_filter_my_api_keys_api_me_api_keys_filter_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Me"
            ],
            "operationId": "filter_my_api_keys_api_me_api_keys_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/me/notifications",
            "method": "post",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notification_settings": {
                                        "$ref": "#/components/schemas/UserLevelNotificationSettings",
                                        "description": "The notification settings for the user."
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "User Id",
                                        "description": "The user id."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "notification_settings",
                                    "user_id"
                                ],
                                "title": "UserNotificationsResponse",
                                "description": "Data returned by the API when reading a workspace notification"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "by_service": {
                                    "additionalProperties": {
                                        "additionalProperties": {
                                            "type": "boolean"
                                        },
                                        "propertyNames": {
                                            "$ref": "#/components/schemas/NotificationTypes"
                                        },
                                        "type": "object"
                                    },
                                    "propertyNames": {
                                        "$ref": "#/components/schemas/NotificationService"
                                    },
                                    "type": "object",
                                    "title": "By Service",
                                    "description": "A dictionary of notification services to a dictionary of notification types to a boolean indicating whether the user has enabled them."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "UserLevelNotificationSettingsUpdate"
                        }
                    }
                },
                "required": true
            },
            "description": "",
            "tags": [
                "Me"
            ],
            "operationId": "add_workspace_notification_api_me_notifications_post"
        },
        {
            "server_url": "",
            "path": "/api/me/accounts/{account_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Removes the user from an account. Will also remove any access the user\nhas to any workspaces under that account.",
            "tags": [
                "Me"
            ],
            "operationId": "leave_account_api_me_accounts__account_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/me/workspaces/{workspace_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Removes the user from a workspace.\n\nThis route will also conditionally delete the user's account membership if:\n    - account membership of the actor has `Collaborator` role\n    - the actor has no more workspace accesses under the account",
            "tags": [
                "Me"
            ],
            "operationId": "leave_workspace_api_me_workspaces__workspace_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/users/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "handle": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Handle",
                                    "description": "A unique handle for the user, containing only lowercase letters, numbers, and dashes."
                                },
                                "first_name": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "First Name",
                                    "description": "The first name of a user."
                                },
                                "last_name": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 500
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Last Name",
                                    "description": "The last name of a user."
                                },
                                "email": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Email",
                                    "description": "User email."
                                },
                                "location": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Location",
                                    "description": "An optional physical location for a user, e.g. Washington, D.C."
                                },
                                "title": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Title",
                                    "description": "An optional title for the user."
                                },
                                "image_location": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Image Location",
                                    "description": "A url linking to an image for the user."
                                },
                                "settings": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/UserSettings-Input"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "The user's default color settings",
                                    "default": {
                                        "tutorial_completed": false,
                                        "feature_previews": [],
                                        "notification_settings": {
                                            "by_service": {}
                                        }
                                    }
                                },
                                "last_login": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Last Login",
                                    "description": "The last time the user logged in."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "UserUpdate",
                            "description": "Data used by API to update a user"
                        }
                    }
                }
            },
            "description": "Update a user by id.",
            "tags": [
                "Users"
            ],
            "operationId": "update_user_api_users__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/users/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a user by id.",
            "tags": [
                "Users"
            ],
            "operationId": "delete_user_api_users__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/users/{id}/api_keys",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the api key."
                                    },
                                    "expiration": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Expiration",
                                        "description": "The time at which the api key expires. If `None`, the api key will not expire."
                                    },
                                    "key": {
                                        "type": "string",
                                        "title": "Key",
                                        "description": "The Prefect API Key."
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                    "name",
                                    "key"
                                ],
                                "title": "APIKeyCreateResponse",
                                "description": "Data returned by the api after creating a new api_key. This includes an un-hashed api key."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the api key."
                                },
                                "expiration": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Expiration",
                                    "description": "The time at which the api key expires. If `None`, the api key will not expire."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "APIKeyCreate",
                            "description": "Data used by the api to create a new api_key"
                        }
                    }
                }
            },
            "description": "Create an APIKey for a user",
            "tags": [
                "Users"
            ],
            "operationId": "create_user_api_key_api_users__id__api_keys_post"
        },
        {
            "server_url": "",
            "path": "/api/users/{id}/api_keys/{api_key_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "api_key_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Api Key Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete an APIKey for a user",
            "tags": [
                "Users"
            ],
            "operationId": "delete_user_api_key_api_users__id__api_keys__api_key_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/billing/{account_id}/cancel_org_subscription",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired account permissions: `update:billing`",
            "tags": [
                "Account Billing"
            ],
            "operationId": "cancel_org_subscription_at_period_end_api_billing__account_id__cancel_org_subscription_post"
        },
        {
            "server_url": "",
            "path": "/api/billing/{account_id}/update_slots",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "additional_workspace_slots": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Additional Workspace Slots",
                                    "description": "The number of additional workspace slots to update to."
                                },
                                "additional_user_slots": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Additional User Slots",
                                    "description": "The number of additional user slots to update to."
                                }
                            },
                            "type": "object",
                            "title": "Body_update_slots_api_billing__account_id__update_slots_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired account permissions: `update:billing`",
            "tags": [
                "Account Billing"
            ],
            "operationId": "update_slots_api_billing__account_id__update_slots_post"
        },
        {
            "server_url": "",
            "path": "/api/billing/{account_id}/create_billing_portal_session",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "return_url": {
                                    "type": "string",
                                    "title": "Return Url",
                                    "description": "The url to return to after leaving the billing portal."
                                }
                            },
                            "type": "object",
                            "required": [
                                "return_url"
                            ],
                            "title": "Body_create_billing_portal_session_api_billing__account_id__create_billing_portal_session_post"
                        }
                    }
                }
            },
            "description": "Creates a billing portal session for an account.\n\nRequired account permissions: `update:billing`",
            "tags": [
                "Account Billing"
            ],
            "operationId": "create_billing_portal_session_api_billing__account_id__create_billing_portal_session_post"
        },
        {
            "server_url": "",
            "path": "/api/billing/{account_id}/validate_subscription_status",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean",
                                "title": "Response Validate Subscription Status Api Billing  Account Id  Validate Subscription Status Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "stripe_session_id": {
                                    "type": "string",
                                    "title": "Stripe Session Id",
                                    "description": "The id of the stripe session to validate."
                                }
                            },
                            "type": "object",
                            "required": [
                                "stripe_session_id"
                            ],
                            "title": "Body_validate_subscription_status_api_billing__account_id__validate_subscription_status_post"
                        }
                    }
                }
            },
            "description": "Validate an account's subscription has been updated to reflect the latest stripe\nsession.\n\nRequired account permissions: `update:billing`",
            "tags": [
                "Account Billing"
            ],
            "operationId": "validate_subscription_status_api_billing__account_id__validate_subscription_status_post"
        },
        {
            "server_url": "",
            "path": "/api/billing/{account_id}/subscribe",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "title": "Response Get Checkout Link Api Billing  Account Id  Subscribe Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "tier": {
                                    "$ref": "#/components/schemas/AccountPlanTier",
                                    "description": "The pricing tier to create a checkout session for."
                                }
                            },
                            "type": "object",
                            "required": [
                                "tier"
                            ],
                            "title": "Body_get_checkout_link_api_billing__account_id__subscribe_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired account permissions: `update:billing`",
            "tags": [
                "Account Billing"
            ],
            "operationId": "get_checkout_link_api_billing__account_id__subscribe_post"
        },
        {
            "server_url": "",
            "path": "/api/billing/{account_id}/manage_subscription",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "return_url": {
                                    "type": "string",
                                    "title": "Return Url",
                                    "description": "The URL to return to after managing the subscription."
                                }
                            },
                            "type": "object",
                            "required": [
                                "return_url"
                            ],
                            "title": "Body_manage_subscription_api_billing__account_id__manage_subscription_post"
                        }
                    }
                }
            },
            "description": "Creates a Stripe customer portal session for managing an existing subscription.\n\nThis endpoint allows users to update, cancel, or otherwise manage their subscription\nthrough Stripe's customer portal with specific configuration options.\n\nRequired account permissions: `update:billing`",
            "tags": [
                "Account Billing"
            ],
            "operationId": "manage_subscription_api_billing__account_id__manage_subscription_post"
        },
        {
            "server_url": "",
            "path": "/api/invitations/{id}/accept",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "invite_code",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Invite Code"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Accept an invitation",
            "tags": [
                "Invitations"
            ],
            "operationId": "accept_invitation_api_invitations__id__accept_post"
        },
        {
            "server_url": "",
            "path": "/api/invitations/{id}/reject",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "invite_code",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Invite Code"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Reject an invitation",
            "tags": [
                "Invitations"
            ],
            "operationId": "reject_invitation_api_invitations__id__reject_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/lenses/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Lenses"
            ],
            "operationId": "delete_lens_api_accounts__account_id__workspaces__workspace_id__lenses__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/lenses/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the lens"
                                },
                                "lens_filter": {
                                    "type": "string",
                                    "contentMediaType": "application/json",
                                    "contentSchema": {},
                                    "title": "Lens Filter",
                                    "description": "The lens filter"
                                }
                            },
                            "type": "object",
                            "required": [
                                "name",
                                "lens_filter"
                            ],
                            "title": "LensUpdate"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Lenses"
            ],
            "operationId": "update_lens_api_accounts__account_id__workspaces__workspace_id__lenses__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/lenses/",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the lens"
                                },
                                "lens_filter": {
                                    "type": "string",
                                    "contentMediaType": "application/json",
                                    "contentSchema": {},
                                    "title": "Lens Filter",
                                    "description": "The lens filter"
                                }
                            },
                            "type": "object",
                            "required": [
                                "name",
                                "lens_filter"
                            ],
                            "title": "LensCreate",
                            "description": "Data used by the api to create a lens"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Lenses"
            ],
            "operationId": "create_lens_api_accounts__account_id__workspaces__workspace_id__lenses__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/notifications/workspace/slack/{notification_type}",
            "method": "post",
            "parameters": [
                {
                    "name": "notification_type",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "failed",
                            "completed",
                            "sla-violation"
                        ],
                        "title": "WorkspaceNotificationType"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id",
                                        "description": "The unique identifier for this subscription."
                                    },
                                    "workspace_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Workspace Id",
                                        "description": "The id of the workspace that the subscription is for."
                                    },
                                    "notification_method": {
                                        "$ref": "#/components/schemas/NotificationMethod",
                                        "description": "The method of notification to use."
                                    },
                                    "notification_config": {
                                        "type": "object",
                                        "title": "Notification Config",
                                        "description": "Configuration options for the notification method.",
                                        "default": {}
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "id",
                                    "workspace_id",
                                    "notification_method"
                                ],
                                "title": "WorkspaceNotification",
                                "description": "A representation of a workspace notification"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Enabled",
                                    "description": "Whether the notification is enabled"
                                },
                                "channel": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Channel",
                                    "description": "The channel to send the notification to"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "SlackWorkspaceNotificationUpsert",
                            "description": "Data used by the api to create a slack workspace notification"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Notifications"
            ],
            "operationId": "upsert_workspace_notification_api_accounts__account_id__workspaces__workspace_id__notifications_workspace_slack__notification_type__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/events",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event"
                            },
                            "title": "Events"
                        }
                    }
                }
            },
            "description": "Record a batch of Events for an Account",
            "tags": [
                "Events",
                "Events"
            ],
            "operationId": "create_account_events_api_accounts__account_id__events_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/events/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "events": {
                                        "items": {
                                            "$ref": "#/components/schemas/ReceivedEvent"
                                        },
                                        "type": "array",
                                        "title": "Events",
                                        "description": "The Events matching the query"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total",
                                        "description": "The total number of matching Events"
                                    },
                                    "next_page": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "minLength": 1,
                                                "format": "uri"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Page",
                                        "description": "The URL for the next page of results, if there are more"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "events",
                                    "total",
                                    "next_page"
                                ],
                                "title": "EventPage",
                                "description": "A single page of events returned from the API, with an optional link to the\nnext page of results"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "description": "The number of events to return with each page",
                                    "default": 50
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Additional optional filter criteria to narrow down the set of Events"
                                }
                            },
                            "type": "object",
                            "title": "Body_read_account_events_api_accounts__account_id__events_filter_post"
                        }
                    }
                }
            },
            "description": "Queries for Events matching the given filter criteria in the given Account.  Returns\nthe first page of results, and the URL to request the next page (if there are more\nresults).",
            "tags": [
                "Events"
            ],
            "operationId": "read_account_events_api_accounts__account_id__events_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/events/count-by/{countable}",
            "method": "post",
            "parameters": [
                {
                    "name": "countable",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "day",
                            "time",
                            "event",
                            "resource",
                            "workspace",
                            "actor"
                        ],
                        "title": "Countable"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EventCount"
                                },
                                "title": "Response Count Account Events Api Accounts  Account Id  Events Count By  Countable  Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "time_unit": {
                                    "$ref": "#/components/schemas/TimeUnit",
                                    "default": "day"
                                },
                                "time_interval": {
                                    "type": "number",
                                    "minimum": 0.01,
                                    "title": "Time Interval",
                                    "default": 1.0
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Additional optional filter criteria to narrow down the set of Events"
                                }
                            },
                            "type": "object",
                            "title": "Body_count_account_events_api_accounts__account_id__events_count_by__countable__post"
                        }
                    }
                }
            },
            "description": "Returns distinct objects and the count of events associated with them.  Objects\nthat can be counted include the day the event occurred, the type of event, the\nworkspace, or the IDs of the resources associated with the event.",
            "tags": [
                "Events"
            ],
            "operationId": "count_account_events_api_accounts__account_id__events_count_by__countable__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/events",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event"
                            },
                            "title": "Events"
                        }
                    }
                }
            },
            "description": "Record a batch of Events for one Workspace within an Account",
            "tags": [
                "Events"
            ],
            "operationId": "create_workspace_events_api_accounts__account_id__workspaces__workspace_id__events_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/events/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "events": {
                                        "items": {
                                            "$ref": "#/components/schemas/ReceivedEvent"
                                        },
                                        "type": "array",
                                        "title": "Events",
                                        "description": "The Events matching the query"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total",
                                        "description": "The total number of matching Events"
                                    },
                                    "next_page": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "minLength": 1,
                                                "format": "uri"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Page",
                                        "description": "The URL for the next page of results, if there are more"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "events",
                                    "total",
                                    "next_page"
                                ],
                                "title": "EventPage",
                                "description": "A single page of events returned from the API, with an optional link to the\nnext page of results"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "description": "The number of events to return with each page",
                                    "default": 50
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Additional optional filter criteria to narrow down the set of Events"
                                }
                            },
                            "type": "object",
                            "title": "Body_read_workspace_events_api_accounts__account_id__workspaces__workspace_id__events_filter_post"
                        }
                    }
                }
            },
            "description": "Queries for Events matching the given filter criteria in the given Account and\nWorkspace.  Returns the first page of results, and the URL to request the next\npage (if there are more results).",
            "tags": [
                "Events"
            ],
            "operationId": "read_workspace_events_api_accounts__account_id__workspaces__workspace_id__events_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/events/count-by/{countable}",
            "method": "post",
            "parameters": [
                {
                    "name": "countable",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "day",
                            "time",
                            "event",
                            "resource",
                            "workspace",
                            "actor"
                        ],
                        "title": "Countable"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EventCount"
                                },
                                "title": "Response Count Workspace Events Api Accounts  Account Id  Workspaces  Workspace Id  Events Count By  Countable  Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "time_unit": {
                                    "$ref": "#/components/schemas/TimeUnit",
                                    "default": "day"
                                },
                                "time_interval": {
                                    "type": "number",
                                    "minimum": 0.01,
                                    "title": "Time Interval",
                                    "default": 1.0
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Additional optional filter criteria to narrow down the set of Events"
                                }
                            },
                            "type": "object",
                            "title": "Body_count_workspace_events_api_accounts__account_id__workspaces__workspace_id__events_count_by__countable__post"
                        }
                    }
                }
            },
            "description": "Returns distinct objects and the count of events associated with them.  Objects\nthat can be counted include the day the event occurred, the type of event, the\nworkspace, or the IDs of the resources associated with the event.",
            "tags": [
                "Events"
            ],
            "operationId": "count_workspace_events_api_accounts__account_id__workspaces__workspace_id__events_count_by__countable__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/hierarchy/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "depth": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Depth",
                                    "description": "The depth of the hierarchy to return"
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "description": "The number of events to return with each page",
                                    "default": 50
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventLineageFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Additional optional filter criteria to narrow down the set of Resources"
                                }
                            },
                            "type": "object",
                            "required": [
                                "depth"
                            ],
                            "title": "Body_read_resources_hierarchy_api_accounts__account_id__workspaces__workspace_id__resources_hierarchy_filter_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Resources"
            ],
            "operationId": "read_resources_hierarchy_api_accounts__account_id__workspaces__workspace_id__resources_hierarchy_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "resources": {
                                        "items": {
                                            "$ref": "#/components/schemas/Resource"
                                        },
                                        "type": "array",
                                        "title": "Resources",
                                        "description": "The Resources matching the query"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total",
                                        "description": "The total number of matching Resources"
                                    },
                                    "next_page": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "minLength": 1,
                                                "format": "uri"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Page",
                                        "description": "The URL for the next page of results, if there are more"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "resources",
                                    "total",
                                    "next_page"
                                ],
                                "title": "ResourcePage",
                                "description": "A single page of resources returned from the API, with an optional link to the\nnext page of results"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "description": "The number of events to return with each page",
                                    "default": 50
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventLineageFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Additional optional filter criteria to narrow down the set of Resources"
                                }
                            },
                            "type": "object",
                            "title": "Body_filter_workspace_resources_api_accounts__account_id__workspaces__workspace_id__resources_filter_post"
                        }
                    }
                }
            },
            "description": "Returns resources matching the filter referenced in events during\nthe specified time period.",
            "tags": [
                "Resources"
            ],
            "operationId": "filter_workspace_resources_api_accounts__account_id__workspaces__workspace_id__resources_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/filter/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "description": "The number of events to return with each page",
                                    "default": 50
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventLineageFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Additional optional filter criteria to narrow down the set of Resources"
                                }
                            },
                            "type": "object",
                            "title": "Body_get_filtered_resources_count_api_accounts__account_id__workspaces__workspace_id__resources_filter_count_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Resources"
            ],
            "operationId": "get_filtered_resources_count_api_accounts__account_id__workspaces__workspace_id__resources_filter_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/related",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "resources": {
                                        "items": {
                                            "$ref": "#/components/schemas/RelatedResourceResult"
                                        },
                                        "type": "array",
                                        "title": "Resources",
                                        "description": "The Resources that were interacted with"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total",
                                        "description": "The total number of matching Resources"
                                    },
                                    "next_page": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "minLength": 1,
                                                "format": "uri"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Page",
                                        "description": "The URL for the next page of results, if there are more"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "resources",
                                    "total",
                                    "next_page"
                                ],
                                "title": "RelatedResourcePage"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "limit": {
                                    "type": "integer",
                                    "maximum": 200.0,
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "description": "The number of events to return with each page",
                                    "default": 50
                                },
                                "filter": {
                                    "$ref": "#/components/schemas/EventLineageRelatedFilter",
                                    "description": "Additional optional filter criteria to narrow down the set of Events"
                                }
                            },
                            "type": "object",
                            "title": "Body_filter_related_workspace_resources_api_accounts__account_id__workspaces__workspace_id__resources_related_post"
                        }
                    }
                }
            },
            "description": "Returns resources that interacted with resources matching the filter during\nthe specified time period.",
            "tags": [
                "Resources"
            ],
            "operationId": "filter_related_workspace_resources_api_accounts__account_id__workspaces__workspace_id__resources_related_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/related/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "filter": {
                                    "$ref": "#/components/schemas/EventLineageRelatedFilter",
                                    "description": "Additional optional filter criteria to narrow down the set of Events"
                                }
                            },
                            "type": "object",
                            "title": "Body_get_related_resources_count_api_accounts__account_id__workspaces__workspace_id__resources_related_count_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Resources"
            ],
            "operationId": "get_related_resources_count_api_accounts__account_id__workspaces__workspace_id__resources_related_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/hidden-resources/add",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean",
                                "title": "Response Hide Resource Path Api Accounts  Account Id  Workspaces  Workspace Id  Resources Hidden Resources Add Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "paths": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Paths",
                                    "description": "The paths of the resources to exclude"
                                }
                            },
                            "type": "object",
                            "required": [
                                "paths"
                            ],
                            "title": "ResourceExclusionList"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Resources"
            ],
            "operationId": "hide_resource_path_api_accounts__account_id__workspaces__workspace_id__resources_hidden_resources_add_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/resources/hidden-resources/delete",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean",
                                "title": "Response Remove Resource Exclusion Api Accounts  Account Id  Workspaces  Workspace Id  Resources Hidden Resources Delete Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "paths": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Paths",
                                    "description": "The paths of the resources to exclude"
                                }
                            },
                            "type": "object",
                            "required": [
                                "paths"
                            ],
                            "title": "ResourceExclusionList"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Resources"
            ],
            "operationId": "remove_resource_exclusion_api_accounts__account_id__workspaces__workspace_id__resources_hidden_resources_delete_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of this automation"
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "A longer description of this automation",
                                        "default": ""
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Whether this automation will be evaluated",
                                        "default": true
                                    },
                                    "trigger": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/EventTrigger"
                                            },
                                            {
                                                "$ref": "#/components/schemas/MetricTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CompoundTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SequenceTrigger-Output"
                                            }
                                        ],
                                        "title": "Trigger",
                                        "description": "The criteria for which events this Automation covers and how it will respond to the presence or absence of those events"
                                    },
                                    "actions": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions",
                                        "description": "The actions to perform when this Automation triggers"
                                    },
                                    "actions_on_trigger": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Trigger",
                                        "description": "The actions to perform when an Automation goes into a triggered state"
                                    },
                                    "actions_on_resolve": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Resolve",
                                        "description": "The actions to perform when an Automation goes into a resolving state"
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "Labels to apply to this automation"
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account",
                                        "description": "The Account to which this automation belongs"
                                    },
                                    "workspace": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workspace",
                                        "description": "The Workspace to which this automation belongs"
                                    },
                                    "actor": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/ActorReference"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The Prefect Actor to use when running actions, defaulting to the Actor who created the Automation"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "trigger",
                                    "actions",
                                    "account",
                                    "workspace"
                                ],
                                "title": "Automation"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of this automation"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "description": "A longer description of this automation",
                                    "default": ""
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Whether this automation will be evaluated",
                                    "default": true
                                },
                                "trigger": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventTrigger"
                                        },
                                        {
                                            "$ref": "#/components/schemas/MetricTrigger-Input"
                                        },
                                        {
                                            "$ref": "#/components/schemas/CompoundTrigger-Input"
                                        },
                                        {
                                            "$ref": "#/components/schemas/SequenceTrigger-Input"
                                        }
                                    ],
                                    "title": "Trigger",
                                    "description": "The criteria for which events this Automation covers and how it will respond to the presence or absence of those events"
                                },
                                "actions": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DoNothing"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RunDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CancelFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ChangeFlowRunState"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CallWebhook"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SuspendFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DeclareIncident"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlaViolation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendPrefectNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "title": "Actions",
                                    "description": "The actions to perform when this Automation triggers"
                                },
                                "actions_on_trigger": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DoNothing"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RunDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CancelFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ChangeFlowRunState"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CallWebhook"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SuspendFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DeclareIncident"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlaViolation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendPrefectNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "title": "Actions On Trigger",
                                    "description": "The actions to perform when an Automation goes into a triggered state"
                                },
                                "actions_on_resolve": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DoNothing"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RunDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CancelFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ChangeFlowRunState"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CallWebhook"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SuspendFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DeclareIncident"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlaViolation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendPrefectNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "title": "Actions On Resolve",
                                    "description": "The actions to perform when an Automation goes into a resolving state"
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "Labels to apply to this automation"
                                },
                                "owner_resource": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Owner Resource",
                                    "description": "The resource to which this automation belongs"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "trigger",
                                "actions"
                            ],
                            "title": "AutomationCreate"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "create_automation_api_accounts__account_id__workspaces__workspace_id__automations__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/{id}",
            "method": "put",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of this automation"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "description": "A longer description of this automation",
                                    "default": ""
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Whether this automation will be evaluated",
                                    "default": true
                                },
                                "trigger": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EventTrigger"
                                        },
                                        {
                                            "$ref": "#/components/schemas/MetricTrigger-Input"
                                        },
                                        {
                                            "$ref": "#/components/schemas/CompoundTrigger-Input"
                                        },
                                        {
                                            "$ref": "#/components/schemas/SequenceTrigger-Input"
                                        }
                                    ],
                                    "title": "Trigger",
                                    "description": "The criteria for which events this Automation covers and how it will respond to the presence or absence of those events"
                                },
                                "actions": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DoNothing"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RunDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CancelFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ChangeFlowRunState"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CallWebhook"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SuspendFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DeclareIncident"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlaViolation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendPrefectNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "title": "Actions",
                                    "description": "The actions to perform when this Automation triggers"
                                },
                                "actions_on_trigger": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DoNothing"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RunDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CancelFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ChangeFlowRunState"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CallWebhook"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SuspendFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DeclareIncident"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlaViolation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendPrefectNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "title": "Actions On Trigger",
                                    "description": "The actions to perform when an Automation goes into a triggered state"
                                },
                                "actions_on_resolve": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DoNothing"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RunDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeDeployment"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CancelFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ChangeFlowRunState"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkQueue"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CallWebhook"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeAutomation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SuspendFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeFlowRun"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DeclareIncident"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PauseWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ResumeWorkPool"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlaViolation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendPrefectNotification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "title": "Actions On Resolve",
                                    "description": "The actions to perform when an Automation goes into a resolving state"
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "Labels to apply to this automation"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "trigger",
                                "actions"
                            ],
                            "title": "AutomationUpdate"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "update_automation_api_accounts__account_id__workspaces__workspace_id__automations__id__put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Whether this automation will be evaluated",
                                    "default": true
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "AutomationPartialUpdate"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "patch_automation_api_accounts__account_id__workspaces__workspace_id__automations__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "delete_automation_api_accounts__account_id__workspaces__workspace_id__automations__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Automation"
                                },
                                "title": "Response Read Automations Api Accounts  Account Id  Workspaces  Workspace Id  Automations Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/AutomationSort",
                                    "default": "NAME_ASC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "automations": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/AutomationFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_automations_api_accounts__account_id__workspaces__workspace_id__automations_filter_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "read_automations_api_accounts__account_id__workspaces__workspace_id__automations_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/count",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Automations Api Accounts  Account Id  Workspaces  Workspace Id  Automations Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "count_automations_api_accounts__account_id__workspaces__workspace_id__automations_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/owned-by/{resource_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "resource_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Resource Id"
                    }
                }
            ],
            "responses": {
                "202": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "delete_automations_owned_by_resource_api_accounts__account_id__workspaces__workspace_id__automations_owned_by__resource_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of this automation"
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "A longer description of this automation",
                                        "default": ""
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Whether this automation will be evaluated",
                                        "default": true
                                    },
                                    "trigger": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/EventTrigger"
                                            },
                                            {
                                                "$ref": "#/components/schemas/MetricTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CompoundTrigger-Output"
                                            },
                                            {
                                                "$ref": "#/components/schemas/SequenceTrigger-Output"
                                            }
                                        ],
                                        "title": "Trigger",
                                        "description": "The criteria for which events this Automation covers and how it will respond to the presence or absence of those events"
                                    },
                                    "actions": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions",
                                        "description": "The actions to perform when this Automation triggers"
                                    },
                                    "actions_on_trigger": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Trigger",
                                        "description": "The actions to perform when an Automation goes into a triggered state"
                                    },
                                    "actions_on_resolve": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/DoNothing"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/RunDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeDeployment"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseScheduleForFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeSchedule"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CancelFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ChangeFlowRunState"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkQueue"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/CallWebhook"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeAutomation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SuspendFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeFlowRun"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/DeclareIncident"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/PauseWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ResumeWorkPool"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlaViolation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendEmailNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendPrefectNotification"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendTemplateEmailToUsersByPreference"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackNotificationToSubscribers"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SlackSendNotificationToDefaultChannel"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SendIntegratedSlackMessageAction"
                                                }
                                            ]
                                        },
                                        "type": "array",
                                        "title": "Actions On Resolve",
                                        "description": "The actions to perform when an Automation goes into a resolving state"
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "Labels to apply to this automation"
                                    },
                                    "severity": {
                                        "$ref": "#/components/schemas/SlaSeverity",
                                        "description": "The severity level of violations of this SLA",
                                        "default": "moderate"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "TimeToCompletionSla",
                                            "FrequencySla",
                                            "FreshnessSla",
                                            "LatenessSla"
                                        ],
                                        "title": "Type",
                                        "description": "The type of the SLA"
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account",
                                        "description": "The Account to which this automation belongs"
                                    },
                                    "workspace": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workspace",
                                        "description": "The Workspace to which this automation belongs"
                                    },
                                    "actor": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/ActorReference"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The Prefect Actor to use when running actions, defaulting to the Actor who created the Automation"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "trigger",
                                    "actions",
                                    "type",
                                    "account",
                                    "workspace"
                                ],
                                "title": "ServiceLevelAgreement",
                                "description": "A Service Level Agreement that inherits from ServiceLevelAgreementCore"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/TimeToCompletionSla"
                                },
                                {
                                    "$ref": "#/components/schemas/FrequencySla"
                                },
                                {
                                    "$ref": "#/components/schemas/FreshnessSla"
                                },
                                {
                                    "$ref": "#/components/schemas/LatenessSla"
                                }
                            ],
                            "title": "Sla"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "create_sla_api_accounts__account_id__workspaces__workspace_id__slas__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/apply-resource-slas/{resource_id}",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "resource_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Resource Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServiceLevelAgreement"
                                    }
                                },
                                "title": "Response Apply Slas Api Accounts  Account Id  Workspaces  Workspace Id  Slas Apply Resource Slas  Resource Id  Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/TimeToCompletionSla"
                                    },
                                    {
                                        "$ref": "#/components/schemas/FrequencySla"
                                    },
                                    {
                                        "$ref": "#/components/schemas/FreshnessSla"
                                    },
                                    {
                                        "$ref": "#/components/schemas/LatenessSla"
                                    }
                                ]
                            },
                            "title": "Slas"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "apply_slas_api_accounts__account_id__workspaces__workspace_id__slas_apply_resource_slas__resource_id__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "sort",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "CREATED_DESC",
                            "UPDATED_DESC",
                            "NAME_ASC",
                            "NAME_DESC"
                        ],
                        "title": "SlaSort",
                        "description": "Defines SLAs sorting options."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ServiceLevelAgreement"
                                },
                                "title": "Response Read Slas Api Accounts  Account Id  Workspaces  Workspace Id  Slas Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/SlaFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_slas_api_accounts__account_id__workspaces__workspace_id__slas_filter_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "read_slas_api_accounts__account_id__workspaces__workspace_id__slas_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/by-owner/{owner_resource}",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "owner_resource",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Owner Resource"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "sort",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "CREATED_DESC",
                            "UPDATED_DESC",
                            "NAME_ASC",
                            "NAME_DESC"
                        ],
                        "title": "SlaSort",
                        "description": "Defines SLAs sorting options."
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ServiceLevelAgreement"
                                },
                                "title": "Response Read Slas By Owner Resource Api Accounts  Account Id  Workspaces  Workspace Id  Slas By Owner  Owner Resource  Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/SlaFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_slas_by_owner_resource_api_accounts__account_id__workspaces__workspace_id__slas_by_owner__owner_resource__post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "read_slas_by_owner_resource_api_accounts__account_id__workspaces__workspace_id__slas_by_owner__owner_resource__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/{sla_id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "sla_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Sla Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean",
                                "title": "Response Update Sla Api Accounts  Account Id  Workspaces  Workspace Id  Slas  Sla Id  Patch"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Whether this SLA will be evaluated"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "enabled"
                            ],
                            "title": "ServiceLevelAgreementPartialUpdate",
                            "description": "Model for partially updating Service Level Agreements"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "update_sla_api_accounts__account_id__workspaces__workspace_id__slas__sla_id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/{sla_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "sla_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Sla Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean",
                                "title": "Response Delete Sla Api Accounts  Account Id  Workspaces  Workspace Id  Slas  Sla Id  Delete"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "delete_sla_api_accounts__account_id__workspaces__workspace_id__slas__sla_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/flow-runs",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "title": "Response Read Flow Runs Api Accounts  Account Id  Workspaces  Workspace Id  Slas Flow Runs Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sla_ids": {
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "type": "array",
                                    "title": "Sla Ids"
                                },
                                "since": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Since"
                                }
                            },
                            "type": "object",
                            "required": [
                                "sla_ids",
                                "since"
                            ],
                            "title": "Body_read_flow_runs_api_accounts__account_id__workspaces__workspace_id__slas_flow_runs_post"
                        }
                    }
                }
            },
            "description": "Read all flow runs that have an SLA violation event within the given horizon.\n\nArgs:\n    sla_ids (list[UUID]): The IDs of the SLAs to read flow runs for.\n    since (DateTime): The date to read flow runs since.\n    workspace_id (UUID, optional): The ID of the workspace to read flow runs for. Defaults to Path(...).\n    account_id (UUID, optional): The ID of the account to read flow runs for. Defaults to Path(...).\n    client (ChClient, optional): The ClickHouse client to use. Defaults to Depends(clickhouse_client).\n\nReturns:\n    Sequence[str]: _description_",
            "tags": [
                "SLAs"
            ],
            "operationId": "read_flow_runs_api_accounts__account_id__workspaces__workspace_id__slas_flow_runs_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/default",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Automation"
                                },
                                "title": "Response Create Default Sla Api Accounts  Account Id  Workspaces  Workspace Id  Slas Default Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sla_severities": {
                                    "items": {
                                        "$ref": "#/components/schemas/SlaSeverity"
                                    },
                                    "type": "array",
                                    "title": "Sla Severities"
                                },
                                "block_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Block Id"
                                }
                            },
                            "type": "object",
                            "required": [
                                "sla_severities",
                                "block_id"
                            ],
                            "title": "Body_create_default_sla_api_accounts__account_id__workspaces__workspace_id__slas_default_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "create_default_sla_api_accounts__account_id__workspaces__workspace_id__slas_default_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/slas/default/{sla_severity}",
            "method": "delete",
            "parameters": [
                {
                    "name": "sla_severity",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "minor",
                            "low",
                            "moderate",
                            "high",
                            "critical"
                        ],
                        "title": "SlaSeverity",
                        "description": "The severity of a SLA violation"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "SLAs"
            ],
            "operationId": "delete_default_sla_api_accounts__account_id__workspaces__workspace_id__slas_default__sla_severity__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/webhooks/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the webhook"
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "A longer description of the webhook",
                                        "default": ""
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Whether the webhook is enabled",
                                        "default": true
                                    },
                                    "service_account_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Service Account Id",
                                        "description": "The Service Account to which this webhook belongs"
                                    },
                                    "template": {
                                        "type": "string",
                                        "title": "Template",
                                        "description": "The template which translates the incoming HTTP headers and body into a Prefect Event"
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account",
                                        "description": "The Account to which this webhook belongs"
                                    },
                                    "workspace": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workspace",
                                        "description": "The Workspace to which this webhook belongs"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "title": "Slug",
                                        "description": "The slug of the webhook, used in the URL"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "template",
                                    "account",
                                    "workspace"
                                ],
                                "title": "Webhook",
                                "description": "Defines an inbound webhook to receive events from external systems"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the webhook"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "description": "A longer description of the webhook",
                                    "default": ""
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Whether the webhook is enabled",
                                    "default": true
                                },
                                "service_account_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Service Account Id",
                                    "description": "The Service Account to which this webhook belongs"
                                },
                                "template": {
                                    "type": "string",
                                    "title": "Template",
                                    "description": "The template which translates the incoming HTTP headers and body into a Prefect Event"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "template"
                            ],
                            "title": "WebhookCreate",
                            "description": "Defines an inbound webhook to receive events from external systems"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Webhooks"
            ],
            "operationId": "create_webhook_api_accounts__account_id__workspaces__workspace_id__webhooks__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/webhooks/{webhook_id}",
            "method": "put",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "webhook_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Webhook Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the webhook"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "description": "A longer description of the webhook",
                                    "default": ""
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Whether the webhook is enabled",
                                    "default": true
                                },
                                "service_account_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Service Account Id",
                                    "description": "The Service Account to which this webhook belongs"
                                },
                                "template": {
                                    "type": "string",
                                    "title": "Template",
                                    "description": "The template which translates the incoming HTTP headers and body into a Prefect Event"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "template"
                            ],
                            "title": "WebhookUpdate",
                            "description": "Defines an inbound webhook to receive events from external systems"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Webhooks"
            ],
            "operationId": "update_webhook_api_accounts__account_id__workspaces__workspace_id__webhooks__webhook_id__put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/webhooks/{webhook_id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "webhook_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Webhook Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Whether the webhook is enabled",
                                    "default": true
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "WebhookPartialUpdate",
                            "description": "Defines an inbound webhook to receive events from external systems"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Webhooks"
            ],
            "operationId": "partial_update_webhook_api_accounts__account_id__workspaces__workspace_id__webhooks__webhook_id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/webhooks/{webhook_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "webhook_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Webhook Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Webhooks"
            ],
            "operationId": "delete_webhook_api_accounts__account_id__workspaces__workspace_id__webhooks__webhook_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/webhooks/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookRead"
                                },
                                "title": "Response Query Webhooks Api Accounts  Account Id  Workspaces  Workspace Id  Webhooks Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/WebhookSort",
                                    "default": "NAME_ASC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_query_webhooks_api_accounts__account_id__workspaces__workspace_id__webhooks_filter_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Webhooks"
            ],
            "operationId": "query_webhooks_api_accounts__account_id__workspaces__workspace_id__webhooks_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/webhooks/{webhook_id}/rotate",
            "method": "post",
            "parameters": [
                {
                    "name": "webhook_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Webhook Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the webhook"
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "A longer description of the webhook",
                                        "default": ""
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Whether the webhook is enabled",
                                        "default": true
                                    },
                                    "service_account_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Service Account Id",
                                        "description": "The Service Account to which this webhook belongs"
                                    },
                                    "template": {
                                        "type": "string",
                                        "title": "Template",
                                        "description": "The template which translates the incoming HTTP headers and body into a Prefect Event"
                                    },
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "account": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Account",
                                        "description": "The Account to which this webhook belongs"
                                    },
                                    "workspace": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Workspace",
                                        "description": "The Workspace to which this webhook belongs"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "title": "Slug",
                                        "description": "The slug of the webhook, used in the URL"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "template",
                                    "account",
                                    "workspace"
                                ],
                                "title": "Webhook",
                                "description": "Defines an inbound webhook to receive events from external systems"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "",
            "tags": [
                "Webhooks"
            ],
            "operationId": "rotate_webhook_slug_api_accounts__account_id__workspaces__workspace_id__webhooks__webhook_id__rotate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/templates/validate",
            "method": "post",
            "parameters": [],
            "responses": {
                "200": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string",
                            "title": "Template",
                            "default": ""
                        }
                    }
                }
            },
            "description": "",
            "tags": [],
            "operationId": "validate_template_api_accounts__account_id__workspaces__workspace_id__templates_validate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/automations/templates/validate",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string",
                            "default": "",
                            "title": "Template"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Automations"
            ],
            "operationId": "validate_template_api_accounts__account_id__workspaces__workspace_id__automations_templates_validate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/metrics/prefect/{metric}/timeseries",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "metric",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "lateness",
                            "duration",
                            "successes",
                            "volume",
                            "sla_violations",
                            "sla_violations_by_severity"
                        ],
                        "title": "PrefectMetric"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "metric": {
                                        "$ref": "#/components/schemas/PrefectMetric",
                                        "description": "The metric that was queried"
                                    },
                                    "query": {
                                        "$ref": "#/components/schemas/TimeseriesMetricQuery-Output",
                                        "description": "The metric query that was executed"
                                    },
                                    "rollup": {
                                        "items": {},
                                        "type": "array",
                                        "title": "Rollup",
                                        "description": "A rollup of the time series over the entire time range, in the same order as `query.aggregates`."
                                    },
                                    "series": {
                                        "items": {
                                            "prefixItems": [
                                                {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                {
                                                    "items": {},
                                                    "type": "array"
                                                }
                                            ],
                                            "type": "array",
                                            "maxItems": 2,
                                            "minItems": 2
                                        },
                                        "type": "array",
                                        "title": "Series",
                                        "description": "The time series, with each row being a pair of an ISO8601 timestamp and the row of values, in the same order as `query.aggregates`.  Each row represents given aggregates over the `query.resolution` minutes starting at the timestamp."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "metric",
                                    "query",
                                    "rollup",
                                    "series"
                                ],
                                "title": "TimeseriesMetricResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "after": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "After",
                                    "description": "The start of the time series"
                                },
                                "before": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Before",
                                    "description": "The end of the time series, defaulting to now"
                                },
                                "timezone": {
                                    "type": "string",
                                    "title": "Timezone",
                                    "description": "The timezone to use for the time series",
                                    "default": "Etc/UTC"
                                },
                                "resource": {
                                    "$ref": "#/components/schemas/ResourceSpecification",
                                    "description": "Filter to only flow runs matching these labels"
                                },
                                "related": {
                                    "$ref": "#/components/schemas/ResourceSpecification",
                                    "description": "Filter to only flow runs with a related resource matching these labels"
                                },
                                "aggregates": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/Count"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CountIf"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Sum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Mean"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Minimum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Maximum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StandardDeviation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Quantile"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Ratio"
                                            },
                                            {
                                                "$ref": "#/components/schemas/MapAggregate"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "maxItems": 10,
                                    "minItems": 1,
                                    "title": "Aggregates",
                                    "description": "The aggregate functions to apply.  The order they are specified here will determine the order of the returned data columns."
                                },
                                "resolution": {
                                    "type": "integer",
                                    "enum": [
                                        1,
                                        5,
                                        15,
                                        60,
                                        360,
                                        1440
                                    ],
                                    "title": "Resolution",
                                    "description": "The resolution of the time series, in minutes"
                                }
                            },
                            "type": "object",
                            "required": [
                                "after",
                                "aggregates",
                                "resolution"
                            ],
                            "title": "TimeseriesMetricQuery"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Metrics"
            ],
            "operationId": "read_prefect_metric_timeseries_api_accounts__account_id__workspaces__workspace_id__ui_metrics_prefect__metric__timeseries_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/metrics/prefect/{metric}",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "metric",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "lateness",
                            "duration",
                            "successes",
                            "volume",
                            "sla_violations",
                            "sla_violations_by_severity"
                        ],
                        "title": "PrefectMetric"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "metric": {
                                        "$ref": "#/components/schemas/PrefectMetric",
                                        "description": "The metric that was queried"
                                    },
                                    "query": {
                                        "$ref": "#/components/schemas/TimeseriesMetricQuery-Output",
                                        "description": "The metric query that was executed"
                                    },
                                    "rollup": {
                                        "items": {},
                                        "type": "array",
                                        "title": "Rollup",
                                        "description": "A rollup of the time series over the entire time range, in the same order as `query.aggregates`."
                                    },
                                    "series": {
                                        "items": {
                                            "prefixItems": [
                                                {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                {
                                                    "items": {},
                                                    "type": "array"
                                                }
                                            ],
                                            "type": "array",
                                            "maxItems": 2,
                                            "minItems": 2
                                        },
                                        "type": "array",
                                        "title": "Series",
                                        "description": "The time series, with each row being a pair of an ISO8601 timestamp and the row of values, in the same order as `query.aggregates`.  Each row represents given aggregates over the `query.resolution` minutes starting at the timestamp."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "metric",
                                    "query",
                                    "rollup",
                                    "series"
                                ],
                                "title": "TimeseriesMetricResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "after": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "After",
                                    "description": "The start of the time series"
                                },
                                "before": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Before",
                                    "description": "The end of the time series, defaulting to now"
                                },
                                "timezone": {
                                    "type": "string",
                                    "title": "Timezone",
                                    "description": "The timezone to use for the time series",
                                    "default": "Etc/UTC"
                                },
                                "resource": {
                                    "$ref": "#/components/schemas/ResourceSpecification",
                                    "description": "Filter to only flow runs matching these labels"
                                },
                                "related": {
                                    "$ref": "#/components/schemas/ResourceSpecification",
                                    "description": "Filter to only flow runs with a related resource matching these labels"
                                },
                                "aggregates": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/Count"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CountIf"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Sum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Mean"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Minimum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Maximum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StandardDeviation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Quantile"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Ratio"
                                            },
                                            {
                                                "$ref": "#/components/schemas/MapAggregate"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "maxItems": 10,
                                    "minItems": 1,
                                    "title": "Aggregates",
                                    "description": "The aggregate functions to apply.  The order they are specified here will determine the order of the returned data columns."
                                },
                                "resolution": {
                                    "type": "integer",
                                    "enum": [
                                        1,
                                        5,
                                        15,
                                        60,
                                        360,
                                        1440
                                    ],
                                    "title": "Resolution",
                                    "description": "The resolution of the time series, in minutes"
                                }
                            },
                            "type": "object",
                            "required": [
                                "after",
                                "aggregates",
                                "resolution"
                            ],
                            "title": "TimeseriesMetricQuery"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Metrics"
            ],
            "operationId": "read_prefect_metric_timeseries_api_accounts__account_id__workspaces__workspace_id__ui_metrics_prefect__metric__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/metrics/prefect/{metric}/grouped",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "metric",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "lateness",
                            "duration",
                            "successes",
                            "volume",
                            "sla_violations",
                            "sla_violations_by_severity"
                        ],
                        "title": "PrefectMetric"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "metric": {
                                        "$ref": "#/components/schemas/PrefectMetric",
                                        "description": "The metric that was queried"
                                    },
                                    "query": {
                                        "$ref": "#/components/schemas/GroupedMetricQuery-Output",
                                        "description": "The metric query that was executed"
                                    },
                                    "results": {
                                        "items": {
                                            "prefixItems": [
                                                {
                                                    "anyOf": [
                                                        {
                                                            "$ref": "#/components/schemas/RelatedResource"
                                                        },
                                                        {
                                                            "type": "null"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "items": {},
                                                    "type": "array"
                                                }
                                            ],
                                            "type": "array",
                                            "maxItems": 2,
                                            "minItems": 2
                                        },
                                        "type": "array",
                                        "title": "Results",
                                        "description": "The results of the query, with each item being a tuple of the Resource and the row of values of metrics in the same order as `query.aggregates`."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "metric",
                                    "query",
                                    "results"
                                ],
                                "title": "GroupedMetricResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "after": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "After",
                                    "description": "The start of the time series"
                                },
                                "before": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Before",
                                    "description": "The end of the time series, defaulting to now"
                                },
                                "timezone": {
                                    "type": "string",
                                    "title": "Timezone",
                                    "description": "The timezone to use for the time series",
                                    "default": "Etc/UTC"
                                },
                                "resource": {
                                    "$ref": "#/components/schemas/ResourceSpecification",
                                    "description": "Filter to only flow runs matching these labels"
                                },
                                "related": {
                                    "$ref": "#/components/schemas/ResourceSpecification",
                                    "description": "Filter to only flow runs with a related resource matching these labels"
                                },
                                "aggregates": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/Count"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CountIf"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Sum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Mean"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Minimum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Maximum"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StandardDeviation"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Quantile"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Ratio"
                                            },
                                            {
                                                "$ref": "#/components/schemas/MapAggregate"
                                            }
                                        ]
                                    },
                                    "type": "array",
                                    "maxItems": 10,
                                    "minItems": 1,
                                    "title": "Aggregates",
                                    "description": "The aggregate functions to apply.  The order they are specified here will determine the order of the returned data columns."
                                },
                                "group_by": {
                                    "type": "string",
                                    "enum": [
                                        "flow",
                                        "deployment",
                                        "work-pool",
                                        "tag"
                                    ],
                                    "title": "Group By",
                                    "description": "The role of the related resource to group by.  There will be one result for each distinct related resource with that role in the time period, and optionally another null result for those that do not have the requested related resource."
                                },
                                "order_by": {
                                    "items": {
                                        "$ref": "#/components/schemas/Ordering"
                                    },
                                    "type": "array",
                                    "title": "Order By",
                                    "description": "The order to sort the groups by"
                                }
                            },
                            "type": "object",
                            "required": [
                                "after",
                                "aggregates",
                                "group_by"
                            ],
                            "title": "GroupedMetricQuery"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Metrics"
            ],
            "operationId": "read_prefect_metric_grouped_api_accounts__account_id__workspaces__workspace_id__ui_metrics_prefect__metric__grouped_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/logs/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "202": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/LogCreate"
                            },
                            "title": "Logs"
                        }
                    }
                }
            },
            "description": "Create new logs from the provided schema.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Logs"
            ],
            "operationId": "create_logs_api_accounts__account_id__workspaces__workspace_id__logs__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/logs/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Log"
                                },
                                "title": "Response Read Logs Api Accounts  Account Id  Workspaces  Workspace Id  Logs Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "logs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/LogFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "sort": {
                                    "$ref": "#/components/schemas/LogSort",
                                    "default": "TIMESTAMP_ASC"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_logs_api_accounts__account_id__workspaces__workspace_id__logs_filter_post"
                        }
                    }
                }
            },
            "description": "Query for logs.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Logs"
            ],
            "operationId": "read_logs_api_accounts__account_id__workspaces__workspace_id__logs_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "key": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Key",
                                        "description": "An optional unique reference key for this artifact."
                                    },
                                    "type": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Type",
                                        "description": "An identifier that describes the shape of the data field. e.g. 'result', 'table', 'markdown'"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A markdown-enabled description of the artifact."
                                    },
                                    "data": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {},
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Data",
                                        "description": "Data associated with the artifact, e.g. a result.; structure depends on the artifact type.Content must be storable as JSON."
                                    },
                                    "metadata_": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Metadata",
                                        "description": "User-defined artifact metadata. Content must be string key and value pairs."
                                    },
                                    "flow_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Run Id",
                                        "description": "The flow run associated with the artifact."
                                    },
                                    "task_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Task Run Id",
                                        "description": "The task run associated with the artifact."
                                    }
                                },
                                "type": "object",
                                "title": "Artifact"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "key": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Key",
                                    "description": "An optional unique reference key for this artifact."
                                },
                                "type": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Type",
                                    "description": "An identifier that describes the shape of the data field. e.g. 'result', 'table', 'markdown'"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "A markdown-enabled description of the artifact."
                                },
                                "data": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {},
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Data",
                                    "description": "Data associated with the artifact, e.g. a result.; structure depends on the artifact type."
                                },
                                "metadata_": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "type": "string"
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Metadata",
                                    "description": "User-defined artifact metadata. Content must be string key and value pairs."
                                },
                                "flow_run_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Flow Run Id",
                                    "description": "The flow run associated with the artifact."
                                },
                                "task_run_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Task Run Id",
                                    "description": "The task run associated with the artifact."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "ArtifactCreate",
                            "description": "Data used by the Prefect REST API to create an artifact."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "create_artifact_api_accounts__account_id__workspaces__workspace_id__artifacts__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the artifact to update.",
                        "title": "Id"
                    },
                    "description": "The ID of the artifact to update."
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "data": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {},
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Data"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "metadata_": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "type": "string"
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Metadata"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "ArtifactUpdate",
                            "description": "Data used by the Prefect REST API to update an artifact."
                        }
                    }
                }
            },
            "description": "Update an artifact in the database.\n\nRequired workspace scopes: `write_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "update_artifact_api_accounts__account_id__workspaces__workspace_id__artifacts__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the artifact to delete.",
                        "title": "Id"
                    },
                    "description": "The ID of the artifact to delete."
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete an artifact from the database.\n\nRequired workspace scopes: `manage_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "delete_artifact_api_accounts__account_id__workspaces__workspace_id__artifacts__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Artifact"
                                },
                                "title": "Response Read Artifacts Api Accounts  Account Id  Workspaces  Workspace Id  Artifacts Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/ArtifactSort",
                                    "default": "ID_DESC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "artifacts": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ArtifactFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_artifacts_api_accounts__account_id__workspaces__workspace_id__artifacts_filter_post"
                        }
                    }
                }
            },
            "description": "Retrieve artifacts from the database.\n\nRequired workspace scopes: `see_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "read_artifacts_api_accounts__account_id__workspaces__workspace_id__artifacts_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/latest/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ArtifactCollection"
                                },
                                "title": "Response Read Latest Artifacts Api Accounts  Account Id  Workspaces  Workspace Id  Artifacts Latest Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/ArtifactCollectionSort",
                                    "default": "ID_DESC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "artifacts": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ArtifactCollectionFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_latest_artifacts_api_accounts__account_id__workspaces__workspace_id__artifacts_latest_filter_post"
                        }
                    }
                }
            },
            "description": "Retrieve artifacts from the database.\n\nRequired workspace scopes: `see_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "read_latest_artifacts_api_accounts__account_id__workspaces__workspace_id__artifacts_latest_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Artifacts Api Accounts  Account Id  Workspaces  Workspace Id  Artifacts Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "artifacts": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ArtifactFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_artifacts_api_accounts__account_id__workspaces__workspace_id__artifacts_count_post"
                        }
                    }
                }
            },
            "description": "Count artifacts in the database.\n\nRequired workspace scopes: `see_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "count_artifacts_api_accounts__account_id__workspaces__workspace_id__artifacts_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/artifacts/latest/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Latest Artifacts Api Accounts  Account Id  Workspaces  Workspace Id  Artifacts Latest Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "artifacts": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ArtifactCollectionFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_latest_artifacts_api_accounts__account_id__workspaces__workspace_id__artifacts_latest_count_post"
                        }
                    }
                }
            },
            "description": "Count artifacts from the database.\n\nRequired workspace scopes: `see_artifacts`",
            "tags": [
                "Artifacts"
            ],
            "operationId": "count_latest_artifacts_api_accounts__account_id__workspaces__workspace_id__artifacts_latest_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flows/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the flow",
                                        "examples": [
                                            "1"
                                        ]
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of flow tags",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "Flow",
                                "description": "An ORM representation of flow data."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "pattern": "^[^/%&><]+$",
                                    "title": "Name",
                                    "description": "The name of the flow",
                                    "examples": [
                                        "my-flow"
                                    ]
                                },
                                "tags": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Tags",
                                    "description": "A list of flow tags",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2",
                                            "tag-3"
                                        ]
                                    ]
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                    "examples": [
                                        {
                                            "key": "value1",
                                            "key2": 42
                                        }
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "FlowCreate",
                            "description": "Data used by the Orion API to create a flow."
                        }
                    }
                }
            },
            "description": "Gracefully creates a new flow from the provided schema. If a flow with the\nsame name already exists, the existing flow is returned.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flows"
            ],
            "operationId": "create_flow_api_accounts__account_id__workspaces__workspace_id__flows__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flows/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow id",
                        "title": "Id"
                    },
                    "description": "The flow id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "tags": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Tags",
                                    "description": "A list of flow tags",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                    "examples": [
                                        {
                                            "key": "value1",
                                            "key2": 42
                                        }
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "FlowUpdate",
                            "description": "Data used by the Prefect REST API to update a flow."
                        }
                    }
                }
            },
            "description": "Updates a flow.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flows"
            ],
            "operationId": "update_flow_api_accounts__account_id__workspaces__workspace_id__flows__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flows/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow id",
                        "title": "Id"
                    },
                    "description": "The flow id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a flow by id.\n\nRequired workspace scopes: `manage_flows`",
            "tags": [
                "Flows"
            ],
            "operationId": "delete_flow_api_accounts__account_id__workspaces__workspace_id__flows__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flows/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Flows Api Accounts  Account Id  Workspaces  Workspace Id  Flows Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_flows_api_accounts__account_id__workspaces__workspace_id__flows_count_post"
                        }
                    }
                }
            },
            "description": "Count flows.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flows"
            ],
            "operationId": "count_flows_api_accounts__account_id__workspaces__workspace_id__flows_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flows/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Flow"
                                },
                                "title": "Response Read Flows Api Accounts  Account Id  Workspaces  Workspace Id  Flows Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "sort": {
                                    "$ref": "#/components/schemas/FlowSort",
                                    "default": "NAME_ASC"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_flows_api_accounts__account_id__workspaces__workspace_id__flows_filter_post"
                        }
                    }
                }
            },
            "description": "Query for flows.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flows"
            ],
            "operationId": "read_flows_api_accounts__account_id__workspaces__workspace_id__flows_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flows/paginate",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "results": {
                                        "items": {
                                            "$ref": "#/components/schemas/Flow"
                                        },
                                        "type": "array",
                                        "title": "Results"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit"
                                    },
                                    "pages": {
                                        "type": "integer",
                                        "title": "Pages"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "title": "Page"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "results",
                                    "count",
                                    "limit",
                                    "pages",
                                    "page"
                                ],
                                "title": "FlowPaginationResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "minimum": 1.0,
                                    "title": "Page",
                                    "default": 1
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "sort": {
                                    "$ref": "#/components/schemas/FlowSort",
                                    "default": "NAME_ASC"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_paginate_flows_api_accounts__account_id__workspaces__workspace_id__flows_paginate_post"
                        }
                    }
                }
            },
            "description": "Pagination query for flows.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flows"
            ],
            "operationId": "paginate_flows_api_accounts__account_id__workspaces__workspace_id__flows_paginate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the flow run. Defaults to a random slug if not specified.",
                                        "examples": [
                                            "my-flow-run"
                                        ]
                                    },
                                    "flow_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Flow Id",
                                        "description": "The id of the flow being run."
                                    },
                                    "flow_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Name",
                                        "description": "The name of the flow being run."
                                    },
                                    "flow_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Version",
                                        "description": "The version of the flow executed in this flow run.",
                                        "examples": [
                                            "1.0"
                                        ]
                                    },
                                    "state_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Id",
                                        "description": "The id of the flow run's current state."
                                    },
                                    "deployment_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Id",
                                        "description": "The deployment associated with this flow run"
                                    },
                                    "deployment_version_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Version Id",
                                        "description": "The deployment version associated with this flow run."
                                    },
                                    "deployment_version_info": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/VersionInfo"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The version info of the deployment associated with this flow run."
                                    },
                                    "deployment_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Version",
                                        "description": "The version of the deployment associated with this flow run.",
                                        "examples": [
                                            "1.0"
                                        ]
                                    },
                                    "work_queue_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Id",
                                        "description": "The id of the run's work pool queue."
                                    },
                                    "work_queue_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Name",
                                        "description": "The work queue that handled this flow run."
                                    },
                                    "parameters": {
                                        "type": "object",
                                        "title": "Parameters",
                                        "description": "Parameters for the flow run."
                                    },
                                    "idempotency_key": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Idempotency Key",
                                        "description": "An optional idempotency key for the flow run. Used to ensure the same flow run is not created multiple times."
                                    },
                                    "context": {
                                        "type": "object",
                                        "title": "Context",
                                        "description": "Additional context for the flow run.",
                                        "examples": [
                                            {
                                                "my_var": "my_val"
                                            }
                                        ]
                                    },
                                    "empirical_policy": {
                                        "$ref": "#/components/schemas/FlowRunPolicy"
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags on the flow run",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    },
                                    "parent_task_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Parent Task Run Id",
                                        "description": "If the flow run is a subflow, the id of the 'dummy' task in the parent flow used to track subflow state."
                                    },
                                    "state_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/StateType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The type of the current flow run state."
                                    },
                                    "state_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Name",
                                        "description": "The name of the current flow run state."
                                    },
                                    "run_count": {
                                        "type": "integer",
                                        "title": "Run Count",
                                        "description": "The number of times the flow run was executed.",
                                        "default": 0
                                    },
                                    "expected_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Expected Start Time",
                                        "description": "The flow run's expected start time."
                                    },
                                    "next_scheduled_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Scheduled Start Time",
                                        "description": "The next time the flow run is scheduled to start."
                                    },
                                    "start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Start Time",
                                        "description": "The actual start time."
                                    },
                                    "end_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "End Time",
                                        "description": "The actual end time."
                                    },
                                    "total_run_time": {
                                        "type": "number",
                                        "title": "Total Run Time",
                                        "description": "Total run time. If the flow run was executed multiple times, the time of each run will be summed.",
                                        "default": 0.0
                                    },
                                    "estimated_run_time": {
                                        "type": "number",
                                        "title": "Estimated Run Time",
                                        "description": "A real-time estimate of the total run time.",
                                        "default": 0.0
                                    },
                                    "estimated_start_time_delta": {
                                        "type": "number",
                                        "title": "Estimated Start Time Delta",
                                        "description": "The difference between actual and expected start time.",
                                        "default": 0.0
                                    },
                                    "auto_scheduled": {
                                        "type": "boolean",
                                        "title": "Auto Scheduled",
                                        "description": "Whether or not the flow run was automatically scheduled.",
                                        "default": false
                                    },
                                    "infrastructure_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Document Id",
                                        "description": "The block document defining infrastructure to use this flow run."
                                    },
                                    "infrastructure_pid": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Pid",
                                        "description": "The id of the flow run as returned by an infrastructure block."
                                    },
                                    "created_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/CreatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the creator of this flow run."
                                    },
                                    "work_pool_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Id",
                                        "description": "The id of the flow run's work pool."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the flow run's work pool.",
                                        "examples": [
                                            "my-work-pool"
                                        ]
                                    },
                                    "state": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/State"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The current state of the flow run."
                                    },
                                    "job_variables": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Job Variables",
                                        "description": "Variables used as overrides in the base job template"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "flow_id"
                                ],
                                "title": "FlowRunResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "state": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/StateCreate"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "The state of the flow run to create"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the flow run. Defaults to a random slug if not specified.",
                                    "examples": [
                                        "my-flow-run"
                                    ]
                                },
                                "flow_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Flow Id",
                                    "description": "The id of the flow being run."
                                },
                                "flow_version": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Flow Version",
                                    "description": "The version of the flow being run."
                                },
                                "parameters": {
                                    "type": "object",
                                    "title": "Parameters"
                                },
                                "context": {
                                    "type": "object",
                                    "title": "Context",
                                    "description": "The context of the flow run."
                                },
                                "parent_task_run_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Parent Task Run Id"
                                },
                                "infrastructure_document_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Infrastructure Document Id"
                                },
                                "empirical_policy": {
                                    "$ref": "#/components/schemas/FlowRunPolicy",
                                    "description": "The empirical policy for the flow run."
                                },
                                "tags": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Tags",
                                    "description": "A list of tags for the flow run.",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                    "examples": [
                                        {
                                            "key": "value1",
                                            "key2": 42
                                        }
                                    ]
                                },
                                "idempotency_key": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Idempotency Key",
                                    "description": "An optional idempotency key. If a flow run with the same idempotency key has already been created, the existing flow run will be returned."
                                },
                                "work_pool_name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Work Pool Name",
                                    "description": "The name of the work pool to run the flow run in."
                                },
                                "work_queue_name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Work Queue Name",
                                    "description": "The name of the work queue to place the flow run in."
                                },
                                "job_variables": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Job Variables",
                                    "description": "The job variables to use when setting up flow run infrastructure."
                                },
                                "deployment_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Deployment Id",
                                    "description": "DEPRECATED: The id of the deployment associated with this flow run, if available.",
                                    "deprecated": true
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "flow_id"
                            ],
                            "title": "FlowRunCreate",
                            "description": "Data used by the Orion API to create a flow run."
                        }
                    }
                }
            },
            "description": "Create a flow run. If a flow run with the same flow_id and\nidempotency key already exists, the existing flow run will be returned.\n\nIf no state is provided, the flow run will be created in a PENDING state.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "create_flow_run_api_accounts__account_id__workspaces__workspace_id__flow_runs__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FlowRunResponse"
                                },
                                "title": "Response Read Flow Runs Api Accounts  Account Id  Workspaces  Workspace Id  Flow Runs Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/FlowRunSort",
                                    "default": "ID_DESC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_flow_runs_api_accounts__account_id__workspaces__workspace_id__flow_runs_filter_post"
                        }
                    }
                }
            },
            "description": "Query for flow runs.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "read_flow_runs_api_accounts__account_id__workspaces__workspace_id__flow_runs_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/filter-minimal",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MinimalFlowRun"
                                },
                                "title": "Response Read Flow Runs Minimal Api Accounts  Account Id  Workspaces  Workspace Id  Flow Runs Filter Minimal Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/FlowRunSort",
                                    "default": "ID_DESC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_flow_runs_minimal_api_accounts__account_id__workspaces__workspace_id__flow_runs_filter_minimal_post"
                        }
                    }
                }
            },
            "description": "A flow runs filter that excludes full state data -- and possibly other\ndata in the future -- for improved performance.\n\nNote that the state name, state type, and state ID are all still available.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "read_flow_runs_minimal_api_accounts__account_id__workspaces__workspace_id__flow_runs_filter_minimal_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name"
                                },
                                "flow_version": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Flow Version"
                                },
                                "parameters": {
                                    "type": "object",
                                    "title": "Parameters"
                                },
                                "empirical_policy": {
                                    "$ref": "#/components/schemas/FlowRunPolicy"
                                },
                                "tags": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Tags"
                                },
                                "infrastructure_pid": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Infrastructure Pid"
                                },
                                "job_variables": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Job Variables"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "FlowRunUpdate",
                            "description": "Data used by the Orion API to update a flow run."
                        }
                    }
                }
            },
            "description": "Updates a flow run.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "update_flow_run_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a flow run by id.\n\nRequired workspace scopes: `manage_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "delete_flow_run_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Flow Runs Api Accounts  Account Id  Workspaces  Workspace Id  Flow Runs Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_flow_runs_api_accounts__account_id__workspaces__workspace_id__flow_runs_count_post"
                        }
                    }
                }
            },
            "description": "Query for flow runs.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "count_flow_runs_api_accounts__account_id__workspaces__workspace_id__flow_runs_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/lateness",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Response Average Flow Run Lateness Api Accounts  Account Id  Workspaces  Workspace Id  Flow Runs Lateness Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_average_flow_run_lateness_api_accounts__account_id__workspaces__workspace_id__flow_runs_lateness_post"
                        }
                    }
                }
            },
            "description": "Query for average flow-run lateness in seconds.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "average_flow_run_lateness_api_accounts__account_id__workspaces__workspace_id__flow_runs_lateness_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/history",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HistoryResponse"
                                },
                                "title": "Response Flow Run History Api Accounts  Account Id  Workspaces  Workspace Id  Flow Runs History Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "history_start": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "History Start",
                                    "description": "The history's start time."
                                },
                                "history_end": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "History End",
                                    "description": "The history's end time."
                                },
                                "history_interval": {
                                    "type": "number",
                                    "format": "time-delta",
                                    "title": "History Interval",
                                    "description": "The size of each history interval, in seconds. Must be at least 1 second."
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "required": [
                                "history_start",
                                "history_end",
                                "history_interval"
                            ],
                            "title": "Body_flow_run_history_api_accounts__account_id__workspaces__workspace_id__flow_runs_history_post"
                        }
                    }
                }
            },
            "description": "Query for flow run history data across a given range and interval.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "flow_run_history_api_accounts__account_id__workspaces__workspace_id__flow_runs_history_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/resume",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "state": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/State"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/SetStateStatus"
                                    },
                                    "details": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/StateAcceptDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateWaitDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateRejectDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateAbortDetails"
                                            }
                                        ],
                                        "title": "Details"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "state",
                                    "status",
                                    "details"
                                ],
                                "title": "OrchestrationResult",
                                "description": "A container for the output of state orchestration."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "run_input": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Run Input"
                                }
                            },
                            "type": "object",
                            "title": "Body_resume_flow_run_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__resume_post"
                        }
                    }
                }
            },
            "description": "Resume a paused flow run.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "resume_flow_run_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__resume_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/set_state",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "state": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/State"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/SetStateStatus"
                                    },
                                    "details": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/StateAcceptDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateWaitDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateRejectDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateAbortDetails"
                                            }
                                        ],
                                        "title": "Details"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "state",
                                    "status",
                                    "details"
                                ],
                                "title": "OrchestrationResult",
                                "description": "A container for the output of state orchestration."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "state": {
                                    "$ref": "#/components/schemas/StateCreate",
                                    "description": "The intended state."
                                },
                                "force": {
                                    "type": "boolean",
                                    "title": "Force",
                                    "description": "If false, orchestration rules will be applied that may alter or prevent the state transition. If True, orchestration rules are not applied.",
                                    "default": false
                                },
                                "emit_event": {
                                    "type": "boolean",
                                    "title": "Emit Event",
                                    "description": "If False, the state change will not be emitted as an event server side, expecting the client to do so instead. If True, the state change will be emitted as an event.",
                                    "default": true
                                }
                            },
                            "type": "object",
                            "required": [
                                "state"
                            ],
                            "title": "Body_set_flow_run_state_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__set_state_post"
                        }
                    }
                }
            },
            "description": "Set a flow run state, invoking any orchestration rules.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "set_flow_run_state_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__set_state_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/input",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "title": "Key",
                                    "description": "The input key"
                                },
                                "value": {
                                    "type": "string",
                                    "maxLength": 500000,
                                    "format": "binary",
                                    "title": "Value",
                                    "description": "The value of the input"
                                },
                                "sender": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Sender",
                                    "description": "The sender of the input"
                                }
                            },
                            "type": "object",
                            "required": [
                                "key",
                                "value"
                            ],
                            "title": "Body_create_flow_run_input_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__input_post"
                        }
                    }
                }
            },
            "description": "Create a key/value input for a flow run.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "create_flow_run_input_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__input_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/input/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FlowRunInput"
                                },
                                "title": "Response Filter Flow Run Input Api Accounts  Account Id  Workspaces  Workspace Id  Flow Runs  Id  Input Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "prefix": {
                                    "type": "string",
                                    "title": "Prefix",
                                    "description": "The input key prefix"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "The maximum number of results to return",
                                    "default": 1
                                },
                                "exclude_keys": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Exclude Keys",
                                    "description": "Exclude inputs with these keys",
                                    "default": []
                                }
                            },
                            "type": "object",
                            "required": [
                                "prefix"
                            ],
                            "title": "Body_filter_flow_run_input_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__input_filter_post"
                        }
                    }
                }
            },
            "description": "Filter flow run inputs by key prefix\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "filter_flow_run_input_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__input_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/input/{key}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "key",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The input key",
                        "title": "Key"
                    },
                    "description": "The input key"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a flow run input\n\nRequired workspace scopes: `manage_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "delete_flow_run_input_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__input__key__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/paginate",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "results": {
                                        "items": {
                                            "$ref": "#/components/schemas/FlowRunResponse"
                                        },
                                        "type": "array",
                                        "title": "Results"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit"
                                    },
                                    "pages": {
                                        "type": "integer",
                                        "title": "Pages"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "title": "Page"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "results",
                                    "count",
                                    "limit",
                                    "pages",
                                    "page"
                                ],
                                "title": "FlowRunPaginationResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/FlowRunSort",
                                    "default": "ID_DESC"
                                },
                                "page": {
                                    "type": "integer",
                                    "minimum": 1.0,
                                    "title": "Page",
                                    "default": 1
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_paginate_flow_runs_api_accounts__account_id__workspaces__workspace_id__flow_runs_paginate_post"
                        }
                    }
                }
            },
            "description": "Pagination query for flow runs.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "paginate_flow_runs_api_accounts__account_id__workspaces__workspace_id__flow_runs_paginate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/job/config",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "The job config",
                            "title": "Config"
                        }
                    }
                }
            },
            "description": "Save the job configuration that a worker used to deploy a flow run.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "save_flow_run_job_config_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__job_config_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/flow_runs/{id}/labels",
            "method": "patch",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The flow run id",
                        "title": "Id"
                    },
                    "description": "The flow run id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "boolean"
                                    },
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "title": "Flow Run Labels"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Flow Runs"
            ],
            "operationId": "update_flow_run_labels_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__labels_patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TaskRun"
                                },
                                "title": "Response Read Task Runs Api Accounts  Account Id  Workspaces  Workspace Id  Task Runs Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/TaskRunSort",
                                    "default": "ID_DESC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_task_runs_api_accounts__account_id__workspaces__workspace_id__task_runs_filter_post"
                        }
                    }
                }
            },
            "description": "Query for task runs.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "read_task_runs_api_accounts__account_id__workspaces__workspace_id__task_runs_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The task run id",
                        "title": "Id"
                    },
                    "description": "The task run id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a task run by id.\n\nRequired workspace scopes: `manage_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "delete_task_run_api_accounts__account_id__workspaces__workspace_id__task_runs__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The task run id",
                        "title": "Id"
                    },
                    "description": "The task run id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "examples": [
                                        "my-task-run"
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "TaskRunUpdate",
                            "description": "Data used by the Orion API to update a task run"
                        }
                    }
                }
            },
            "description": "Updates a task run.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "update_task_run_api_accounts__account_id__workspaces__workspace_id__task_runs__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "examples": [
                                            "my-task-run"
                                        ]
                                    },
                                    "flow_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Run Id",
                                        "description": "The flow run id of the task run."
                                    },
                                    "task_key": {
                                        "type": "string",
                                        "title": "Task Key",
                                        "description": "A unique identifier for the task being run."
                                    },
                                    "dynamic_key": {
                                        "type": "string",
                                        "title": "Dynamic Key",
                                        "description": "A dynamic key used to differentiate between multiple runs of the same task within the same flow run."
                                    },
                                    "cache_key": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Cache Key",
                                        "description": "An optional cache key. If a COMPLETED state associated with this cache key is found, the cached COMPLETED state will be used instead of executing the task run."
                                    },
                                    "cache_expiration": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Cache Expiration",
                                        "description": "Specifies when the cached state should expire."
                                    },
                                    "task_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Task Version",
                                        "description": "The version of the task being run."
                                    },
                                    "empirical_policy": {
                                        "$ref": "#/components/schemas/TaskRunPolicy"
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags for the task run.",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    },
                                    "state_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Id",
                                        "description": "The id of the current task run state."
                                    },
                                    "task_inputs": {
                                        "additionalProperties": {
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "$ref": "#/components/schemas/TaskRunResult"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Parameter"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Constant"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "type": "object",
                                        "title": "Task Inputs",
                                        "description": "Tracks the source of inputs to a task run. Used for internal bookkeeping."
                                    },
                                    "state_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/StateType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The type of the current task run state."
                                    },
                                    "state_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Name",
                                        "description": "The name of the current task run state."
                                    },
                                    "run_count": {
                                        "type": "integer",
                                        "title": "Run Count",
                                        "description": "The number of times the task run has been executed.",
                                        "default": 0
                                    },
                                    "flow_run_run_count": {
                                        "type": "integer",
                                        "title": "Flow Run Run Count",
                                        "description": "If the parent flow has retried, this indicates the flow retry this run is associated with.",
                                        "default": 0
                                    },
                                    "expected_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Expected Start Time",
                                        "description": "The task run's expected start time."
                                    },
                                    "next_scheduled_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Scheduled Start Time",
                                        "description": "The next time the task run is scheduled to start."
                                    },
                                    "start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Start Time",
                                        "description": "The actual start time."
                                    },
                                    "end_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "End Time",
                                        "description": "The actual end time."
                                    },
                                    "total_run_time": {
                                        "type": "number",
                                        "title": "Total Run Time",
                                        "description": "Total run time. If the task run was executed multiple times, the time of each run will be summed.",
                                        "default": 0.0
                                    },
                                    "estimated_run_time": {
                                        "type": "number",
                                        "title": "Estimated Run Time",
                                        "description": "A real-time estimate of total run time.",
                                        "default": 0.0
                                    },
                                    "estimated_start_time_delta": {
                                        "type": "number",
                                        "title": "Estimated Start Time Delta",
                                        "description": "The difference between actual and expected start time.",
                                        "default": 0.0
                                    },
                                    "state": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/State"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The current task run state."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "task_key",
                                    "dynamic_key"
                                ],
                                "title": "TaskRun",
                                "description": "An ORM representation of task run data."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Id",
                                    "description": "The ID to use for the task run. If not provided, a random UUID will be generated."
                                },
                                "state": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/StateCreate"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "The state of the task run to create"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "examples": [
                                        "my-task-run"
                                    ]
                                },
                                "flow_run_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Flow Run Id",
                                    "description": "The flow run id of the task run."
                                },
                                "task_key": {
                                    "type": "string",
                                    "title": "Task Key",
                                    "description": "A unique identifier for the task being run."
                                },
                                "dynamic_key": {
                                    "type": "string",
                                    "title": "Dynamic Key",
                                    "description": "A dynamic key used to differentiate between multiple runs of the same task within the same flow run."
                                },
                                "cache_key": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Cache Key",
                                    "description": "An optional cache key. If a COMPLETED state associated with this cache key is found, the cached COMPLETED state will be used instead of executing the task run."
                                },
                                "cache_expiration": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Cache Expiration",
                                    "description": "Specifies when the cached state should expire."
                                },
                                "task_version": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Task Version",
                                    "description": "The version of the task being run."
                                },
                                "empirical_policy": {
                                    "$ref": "#/components/schemas/TaskRunPolicy"
                                },
                                "tags": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Tags",
                                    "description": "A list of tags for the task run.",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                    "examples": [
                                        {
                                            "key": "value1",
                                            "key2": 42
                                        }
                                    ]
                                },
                                "task_inputs": {
                                    "additionalProperties": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/TaskRunResult"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/Parameter"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/Constant"
                                                }
                                            ]
                                        },
                                        "type": "array"
                                    },
                                    "type": "object",
                                    "title": "Task Inputs",
                                    "description": "The inputs to the task run."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "task_key",
                                "dynamic_key"
                            ],
                            "title": "TaskRunCreate",
                            "description": "Data used by the Orion API to create a task run"
                        }
                    }
                }
            },
            "description": "Create a task run. If a task run with the same flow_run_id,\ntask_key, and dynamic_key already exists, the existing task\nrun will be returned.\nIf no state is provided, the task run will be created in a PENDING state.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "create_task_run_api_accounts__account_id__workspaces__workspace_id__task_runs__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Task Runs Api Accounts  Account Id  Workspaces  Workspace Id  Task Runs Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_task_runs_api_accounts__account_id__workspaces__workspace_id__task_runs_count_post"
                        }
                    }
                }
            },
            "description": "Count task runs.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "count_task_runs_api_accounts__account_id__workspaces__workspace_id__task_runs_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/history",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HistoryResponse"
                                },
                                "title": "Response Task Run History Api Accounts  Account Id  Workspaces  Workspace Id  Task Runs History Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "history_start": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "History Start",
                                    "description": "The history's start time."
                                },
                                "history_end": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "History End",
                                    "description": "The history's end time."
                                },
                                "history_interval": {
                                    "type": "number",
                                    "format": "time-delta",
                                    "title": "History Interval",
                                    "description": "The size of each history interval, in seconds. Must be at least 1 second."
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "required": [
                                "history_start",
                                "history_end",
                                "history_interval"
                            ],
                            "title": "Body_task_run_history_api_accounts__account_id__workspaces__workspace_id__task_runs_history_post"
                        }
                    }
                }
            },
            "description": "Query for task run history data across a given range and interval.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "task_run_history_api_accounts__account_id__workspaces__workspace_id__task_runs_history_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/{id}/set_state",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The task run id",
                        "title": "Id"
                    },
                    "description": "The task run id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "state": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/State"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/SetStateStatus"
                                    },
                                    "details": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/StateAcceptDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateWaitDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateRejectDetails"
                                            },
                                            {
                                                "$ref": "#/components/schemas/StateAbortDetails"
                                            }
                                        ],
                                        "title": "Details"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "state",
                                    "status",
                                    "details"
                                ],
                                "title": "OrchestrationResult",
                                "description": "A container for the output of state orchestration."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "state": {
                                    "$ref": "#/components/schemas/StateCreate",
                                    "description": "The intended state."
                                },
                                "force": {
                                    "type": "boolean",
                                    "title": "Force",
                                    "description": "If false, orchestration rules will be applied that may alter or prevent the state transition. If True, orchestration rules are not applied.",
                                    "default": false
                                }
                            },
                            "type": "object",
                            "required": [
                                "state"
                            ],
                            "title": "Body_set_task_run_state_api_accounts__account_id__workspaces__workspace_id__task_runs__id__set_state_post"
                        }
                    }
                }
            },
            "description": "Set a task run state, invoking any orchestration rules.\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "set_task_run_state_api_accounts__account_id__workspaces__workspace_id__task_runs__id__set_state_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_runs/paginate",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "results": {
                                        "items": {
                                            "$ref": "#/components/schemas/TaskRun"
                                        },
                                        "type": "array",
                                        "title": "Results"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit"
                                    },
                                    "pages": {
                                        "type": "integer",
                                        "title": "Pages"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "title": "Page"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "results",
                                    "count",
                                    "limit",
                                    "pages",
                                    "page"
                                ],
                                "title": "TaskRunPaginationResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/TaskRunSort",
                                    "default": "ID_DESC"
                                },
                                "page": {
                                    "type": "integer",
                                    "minimum": 1.0,
                                    "title": "Page",
                                    "default": 1
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_paginate_task_runs_api_accounts__account_id__workspaces__workspace_id__task_runs_paginate_post"
                        }
                    }
                }
            },
            "description": "Pagination query for task runs.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Runs"
            ],
            "operationId": "paginate_task_runs_api_accounts__account_id__workspaces__workspace_id__task_runs_paginate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/task_workers/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TaskWorkerResponse"
                                },
                                "title": "Response Read Task Workers Api Accounts  Account Id  Workspaces  Workspace Id  Task Workers Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "task_worker_filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskWorkerFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "The task worker filter"
                                }
                            },
                            "type": "object",
                            "title": "Body_read_task_workers_api_accounts__account_id__workspaces__workspace_id__task_workers_filter_post"
                        }
                    }
                }
            },
            "description": "Read task workers for a workspace. Optionally filter by task keys.\n\nRequired workspace scopes: `see_workers`",
            "tags": [
                "Task Workers"
            ],
            "operationId": "read_task_workers_api_accounts__account_id__workspaces__workspace_id__task_workers_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "infra_overrides": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infra Overrides",
                                        "description": "Deprecated field. Use `job_variables` instead."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the deployment."
                                    },
                                    "version_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Version Id",
                                        "description": "The ID of the default version of this deployment"
                                    },
                                    "version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Version",
                                        "description": "An optional version for the deployment."
                                    },
                                    "version_info": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/VersionInfo"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Information about the version of the deployment."
                                    },
                                    "branch": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Branch",
                                        "description": "The branch that this deployment belongs to."
                                    },
                                    "root": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Root",
                                        "description": "The deployment id of the root deployment when following the chain of deployments from base."
                                    },
                                    "base": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Base",
                                        "description": "The id of the deployment that this deployment branched from"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A description for the deployment."
                                    },
                                    "flow_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Flow Id",
                                        "description": "The flow id associated with the deployment."
                                    },
                                    "schedule": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/IntervalSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/CronSchedule"
                                            },
                                            {
                                                "$ref": "#/components/schemas/RRuleSchedule"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Schedule",
                                        "description": "A schedule for the deployment."
                                    },
                                    "is_schedule_active": {
                                        "type": "boolean",
                                        "title": "Is Schedule Active",
                                        "description": "Whether or not the deployment schedule is active.",
                                        "default": true
                                    },
                                    "paused": {
                                        "type": "boolean",
                                        "title": "Paused",
                                        "description": "Whether or not the deployment is paused.",
                                        "default": false
                                    },
                                    "disabled": {
                                        "type": "boolean",
                                        "title": "Disabled",
                                        "description": "Whether or not the deployment is disabled.",
                                        "default": false
                                    },
                                    "schedules": {
                                        "items": {
                                            "$ref": "#/components/schemas/DeploymentSchedule"
                                        },
                                        "type": "array",
                                        "title": "Schedules",
                                        "description": "A list of schedules for the deployment."
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "DEPRECATED: Prefer `global_concurrency_limit`. Will always be None for backwards compatibility. Will be removed after December 2024.",
                                        "deprecated": true
                                    },
                                    "global_concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/GlobalConcurrencyLimitResponse"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The global concurrency limit object for enforcing the maximum number of flow runs that can be active at once."
                                    },
                                    "concurrency_options": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/ConcurrencyOptions"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Options for configuring deployment concurrency."
                                    },
                                    "job_variables": {
                                        "type": "object",
                                        "title": "Job Variables",
                                        "description": "Overrides to apply to the base infrastructure block at runtime."
                                    },
                                    "parameters": {
                                        "type": "object",
                                        "title": "Parameters",
                                        "description": "Parameters for flow runs scheduled by the deployment."
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags for the deployment",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    },
                                    "work_queue_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Name",
                                        "description": "The work queue for the deployment. If no work queue is set, work will not be scheduled."
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time the deployment was polled for status updates."
                                    },
                                    "parameter_openapi_schema": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Parameter Openapi Schema",
                                        "description": "The parameter schema of the flow, including defaults."
                                    },
                                    "path": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Path",
                                        "description": "The path to the working directory for the workflow, relative to remote storage or an absolute path."
                                    },
                                    "pull_steps": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Pull Steps",
                                        "description": "Pull steps for cloning and running this deployment."
                                    },
                                    "entrypoint": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Entrypoint",
                                        "description": "The path to the entrypoint for the workflow, relative to the `path`."
                                    },
                                    "manifest_path": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Manifest Path",
                                        "description": "The path to the flow's manifest file, relative to the chosen storage."
                                    },
                                    "storage_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Storage Document Id",
                                        "description": "The block document defining storage used for this flow."
                                    },
                                    "infrastructure_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Document Id",
                                        "description": "The block document defining infrastructure to use for flow runs."
                                    },
                                    "created_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/CreatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the creator of this deployment."
                                    },
                                    "updated_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/UpdatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the updater of this deployment."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the deployment's work pool."
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DeploymentStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Whether the deployment is ready to run flows.",
                                        "default": "NOT_READY"
                                    },
                                    "enforce_parameter_schema": {
                                        "type": "boolean",
                                        "title": "Enforce Parameter Schema",
                                        "description": "Whether or not the deployment should enforce the parameter schema.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "flow_id"
                                ],
                                "title": "DeploymentResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "infra_overrides": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Infra Overrides",
                                    "description": "Deprecated field. Use `job_variables` instead."
                                },
                                "name": {
                                    "type": "string",
                                    "pattern": "^[^/%&><]+$",
                                    "title": "Name",
                                    "description": "The name of the deployment.",
                                    "examples": [
                                        "my-deployment"
                                    ]
                                },
                                "branch": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Branch"
                                },
                                "base": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Base"
                                },
                                "root": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Root"
                                },
                                "version": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Version"
                                },
                                "version_info": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/VersionInfo"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Flow Id",
                                    "description": "The ID of the flow associated with the deployment."
                                },
                                "is_schedule_active": {
                                    "type": "boolean",
                                    "title": "Is Schedule Active",
                                    "description": "Whether the schedule is active.",
                                    "default": true
                                },
                                "paused": {
                                    "type": "boolean",
                                    "title": "Paused",
                                    "description": "Whether or not the deployment is paused.",
                                    "default": false
                                },
                                "disabled": {
                                    "type": "boolean",
                                    "title": "Disabled",
                                    "description": "Whether or not the deployment is disabled.",
                                    "default": false
                                },
                                "schedules": {
                                    "items": {
                                        "$ref": "#/components/schemas/DeploymentScheduleCreate"
                                    },
                                    "type": "array",
                                    "title": "Schedules",
                                    "description": "A list of schedules for the deployment."
                                },
                                "concurrency_limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Concurrency Limit",
                                    "description": "The deployment's concurrency limit."
                                },
                                "concurrency_options": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ConcurrencyOptions"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Options for configuring deployment concurrency."
                                },
                                "global_concurrency_limit_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Global Concurrency Limit Id",
                                    "description": "The ID of the global concurrency limit to apply to the deployment."
                                },
                                "enforce_parameter_schema": {
                                    "type": "boolean",
                                    "title": "Enforce Parameter Schema",
                                    "description": "Whether or not the deployment should enforce the parameter schema.",
                                    "default": false
                                },
                                "parameter_openapi_schema": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Parameter Openapi Schema",
                                    "description": "The parameter schema of the flow, including defaults."
                                },
                                "parameters": {
                                    "type": "object",
                                    "title": "Parameters",
                                    "description": "Parameters for flow runs scheduled by the deployment."
                                },
                                "tags": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Tags",
                                    "description": "A list of deployment tags.",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                    "examples": [
                                        {
                                            "key": "value1",
                                            "key2": 42
                                        }
                                    ]
                                },
                                "pull_steps": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Pull Steps"
                                },
                                "manifest_path": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Manifest Path"
                                },
                                "work_queue_name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Work Queue Name"
                                },
                                "work_pool_name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Work Pool Name",
                                    "description": "The name of the deployment's work pool.",
                                    "examples": [
                                        "my-work-pool"
                                    ]
                                },
                                "storage_document_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Storage Document Id"
                                },
                                "infrastructure_document_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Infrastructure Document Id"
                                },
                                "schedule": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/IntervalSchedule"
                                        },
                                        {
                                            "$ref": "#/components/schemas/CronSchedule"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RRuleSchedule"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Schedule",
                                    "description": "The schedule for the deployment."
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "path": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Path"
                                },
                                "entrypoint": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Entrypoint"
                                },
                                "job_variables": {
                                    "type": "object",
                                    "title": "Job Variables",
                                    "description": "Overrides for the flow's infrastructure configuration."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "flow_id"
                            ],
                            "title": "DeploymentCreate",
                            "description": "Data used by the Orion API to create a deployment."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "create_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/branch",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "branch": {
                                    "type": "string",
                                    "title": "Branch",
                                    "description": "Name of the branch to create"
                                },
                                "options": {
                                    "$ref": "#/components/schemas/DeploymentBranchingOptions",
                                    "description": "Configuration options for how the deployment should be branched"
                                },
                                "overrides": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentUpdate"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Optional values to override in the branched deployment"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "branch"
                            ],
                            "title": "DeploymentBranch"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "branch_from_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__branch_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "infra_overrides": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Infra Overrides",
                                    "description": "Deprecated field. Use `job_variables` instead."
                                },
                                "version": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Version"
                                },
                                "version_info": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/VersionInfo"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "schedule": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/IntervalSchedule"
                                        },
                                        {
                                            "$ref": "#/components/schemas/CronSchedule"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RRuleSchedule"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Schedule",
                                    "description": "The schedule for the deployment."
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "is_schedule_active": {
                                    "type": "boolean",
                                    "title": "Is Schedule Active",
                                    "description": "Whether the schedule is active.",
                                    "default": true
                                },
                                "paused": {
                                    "type": "boolean",
                                    "title": "Paused",
                                    "description": "Whether or not the deployment is paused.",
                                    "default": false
                                },
                                "schedules": {
                                    "items": {
                                        "$ref": "#/components/schemas/DeploymentScheduleUpdate"
                                    },
                                    "type": "array",
                                    "title": "Schedules",
                                    "description": "A list of schedule updates for the deployment."
                                },
                                "concurrency_limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Concurrency Limit",
                                    "description": "The deployment's concurrency limit."
                                },
                                "concurrency_options": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ConcurrencyOptions"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "Options for configuring deployment concurrency."
                                },
                                "global_concurrency_limit_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Global Concurrency Limit Id",
                                    "description": "The ID of the global concurrency limit to apply to the deployment."
                                },
                                "parameters": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Parameters",
                                    "description": "Parameters for flow runs scheduled by the deployment."
                                },
                                "parameter_openapi_schema": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Parameter Openapi Schema",
                                    "description": "The parameter schema of the flow, including defaults."
                                },
                                "tags": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Tags",
                                    "description": "A list of deployment tags.",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                    "examples": [
                                        {
                                            "key": "value1",
                                            "key2": 42
                                        }
                                    ]
                                },
                                "pull_steps": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Pull Steps"
                                },
                                "work_queue_name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Work Queue Name"
                                },
                                "work_pool_name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Work Pool Name",
                                    "description": "The name of the deployment's work pool.",
                                    "examples": [
                                        "my-work-pool"
                                    ]
                                },
                                "path": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Path"
                                },
                                "job_variables": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Job Variables"
                                },
                                "entrypoint": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Entrypoint"
                                },
                                "manifest_path": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Manifest Path"
                                },
                                "storage_document_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Storage Document Id"
                                },
                                "infrastructure_document_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Infrastructure Document Id"
                                },
                                "enforce_parameter_schema": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Enforce Parameter Schema",
                                    "description": "Whether or not the deployment should enforce the parameter schema."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "DeploymentUpdate",
                            "description": "Data used by the Orion API to update a deployment."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "update_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a deployment by id.\n\nRequired workspace scopes: `manage_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "delete_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeploymentResponse"
                                },
                                "title": "Response Read Deployments Api Accounts  Account Id  Workspaces  Workspace Id  Deployments Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "sort": {
                                    "$ref": "#/components/schemas/DeploymentSort",
                                    "default": "NAME_ASC"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_deployments_api_accounts__account_id__workspaces__workspace_id__deployments_filter_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "read_deployments_api_accounts__account_id__workspaces__workspace_id__deployments_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/paginate",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "results": {
                                        "items": {
                                            "$ref": "#/components/schemas/DeploymentResponse"
                                        },
                                        "type": "array",
                                        "title": "Results"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit"
                                    },
                                    "pages": {
                                        "type": "integer",
                                        "title": "Pages"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "title": "Page"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "results",
                                    "count",
                                    "limit",
                                    "pages",
                                    "page"
                                ],
                                "title": "DeploymentPaginationResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "minimum": 1.0,
                                    "title": "Page",
                                    "default": 1
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "sort": {
                                    "$ref": "#/components/schemas/DeploymentSort",
                                    "default": "NAME_ASC"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_paginate_deployments_api_accounts__account_id__workspaces__workspace_id__deployments_paginate_post"
                        }
                    }
                }
            },
            "description": "Pagination query for deployments.\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "paginate_deployments_api_accounts__account_id__workspaces__workspace_id__deployments_paginate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/get_scheduled_flow_runs",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FlowRunResponse"
                                },
                                "title": "Response Get Scheduled Flow Runs For Deployments Api Accounts  Account Id  Workspaces  Workspace Id  Deployments Get Scheduled Flow Runs Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "deployment_ids": {
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "type": "array",
                                    "title": "Deployment Ids",
                                    "description": "The deployment IDs to get scheduled runs for"
                                },
                                "scheduled_before": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Scheduled Before",
                                    "description": "The maximum time to look for scheduled flow runs"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "required": [
                                "deployment_ids"
                            ],
                            "title": "Body_get_scheduled_flow_runs_for_deployments_api_accounts__account_id__workspaces__workspace_id__deployments_get_scheduled_flow_runs_post"
                        }
                    }
                }
            },
            "description": "Get scheduled runs for a set of deployments. Used by a runner to poll for work.\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "get_scheduled_flow_runs_for_deployments_api_accounts__account_id__workspaces__workspace_id__deployments_get_scheduled_flow_runs_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Deployments Api Accounts  Account Id  Workspaces  Workspace Id  Deployments Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_deployments_api_accounts__account_id__workspaces__workspace_id__deployments_count_post"
                        }
                    }
                }
            },
            "description": "Count deployments.\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "count_deployments_api_accounts__account_id__workspaces__workspace_id__deployments_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/schedule",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "start_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Start Time",
                                    "description": "The earliest date to schedule"
                                },
                                "end_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "End Time",
                                    "description": "The latest date to schedule"
                                },
                                "min_time": {
                                    "type": "number",
                                    "format": "time-delta",
                                    "title": "Min Time",
                                    "description": "Runs will be scheduled until at least this long after the `start_time`"
                                },
                                "min_runs": {
                                    "type": "integer",
                                    "title": "Min Runs",
                                    "description": "The minimum number of runs to schedule"
                                },
                                "max_runs": {
                                    "type": "integer",
                                    "title": "Max Runs",
                                    "description": "The maximum number of runs to schedule"
                                }
                            },
                            "type": "object",
                            "title": "Body_schedule_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__schedule_post"
                        }
                    }
                }
            },
            "description": "Schedule runs for a deployment. For backfills, provide start/end times in the past.\n\nThis function will generate the minimum number of runs that satisfy the min\nand max times, and the min and max counts. Specifically, the following order\nwill be respected.\n\n    - Runs will be generated starting on or after the `start_time`\n    - No more than `max_runs` runs will be generated\n    - No runs will be generated after `end_time` is reached\n    - At least `min_runs` runs will be generated\n    - Runs will be generated until at least `start_time + min_time` is reached\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "schedule_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__schedule_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/resume_deployment",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Resume the deployment. Runs will be scheduled immediately.\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "resume_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__resume_deployment_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/set_schedule_active",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Resume the deployment. Runs will be scheduled immediately.\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "resume_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__set_schedule_active_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/pause_deployment",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Set a deployment schedule to inactive. Any auto-scheduled runs still in a Scheduled\nstate will be deleted.\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "pause_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__pause_deployment_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/set_schedule_inactive",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Set a deployment schedule to inactive. Any auto-scheduled runs still in a Scheduled\nstate will be deleted.\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "pause_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__set_schedule_inactive_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/create_flow_run",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the flow run. Defaults to a random slug if not specified.",
                                        "examples": [
                                            "my-flow-run"
                                        ]
                                    },
                                    "flow_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Flow Id",
                                        "description": "The id of the flow being run."
                                    },
                                    "flow_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Name",
                                        "description": "The name of the flow being run."
                                    },
                                    "flow_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Flow Version",
                                        "description": "The version of the flow executed in this flow run.",
                                        "examples": [
                                            "1.0"
                                        ]
                                    },
                                    "state_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Id",
                                        "description": "The id of the flow run's current state."
                                    },
                                    "deployment_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Id",
                                        "description": "The deployment associated with this flow run"
                                    },
                                    "deployment_version_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Version Id",
                                        "description": "The deployment version associated with this flow run."
                                    },
                                    "deployment_version_info": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/VersionInfo"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The version info of the deployment associated with this flow run."
                                    },
                                    "deployment_version": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Deployment Version",
                                        "description": "The version of the deployment associated with this flow run.",
                                        "examples": [
                                            "1.0"
                                        ]
                                    },
                                    "work_queue_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Id",
                                        "description": "The id of the run's work pool queue."
                                    },
                                    "work_queue_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Queue Name",
                                        "description": "The work queue that handled this flow run."
                                    },
                                    "parameters": {
                                        "type": "object",
                                        "title": "Parameters",
                                        "description": "Parameters for the flow run."
                                    },
                                    "idempotency_key": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Idempotency Key",
                                        "description": "An optional idempotency key for the flow run. Used to ensure the same flow run is not created multiple times."
                                    },
                                    "context": {
                                        "type": "object",
                                        "title": "Context",
                                        "description": "Additional context for the flow run.",
                                        "examples": [
                                            {
                                                "my_var": "my_val"
                                            }
                                        ]
                                    },
                                    "empirical_policy": {
                                        "$ref": "#/components/schemas/FlowRunPolicy"
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of tags on the flow run",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    },
                                    "labels": {
                                        "anyOf": [
                                            {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Labels",
                                        "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                        "examples": [
                                            {
                                                "key": "value1",
                                                "key2": 42
                                            }
                                        ]
                                    },
                                    "parent_task_run_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Parent Task Run Id",
                                        "description": "If the flow run is a subflow, the id of the 'dummy' task in the parent flow used to track subflow state."
                                    },
                                    "state_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/StateType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The type of the current flow run state."
                                    },
                                    "state_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "State Name",
                                        "description": "The name of the current flow run state."
                                    },
                                    "run_count": {
                                        "type": "integer",
                                        "title": "Run Count",
                                        "description": "The number of times the flow run was executed.",
                                        "default": 0
                                    },
                                    "expected_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Expected Start Time",
                                        "description": "The flow run's expected start time."
                                    },
                                    "next_scheduled_start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Next Scheduled Start Time",
                                        "description": "The next time the flow run is scheduled to start."
                                    },
                                    "start_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Start Time",
                                        "description": "The actual start time."
                                    },
                                    "end_time": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "End Time",
                                        "description": "The actual end time."
                                    },
                                    "total_run_time": {
                                        "type": "number",
                                        "title": "Total Run Time",
                                        "description": "Total run time. If the flow run was executed multiple times, the time of each run will be summed.",
                                        "default": 0.0
                                    },
                                    "estimated_run_time": {
                                        "type": "number",
                                        "title": "Estimated Run Time",
                                        "description": "A real-time estimate of the total run time.",
                                        "default": 0.0
                                    },
                                    "estimated_start_time_delta": {
                                        "type": "number",
                                        "title": "Estimated Start Time Delta",
                                        "description": "The difference between actual and expected start time.",
                                        "default": 0.0
                                    },
                                    "auto_scheduled": {
                                        "type": "boolean",
                                        "title": "Auto Scheduled",
                                        "description": "Whether or not the flow run was automatically scheduled.",
                                        "default": false
                                    },
                                    "infrastructure_document_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Document Id",
                                        "description": "The block document defining infrastructure to use this flow run."
                                    },
                                    "infrastructure_pid": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Infrastructure Pid",
                                        "description": "The id of the flow run as returned by an infrastructure block."
                                    },
                                    "created_by": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/CreatedBy"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "Optional information about the creator of this flow run."
                                    },
                                    "work_pool_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Id",
                                        "description": "The id of the flow run's work pool."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the flow run's work pool.",
                                        "examples": [
                                            "my-work-pool"
                                        ]
                                    },
                                    "state": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/State"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The current state of the flow run."
                                    },
                                    "job_variables": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Job Variables",
                                        "description": "Variables used as overrides in the base job template"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "flow_id"
                                ],
                                "title": "FlowRunResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "state": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/StateCreate"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "The state of the flow run to create"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the flow run. Defaults to a random slug if not specified.",
                                    "examples": [
                                        "my-flow-run"
                                    ]
                                },
                                "parameters": {
                                    "type": "object",
                                    "title": "Parameters"
                                },
                                "enforce_parameter_schema": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Enforce Parameter Schema",
                                    "description": "Whether or not to enforce the parameter schema on this run."
                                },
                                "context": {
                                    "type": "object",
                                    "title": "Context"
                                },
                                "infrastructure_document_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Infrastructure Document Id"
                                },
                                "empirical_policy": {
                                    "$ref": "#/components/schemas/FlowRunPolicy",
                                    "description": "The empirical policy for the flow run."
                                },
                                "tags": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Tags",
                                    "description": "A list of tags for the flow run.",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                },
                                "labels": {
                                    "anyOf": [
                                        {
                                            "additionalProperties": {
                                                "anyOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Labels",
                                    "description": "A dictionary of key-value labels. Values can be strings, numbers, or booleans.",
                                    "examples": [
                                        {
                                            "key": "value1",
                                            "key2": 42
                                        }
                                    ]
                                },
                                "idempotency_key": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Idempotency Key",
                                    "description": "An optional idempotency key. If a flow run with the same idempotency key has already been created, the existing flow run will be returned."
                                },
                                "parent_task_run_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Parent Task Run Id"
                                },
                                "work_queue_name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Work Queue Name"
                                },
                                "job_variables": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Job Variables"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "DeploymentFlowRunCreate",
                            "description": "Data used by the Orion API to create a flow run from a deployment."
                        }
                    }
                }
            },
            "description": "Create a flow run from a deployment.\n\nAny parameters not provided will be inferred from the deployment's parameters.\nIf tags are not provided, the deployment's tags will be used.\n\nIf no state is provided, the flow run will be created in a SCHEDULED state with\na scheduled start time of NOW.\n\nRequired workspace scopes: `run_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "create_flow_run_from_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__create_flow_run_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/access",
            "method": "put",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "access_control": {
                                    "$ref": "#/components/schemas/ReplaceDeploymentAccess"
                                }
                            },
                            "type": "object",
                            "required": [
                                "access_control"
                            ],
                            "title": "Body_set_deployment_access_api_accounts__account_id__workspaces__workspace_id__deployments__id__access_put"
                        }
                    }
                }
            },
            "description": "Set access controls for a deployment.\nThe given access controls will replace any existing access controls.\n\nRequired workspace scopes: `manage_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "set_deployment_access_api_accounts__account_id__workspaces__workspace_id__deployments__id__access_put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/my-access",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "title": "Response Read Actors Deployment Access Api Accounts  Account Id  Workspaces  Workspace Id  Deployments My Access Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "deployment_ids": {
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "type": "array",
                                    "title": "Deployment Ids"
                                }
                            },
                            "type": "object",
                            "required": [
                                "deployment_ids"
                            ],
                            "title": "Body_read_actors_deployment_access_api_accounts__account_id__workspaces__workspace_id__deployments_my_access_post"
                        }
                    }
                }
            },
            "description": "Read access controls for a set of deployments and return the resolved\naccess levels for the current actor.\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "read_actors_deployment_access_api_accounts__account_id__workspaces__workspace_id__deployments_my_access_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/schedules",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeploymentScheduleResponse"
                                },
                                "title": "Response Create Deployment Schedules Api Accounts  Account Id  Workspaces  Workspace Id  Deployments  Id  Schedules Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/DeploymentScheduleCreate"
                            },
                            "description": "The schedules to create",
                            "title": "Schedules"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "create_deployment_schedules_api_accounts__account_id__workspaces__workspace_id__deployments__id__schedules_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/schedules/{schedule_id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "schedule_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The schedule id",
                        "title": "Schedule Id"
                    },
                    "description": "The schedule id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "active": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Active",
                                    "description": "Whether or not the schedule is active."
                                },
                                "schedule": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/IntervalSchedule"
                                        },
                                        {
                                            "$ref": "#/components/schemas/CronSchedule"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RRuleSchedule"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Schedule",
                                    "description": "The schedule for the deployment."
                                },
                                "max_active_runs": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Max Active Runs",
                                    "description": "The maximum number of active runs for the schedule."
                                },
                                "max_scheduled_runs": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Max Scheduled Runs",
                                    "description": "The maximum number of scheduled runs for the schedule."
                                },
                                "catchup": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Catchup",
                                    "description": "Whether or not a worker should catch up on Late runs for the schedule."
                                },
                                "parameters": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Parameters",
                                    "description": "Parameters for the schedule."
                                },
                                "slug": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Slug",
                                    "description": "A unique slug for the schedule."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "DeploymentScheduleUpdate"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "update_deployment_schedule_api_accounts__account_id__workspaces__workspace_id__deployments__id__schedules__schedule_id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/schedules/{schedule_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "schedule_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The schedule id",
                        "title": "Schedule Id"
                    },
                    "description": "The schedule id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "delete_deployment_schedule_api_accounts__account_id__workspaces__workspace_id__deployments__id__schedules__schedule_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/disable",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Set a deployment to disabled. Any auto-scheduled runs still in a Scheduled state will be deleted. No new flow runs can be created until the deployment is enabled.\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "disable_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__disable_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/enable",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Resume the deployment. Runs will be scheduled immediately.\n\nRequired workspace scopes: `write_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "enable_deployment_api_accounts__account_id__workspaces__workspace_id__deployments__id__enable_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/versions/paginate",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "results": {
                                        "items": {
                                            "$ref": "#/components/schemas/DeploymentVersionResponse"
                                        },
                                        "type": "array",
                                        "title": "Results"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit"
                                    },
                                    "pages": {
                                        "type": "integer",
                                        "title": "Pages"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "title": "Page"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "results",
                                    "count",
                                    "limit",
                                    "pages",
                                    "page"
                                ],
                                "title": "DeploymentVersionPaginationResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "minimum": 1.0,
                                    "title": "Page",
                                    "default": 1
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_paginate_deployment_versions_api_accounts__account_id__workspaces__workspace_id__deployments__id__versions_paginate_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "paginate_deployment_versions_api_accounts__account_id__workspaces__workspace_id__deployments__id__versions_paginate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/versions/{version_id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "version_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The version id",
                        "title": "Version Id"
                    },
                    "description": "The version id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "delete_deployment_version_api_accounts__account_id__workspaces__workspace_id__deployments__id__versions__version_id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/deployments/{id}/versions/{version_id}/promote",
            "method": "post",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The deployment id",
                        "title": "Id"
                    },
                    "description": "The deployment id"
                },
                {
                    "name": "version_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The version id",
                        "title": "Version Id"
                    },
                    "description": "The version id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean",
                                "title": "Response Promote Deployment Version Api Accounts  Account Id  Workspaces  Workspace Id  Deployments  Id  Versions  Version Id  Promote Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "reason": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Reason"
                                }
                            },
                            "type": "object",
                            "title": "Body_promote_deployment_version_api_accounts__account_id__workspaces__workspace_id__deployments__id__versions__version_id__promote_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_deployments`",
            "tags": [
                "Deployments"
            ],
            "operationId": "promote_deployment_version_api_accounts__account_id__workspaces__workspace_id__deployments__id__versions__version_id__promote_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/saved_searches/",
            "method": "put",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "The name of the saved search."
                                    },
                                    "filters": {
                                        "items": {
                                            "$ref": "#/components/schemas/SavedSearchFilter"
                                        },
                                        "type": "array",
                                        "title": "Filters",
                                        "description": "The filter set for the saved search."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "SavedSearch",
                                "description": "An ORM representation of saved search data. Represents a set of filter criteria."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The name of the saved search."
                                },
                                "filters": {
                                    "items": {
                                        "$ref": "#/components/schemas/SavedSearchFilter"
                                    },
                                    "type": "array",
                                    "title": "Filters",
                                    "description": "The filter set for the saved search."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "SavedSearchCreate",
                            "description": "Data used by the Orion API to create a saved search."
                        }
                    }
                }
            },
            "description": "Gracefully creates a new saved search from the provided schema.\n\nIf a saved search with the same name already exists, the saved search's fields are\nreplaced.\n\nRequired workspace scopes: `manage_saved_search`",
            "tags": [
                "SavedSearches"
            ],
            "operationId": "create_saved_search_api_accounts__account_id__workspaces__workspace_id__saved_searches__put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/saved_searches/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The saved search id",
                        "title": "Id"
                    },
                    "description": "The saved search id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a saved search by id.\n\nRequired workspace scopes: `manage_saved_search`",
            "tags": [
                "SavedSearches"
            ],
            "operationId": "delete_saved_search_api_accounts__account_id__workspaces__workspace_id__saved_searches__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/saved_searches/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SavedSearch"
                                },
                                "title": "Response Read Saved Searches Api Accounts  Account Id  Workspaces  Workspace Id  Saved Searches Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_saved_searches_api_accounts__account_id__workspaces__workspace_id__saved_searches_filter_post"
                        }
                    }
                }
            },
            "description": "Query for saved searches.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "SavedSearches"
            ],
            "operationId": "read_saved_searches_api_accounts__account_id__workspaces__workspace_id__saved_searches_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "title": "Tag",
                                        "description": "A tag the concurrency limit is applied to."
                                    },
                                    "concurrency_limit": {
                                        "type": "integer",
                                        "title": "Concurrency Limit",
                                        "description": "The concurrency limit."
                                    },
                                    "active_slots": {
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "type": "array",
                                        "title": "Active Slots",
                                        "description": "A list of active run ids using a concurrency slot"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "tag",
                                    "concurrency_limit"
                                ],
                                "title": "ConcurrencyLimit",
                                "description": "An ORM representation of a concurrency limit."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "title": "Tag",
                                    "description": "A tag the concurrency limit is applied to."
                                },
                                "concurrency_limit": {
                                    "type": "integer",
                                    "title": "Concurrency Limit",
                                    "description": "The concurrency limit."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "tag",
                                "concurrency_limit"
                            ],
                            "title": "ConcurrencyLimitCreate",
                            "description": "Data used by the Orion API to create a concurrency limit."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "create_concurrency_limit_api_accounts__account_id__workspaces__workspace_id__concurrency_limits__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The concurrency limit id",
                        "title": "Id"
                    },
                    "description": "The concurrency limit id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "delete_concurrency_limit_api_accounts__account_id__workspaces__workspace_id__concurrency_limits__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/tag/{tag}",
            "method": "delete",
            "parameters": [
                {
                    "name": "tag",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The tag name",
                        "title": "Tag"
                    },
                    "description": "The tag name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "delete_concurrency_limit_by_tag_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_tag__tag__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ConcurrencyLimit"
                                },
                                "title": "Response Read Concurrency Limits Api Accounts  Account Id  Workspaces  Workspace Id  Concurrency Limits Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_concurrency_limits_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_filter_post"
                        }
                    }
                }
            },
            "description": "Query for concurrency limits.\n\nFor each concurrency limit the `active slots` field contains a list of TaskRun IDs\ncurrently using a concurrency slot for the specified tag.\n\nRequired workspace scopes: `see_concurrency_limits`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "read_concurrency_limits_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/tag/{tag}/reset",
            "method": "post",
            "parameters": [
                {
                    "name": "tag",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The tag name",
                        "title": "Tag"
                    },
                    "description": "The tag name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "slot_override": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Slot Override",
                                    "description": "Manual override for active concurrency limit slots."
                                }
                            },
                            "type": "object",
                            "title": "Body_reset_concurrency_limit_by_tag_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_tag__tag__reset_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "reset_concurrency_limit_by_tag_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_tag__tag__reset_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/increment",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MinimalConcurrencyLimitResponse"
                                },
                                "title": "Response Increment Concurrency Limits V1 Api Accounts  Account Id  Workspaces  Workspace Id  Concurrency Limits Increment Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "names": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Names",
                                    "description": "The tags to acquire a slot for"
                                },
                                "task_run_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Task Run Id",
                                    "description": "The ID of the task run acquiring the slot"
                                }
                            },
                            "type": "object",
                            "required": [
                                "names",
                                "task_run_id"
                            ],
                            "title": "Body_increment_concurrency_limits_v1_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_increment_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "increment_concurrency_limits_v1_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_increment_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/concurrency_limits/decrement",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MinimalConcurrencyLimitResponse"
                                },
                                "title": "Response Decrement Concurrency Limits V1 Api Accounts  Account Id  Workspaces  Workspace Id  Concurrency Limits Decrement Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "names": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Names",
                                    "description": "The tags to release a slot for"
                                },
                                "task_run_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Task Run Id",
                                    "description": "The ID of the task run releasing the slot"
                                }
                            },
                            "type": "object",
                            "required": [
                                "names",
                                "task_run_id"
                            ],
                            "title": "Body_decrement_concurrency_limits_v1_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_decrement_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `run_flows`",
            "tags": [
                "Concurrency Limits"
            ],
            "operationId": "decrement_concurrency_limits_v1_api_accounts__account_id__workspaces__workspace_id__concurrency_limits_decrement_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/v2/concurrency_limits/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "title": "Active",
                                        "description": "Whether the concurrency limit is active.",
                                        "default": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the concurrency limit."
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit",
                                        "description": "The concurrency limit."
                                    },
                                    "active_slots": {
                                        "type": "integer",
                                        "title": "Active Slots",
                                        "description": "The number of active slots.",
                                        "default": 0
                                    },
                                    "denied_slots": {
                                        "type": "integer",
                                        "title": "Denied Slots",
                                        "description": "The number of denied slots.",
                                        "default": 0
                                    },
                                    "slot_decay_per_second": {
                                        "type": "number",
                                        "title": "Slot Decay Per Second",
                                        "description": "The decay rate for active slots when used as a rate limit.",
                                        "default": 0
                                    },
                                    "avg_slot_occupancy_seconds": {
                                        "type": "number",
                                        "title": "Avg Slot Occupancy Seconds",
                                        "description": "The average amount of time a slot is occupied.",
                                        "default": 2.0
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "limit"
                                ],
                                "title": "ConcurrencyLimitV2",
                                "description": "An ORM representation of a v2 concurrency limit."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "active": {
                                    "type": "boolean",
                                    "title": "Active",
                                    "description": "Whether the concurrency limit is active.",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "pattern": "^[^/%&><]+$",
                                    "title": "Name",
                                    "description": "The name of the concurrency limit."
                                },
                                "limit": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Limit",
                                    "description": "The concurrency limit."
                                },
                                "active_slots": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Active Slots",
                                    "description": "The number of active slots.",
                                    "default": 0
                                },
                                "denied_slots": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Denied Slots",
                                    "description": "The number of denied slots.",
                                    "default": 0
                                },
                                "slot_decay_per_second": {
                                    "type": "number",
                                    "minimum": 0.0,
                                    "title": "Slot Decay Per Second",
                                    "description": "The decay rate for active slots when used as a rate limit.",
                                    "default": 0
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "limit"
                            ],
                            "title": "ConcurrencyLimitV2Create",
                            "description": "Data used by the Orion API to create a v2 concurrency limit."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits V2"
            ],
            "operationId": "create_concurrency_limit_v2_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/v2/concurrency_limits/{id_or_name}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id_or_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "The ID or name of the concurrency limit",
                        "title": "Id Or Name"
                    },
                    "description": "The ID or name of the concurrency limit"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "active": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Active"
                                },
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "pattern": "^[^/%&><]+$"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name"
                                },
                                "limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Limit"
                                },
                                "active_slots": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Active Slots"
                                },
                                "denied_slots": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Denied Slots"
                                },
                                "slot_decay_per_second": {
                                    "anyOf": [
                                        {
                                            "type": "number",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Slot Decay Per Second"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "ConcurrencyLimitV2Update",
                            "description": "Data used by the Orion API to update a v2 concurrency limit."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits V2"
            ],
            "operationId": "update_concurrency_limit_v2_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits__id_or_name__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/v2/concurrency_limits/{id_or_name}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id_or_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "The ID or name of the concurrency limit",
                        "title": "Id Or Name"
                    },
                    "description": "The ID or name of the concurrency limit"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits V2"
            ],
            "operationId": "delete_concurrency_limit_v2_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits__id_or_name__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/v2/concurrency_limits/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GlobalConcurrencyLimitResponse"
                                },
                                "title": "Response Read All Concurrency Limits V2 Api Accounts  Account Id  Workspaces  Workspace Id  V2 Concurrency Limits Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_all_concurrency_limits_v2_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits_filter_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_concurrency_limits`",
            "tags": [
                "Concurrency Limits V2"
            ],
            "operationId": "read_all_concurrency_limits_v2_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/v2/concurrency_limits/increment",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MinimalConcurrencyLimitResponse"
                                },
                                "title": "Response Bulk Increment Active Slots Api Accounts  Account Id  Workspaces  Workspace Id  V2 Concurrency Limits Increment Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "slots": {
                                    "type": "integer",
                                    "exclusiveMinimum": 0.0,
                                    "title": "Slots"
                                },
                                "names": {
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$"
                                    },
                                    "type": "array",
                                    "title": "Names",
                                    "min_items": 1
                                },
                                "mode": {
                                    "type": "string",
                                    "enum": [
                                        "concurrency",
                                        "rate_limit"
                                    ],
                                    "title": "Mode",
                                    "default": "concurrency"
                                },
                                "create_if_missing": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Create If Missing",
                                    "deprecated": true
                                }
                            },
                            "type": "object",
                            "required": [
                                "slots",
                                "names"
                            ],
                            "title": "Body_bulk_increment_active_slots_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits_increment_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits V2"
            ],
            "operationId": "bulk_increment_active_slots_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits_increment_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/v2/concurrency_limits/decrement",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MinimalConcurrencyLimitResponse"
                                },
                                "title": "Response Bulk Decrement Active Slots Api Accounts  Account Id  Workspaces  Workspace Id  V2 Concurrency Limits Decrement Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "slots": {
                                    "type": "integer",
                                    "exclusiveMinimum": 0.0,
                                    "title": "Slots"
                                },
                                "names": {
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$"
                                    },
                                    "type": "array",
                                    "title": "Names",
                                    "min_items": 1
                                },
                                "occupancy_seconds": {
                                    "anyOf": [
                                        {
                                            "type": "number",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Occupancy Seconds"
                                },
                                "create_if_missing": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Create If Missing",
                                    "deprecated": true
                                }
                            },
                            "type": "object",
                            "required": [
                                "slots",
                                "names"
                            ],
                            "title": "Body_bulk_decrement_active_slots_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits_decrement_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_concurrency_limits`",
            "tags": [
                "Concurrency Limits V2"
            ],
            "operationId": "bulk_decrement_active_slots_api_accounts__account_id__workspaces__workspace_id__v2_concurrency_limits_decrement_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "A block type's name"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "title": "Slug",
                                        "description": "A block type's slug"
                                    },
                                    "logo_url": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Logo Url",
                                        "description": "Web URL for the block type's logo"
                                    },
                                    "documentation_url": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Documentation Url",
                                        "description": "Web URL for the block type's documentation"
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A short blurb about the corresponding block's intended use"
                                    },
                                    "code_example": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Code Example",
                                        "description": "A code snippet demonstrating use of the corresponding block"
                                    },
                                    "is_protected": {
                                        "type": "boolean",
                                        "title": "Is Protected",
                                        "description": "Protected block types cannot be modified via API.",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "title": "BlockType",
                                "description": "An ORM representation of a block type"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "pattern": "^[^/%&><]+$",
                                    "title": "Name",
                                    "description": "A block type's name"
                                },
                                "slug": {
                                    "type": "string",
                                    "title": "Slug",
                                    "description": "A block type's slug"
                                },
                                "logo_url": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 2083,
                                            "minLength": 1,
                                            "format": "uri"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Logo Url",
                                    "description": "Web URL for the block type's logo"
                                },
                                "documentation_url": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 2083,
                                            "minLength": 1,
                                            "format": "uri"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Documentation Url",
                                    "description": "Web URL for the block type's documentation"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "A short blurb about the corresponding block's intended use"
                                },
                                "code_example": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Code Example",
                                    "description": "A code snippet demonstrating use of the corresponding block"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "slug"
                            ],
                            "title": "BlockTypeCreate",
                            "description": "Data used by the Prefect REST API to create a block type."
                        }
                    }
                }
            },
            "description": "Create a new block type\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block types"
            ],
            "operationId": "create_block_type_api_accounts__account_id__workspaces__workspace_id__block_types__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block type ID",
                        "title": "Id"
                    },
                    "description": "The block type ID"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "logo_url": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 2083,
                                            "minLength": 1,
                                            "format": "uri"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Logo Url"
                                },
                                "documentation_url": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 2083,
                                            "minLength": 1,
                                            "format": "uri"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Documentation Url"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "code_example": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Code Example"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "BlockTypeUpdate",
                            "description": "Data used by the Prefect REST API to update a block type."
                        }
                    }
                }
            },
            "description": "Update a block type.\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block types"
            ],
            "operationId": "update_block_type_api_accounts__account_id__workspaces__workspace_id__block_types__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block type ID",
                        "title": "Id"
                    },
                    "description": "The block type ID"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block types"
            ],
            "operationId": "delete_block_type_api_accounts__account_id__workspaces__workspace_id__block_types__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BlockType"
                                },
                                "title": "Response Read Block Types Api Accounts  Account Id  Workspaces  Workspace Id  Block Types Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "block_types": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockTypeFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "block_schemas": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockSchemaFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_block_types_api_accounts__account_id__workspaces__workspace_id__block_types_filter_post"
                        }
                    }
                }
            },
            "description": "Gets all block types. Optionally limit return with limit and offset.\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block types"
            ],
            "operationId": "read_block_types_api_accounts__account_id__workspaces__workspace_id__block_types_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_types/install_system_block_types",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block types"
            ],
            "operationId": "install_system_block_types_api_accounts__account_id__workspaces__workspace_id__block_types_install_system_block_types_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "^[^/%&><]+$"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Name",
                                        "description": "The block document's name. Not required for anonymous block documents."
                                    },
                                    "data": {
                                        "type": "object",
                                        "title": "Data",
                                        "description": "The block document's data"
                                    },
                                    "block_schema_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Block Schema Id",
                                        "description": "A block schema ID"
                                    },
                                    "block_schema": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockSchema"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block schema"
                                    },
                                    "block_type_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Block Type Id",
                                        "description": "A block type ID"
                                    },
                                    "block_type_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Block Type Name",
                                        "description": "A block type name"
                                    },
                                    "block_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block type"
                                    },
                                    "block_document_references": {
                                        "additionalProperties": {
                                            "type": "object"
                                        },
                                        "type": "object",
                                        "title": "Block Document References",
                                        "description": "Record of the block document's references"
                                    },
                                    "is_anonymous": {
                                        "type": "boolean",
                                        "title": "Is Anonymous",
                                        "description": "Whether the block is anonymous (anonymous blocks are usually created by Prefect automatically)",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "block_schema_id",
                                    "block_type_id"
                                ],
                                "title": "BlockDocument",
                                "description": "An ORM representation of a block document."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name",
                                    "description": "The block document's name. Not required for anonymous block documents."
                                },
                                "data": {
                                    "type": "object",
                                    "title": "Data",
                                    "description": "The block document's data"
                                },
                                "block_schema_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Block Schema Id",
                                    "description": "A block schema ID"
                                },
                                "block_type_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Block Type Id",
                                    "description": "A block type ID"
                                },
                                "is_anonymous": {
                                    "type": "boolean",
                                    "title": "Is Anonymous",
                                    "description": "Whether the block is anonymous (anonymous blocks are usually created by Prefect automatically)",
                                    "default": false
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "block_schema_id",
                                "block_type_id"
                            ],
                            "title": "BlockDocumentCreate",
                            "description": "Data used by the Prefect REST API to create a block document."
                        }
                    }
                }
            },
            "description": "Create a new block document.\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "create_block_document_api_accounts__account_id__workspaces__workspace_id__block_documents__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/",
            "method": "put",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "^[^/%&><]+$"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Name",
                                        "description": "The block document's name. Not required for anonymous block documents."
                                    },
                                    "data": {
                                        "type": "object",
                                        "title": "Data",
                                        "description": "The block document's data"
                                    },
                                    "block_schema_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Block Schema Id",
                                        "description": "A block schema ID"
                                    },
                                    "block_schema": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockSchema"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block schema"
                                    },
                                    "block_type_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Block Type Id",
                                        "description": "A block type ID"
                                    },
                                    "block_type_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Block Type Name",
                                        "description": "A block type name"
                                    },
                                    "block_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block type"
                                    },
                                    "block_document_references": {
                                        "additionalProperties": {
                                            "type": "object"
                                        },
                                        "type": "object",
                                        "title": "Block Document References",
                                        "description": "Record of the block document's references"
                                    },
                                    "is_anonymous": {
                                        "type": "boolean",
                                        "title": "Is Anonymous",
                                        "description": "Whether the block is anonymous (anonymous blocks are usually created by Prefect automatically)",
                                        "default": false
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "block_schema_id",
                                    "block_type_id"
                                ],
                                "title": "BlockDocument",
                                "description": "An ORM representation of a block document."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name",
                                    "description": "The block document's name. Not required for anonymous block documents."
                                },
                                "data": {
                                    "type": "object",
                                    "title": "Data",
                                    "description": "The block document's data"
                                },
                                "block_schema_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Block Schema Id",
                                    "description": "A block schema ID"
                                },
                                "block_type_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Block Type Id",
                                    "description": "A block type ID"
                                },
                                "is_anonymous": {
                                    "type": "boolean",
                                    "title": "Is Anonymous",
                                    "description": "Whether the block is anonymous (anonymous blocks are usually created by Prefect automatically)",
                                    "default": false
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "block_schema_id",
                                "block_type_id"
                            ],
                            "title": "BlockDocumentCreate",
                            "description": "Data used by the Prefect REST API to create a block document."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "create_or_update_block_document_api_accounts__account_id__workspaces__workspace_id__block_documents__put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BlockDocument"
                                },
                                "title": "Response Read Block Documents Api Accounts  Account Id  Workspaces  Workspace Id  Block Documents Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "block_documents": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockDocumentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "block_types": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockTypeFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "block_schemas": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockSchemaFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "include_secrets": {
                                    "type": "boolean",
                                    "title": "Include Secrets",
                                    "description": "Whether to include sensitive values in the block document.",
                                    "default": false
                                },
                                "sort": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockDocumentSort"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "default": "NAME_ASC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_block_documents_api_accounts__account_id__workspaces__workspace_id__block_documents_filter_post"
                        }
                    }
                }
            },
            "description": "Query for block documents.\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "read_block_documents_api_accounts__account_id__workspaces__workspace_id__block_documents_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Block Documents Api Accounts  Account Id  Workspaces  Workspace Id  Block Documents Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "block_documents": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockDocumentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "block_types": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockTypeFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "block_schemas": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockSchemaFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_block_documents_api_accounts__account_id__workspaces__workspace_id__block_documents_count_post"
                        }
                    }
                }
            },
            "description": "Count block documents.\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "count_block_documents_api_accounts__account_id__workspaces__workspace_id__block_documents_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block document id",
                        "title": "Id"
                    },
                    "description": "The block document id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "delete_block_document_api_accounts__account_id__workspaces__workspace_id__block_documents__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block document id",
                        "title": "Id"
                    },
                    "description": "The block document id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "block_schema_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Block Schema Id",
                                    "description": "A block schema ID"
                                },
                                "data": {
                                    "type": "object",
                                    "title": "Data",
                                    "description": "The block document's data"
                                },
                                "merge_existing_data": {
                                    "type": "boolean",
                                    "title": "Merge Existing Data",
                                    "default": true
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "BlockDocumentUpdate",
                            "description": "Data used by the Prefect REST API to update a block document."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "update_block_document_data_api_accounts__account_id__workspaces__workspace_id__block_documents__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/{id}/access",
            "method": "put",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block_document id",
                        "title": "Id"
                    },
                    "description": "The block_document id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "access_control": {
                                    "$ref": "#/components/schemas/ReplaceBlockDocumentAccess"
                                }
                            },
                            "type": "object",
                            "required": [
                                "access_control"
                            ],
                            "title": "Body_set_block_document_access_api_accounts__account_id__workspaces__workspace_id__block_documents__id__access_put"
                        }
                    }
                }
            },
            "description": "Set access controls for a block document.\nThe given access controls will replace any existing access controls.\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "set_block_document_access_api_accounts__account_id__workspaces__workspace_id__block_documents__id__access_put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_documents/my-access",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "title": "Response Read Actors Block Document Access Api Accounts  Account Id  Workspaces  Workspace Id  Block Documents My Access Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "block_document_ids": {
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "type": "array",
                                    "title": "Block Document Ids"
                                }
                            },
                            "type": "object",
                            "required": [
                                "block_document_ids"
                            ],
                            "title": "Body_read_actors_block_document_access_api_accounts__account_id__workspaces__workspace_id__block_documents_my_access_post"
                        }
                    }
                }
            },
            "description": "Read access controls for a set of block documents and return the resolved\naccess levels for the current actor.\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block documents"
            ],
            "operationId": "read_actors_block_document_access_api_accounts__account_id__workspaces__workspace_id__block_documents_my_access_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "title": "Name",
                                        "description": "The name of the variable",
                                        "examples": [
                                            "my_variable"
                                        ]
                                    },
                                    "value": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "boolean"
                                            },
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "items": {},
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Value",
                                        "description": "The value of the variable",
                                        "examples": [
                                            "my-value"
                                        ]
                                    },
                                    "tags": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Tags",
                                        "description": "A list of variable tags",
                                        "examples": [
                                            [
                                                "tag-1",
                                                "tag-2"
                                            ]
                                        ]
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "value"
                                ],
                                "title": "Variable"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "title": "Name",
                                    "description": "The name of the variable",
                                    "examples": [
                                        "my_variable"
                                    ]
                                },
                                "value": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "items": {},
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Value",
                                    "description": "The value of the variable",
                                    "examples": [
                                        "my-value"
                                    ]
                                },
                                "tags": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Tags",
                                    "description": "A list of variable tags",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name",
                                "value"
                            ],
                            "title": "VariableCreate",
                            "description": "Data used by the Orion API to create a Variable."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "create_variable_api_accounts__account_id__workspaces__workspace_id__variables__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 255
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name",
                                    "description": "The name of the variable",
                                    "examples": [
                                        "my_variable"
                                    ]
                                },
                                "value": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "items": {},
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Value",
                                    "description": "The value of the variable",
                                    "examples": [
                                        "my-value"
                                    ]
                                },
                                "tags": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Tags",
                                    "description": "A list of variable tags",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "VariableUpdate",
                            "description": "Data used by the Orion API to update a Variable."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "update_variable_api_accounts__account_id__workspaces__workspace_id__variables__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "delete_variable_api_accounts__account_id__workspaces__workspace_id__variables__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/name/{name}",
            "method": "patch",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "maxLength": 255
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name",
                                    "description": "The name of the variable",
                                    "examples": [
                                        "my_variable"
                                    ]
                                },
                                "value": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "items": {},
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Value",
                                    "description": "The value of the variable",
                                    "examples": [
                                        "my-value"
                                    ]
                                },
                                "tags": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Tags",
                                    "description": "A list of variable tags",
                                    "examples": [
                                        [
                                            "tag-1",
                                            "tag-2"
                                        ]
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "VariableUpdate",
                            "description": "Data used by the Orion API to update a Variable."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "update_variable_by_name_api_accounts__account_id__workspaces__workspace_id__variables_name__name__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/name/{name}",
            "method": "delete",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "\n\nRequired workspace scopes: `manage_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "delete_variable_by_name_api_accounts__account_id__workspaces__workspace_id__variables_name__name__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Variable"
                                },
                                "title": "Response Read Variables Api Accounts  Account Id  Workspaces  Workspace Id  Variables Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "variables": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/VariableFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "sort": {
                                    "$ref": "#/components/schemas/VariableSort",
                                    "default": "NAME_ASC"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_variables_api_accounts__account_id__workspaces__workspace_id__variables_filter_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "read_variables_api_accounts__account_id__workspaces__workspace_id__variables_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/variables/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Variables Api Accounts  Account Id  Workspaces  Workspace Id  Variables Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "variables": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/VariableFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_count_variables_api_accounts__account_id__workspaces__workspace_id__variables_count_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_variables`",
            "tags": [
                "Variables"
            ],
            "operationId": "count_variables_api_accounts__account_id__workspaces__workspace_id__variables_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/configuration/preview",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "base_job_template": {
                                    "title": "Base Job Template"
                                },
                                "type": {
                                    "type": "string",
                                    "title": "Type"
                                }
                            },
                            "type": "object",
                            "required": [
                                "base_job_template",
                                "type"
                            ],
                            "title": "Body_preview_work_pool_configuration_api_accounts__account_id__workspaces__workspace_id__work_pools_configuration_preview_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "Work Pools",
                "Work Pools"
            ],
            "operationId": "preview_work_pool_configuration_api_accounts__account_id__workspaces__workspace_id__work_pools_configuration_preview_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the work pool."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "A description of the work pool."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Type",
                                        "description": "The work pool type."
                                    },
                                    "base_job_template": {
                                        "type": "object",
                                        "title": "Base Job Template",
                                        "description": "The work pool's base job template."
                                    },
                                    "is_paused": {
                                        "type": "boolean",
                                        "title": "Is Paused",
                                        "description": "Pausing the work pool stops the delivery of all work.",
                                        "default": false
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer",
                                                "minimum": 0.0
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "A concurrency limit for the work pool."
                                    },
                                    "is_push_pool": {
                                        "type": "boolean",
                                        "title": "Is Push Pool",
                                        "description": "Whether or not the work pool is a push pool. Push pools are not polled by agents/workers to deliver work.",
                                        "default": false
                                    },
                                    "is_mex_pool": {
                                        "type": "boolean",
                                        "title": "Is Mex Pool",
                                        "description": "Whether or not the work pool is a managed pool. Managed pools execute work within Prefect Cloud.",
                                        "default": false
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkPoolStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The current status of the work pool."
                                    },
                                    "default_queue_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Default Queue Id",
                                        "description": "The id of the pool's default queue."
                                    },
                                    "storage_configuration": {
                                        "$ref": "#/components/schemas/WorkPoolStorageConfiguration",
                                        "description": "The storage configuration for the work pool."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name",
                                    "type",
                                    "default_queue_id"
                                ],
                                "title": "WorkPool",
                                "description": "An ORM representation of a work pool"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "pattern": "^[^/%&><]+$",
                                    "title": "Name",
                                    "description": "The name of the work pool."
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "The work pool description."
                                },
                                "type": {
                                    "type": "string",
                                    "title": "Type",
                                    "description": "The work pool type.",
                                    "default": "prefect-agent"
                                },
                                "base_job_template": {
                                    "type": "object",
                                    "title": "Base Job Template",
                                    "description": "The work pool's base job template."
                                },
                                "is_paused": {
                                    "type": "boolean",
                                    "title": "Is Paused",
                                    "description": "Pausing the work pool stops the delivery of all work.",
                                    "default": false
                                },
                                "concurrency_limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Concurrency Limit",
                                    "description": "A concurrency limit for the work pool."
                                },
                                "storage_configuration": {
                                    "$ref": "#/components/schemas/WorkPoolStorageConfiguration",
                                    "description": "The storage configuration for the work pool."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "WorkPoolCreate",
                            "description": "Data used by the Orion API to create a work pool."
                        }
                    }
                }
            },
            "description": "Creates a new work pool. If a work pool with the same\nname already exists, an error will be raised.\n\nRequired workspace scopes: `write_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "create_work_pool_api_accounts__account_id__workspaces__workspace_id__work_pools__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{name}",
            "method": "patch",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "is_paused": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Is Paused"
                                },
                                "base_job_template": {
                                    "type": "object",
                                    "title": "Base Job Template"
                                },
                                "concurrency_limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Concurrency Limit"
                                },
                                "storage_configuration": {
                                    "$ref": "#/components/schemas/WorkPoolStorageConfiguration",
                                    "description": "The storage configuration for the work pool."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "WorkPoolUpdate",
                            "description": "Data used by the Prefect REST API to update a work pool."
                        }
                    }
                }
            },
            "description": "Update a work pool\n\nRequired workspace scopes: `write_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "update_work_pool_api_accounts__account_id__workspaces__workspace_id__work_pools__name__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{name}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a work pool\n\nRequired workspace scopes: `manage_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "delete_work_pool_api_accounts__account_id__workspaces__workspace_id__work_pools__name__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkPool"
                                },
                                "title": "Response Read Work Pools Api Accounts  Account Id  Workspaces  Workspace Id  Work Pools Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_work_pools_api_accounts__account_id__workspaces__workspace_id__work_pools_filter_post"
                        }
                    }
                }
            },
            "description": "Read multiple work pools\n\nRequired workspace scopes: `see_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "read_work_pools_api_accounts__account_id__workspaces__workspace_id__work_pools_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "title": "Response Count Work Pools Api Accounts  Account Id  Workspaces  Workspace Id  Work Pools Count Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "work_pools": {
                                    "$ref": "#/components/schemas/WorkPoolFilter"
                                }
                            },
                            "type": "object",
                            "title": "Body_count_work_pools_api_accounts__account_id__workspaces__workspace_id__work_pools_count_post"
                        }
                    }
                }
            },
            "description": "Count work pools\n\nRequired workspace scopes: `see_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "count_work_pools_api_accounts__account_id__workspaces__workspace_id__work_pools_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{name}/get_scheduled_flow_runs",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkerFlowRunResponse"
                                },
                                "title": "Response Get Scheduled Flow Runs Api Accounts  Account Id  Workspaces  Workspace Id  Work Pools  Name  Get Scheduled Flow Runs Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "work_queue_names": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Work Queue Names",
                                    "description": "The names of work pool queues"
                                },
                                "scheduled_before": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Scheduled Before",
                                    "description": "The maximum time to look for scheduled flow runs"
                                },
                                "scheduled_after": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Scheduled After",
                                    "description": "The minimum time to look for scheduled flow runs"
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_get_scheduled_flow_runs_api_accounts__account_id__workspaces__workspace_id__work_pools__name__get_scheduled_flow_runs_post"
                        }
                    }
                }
            },
            "description": "Load scheduled runs for a worker\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "get_scheduled_flow_runs_api_accounts__account_id__workspaces__workspace_id__work_pools__name__get_scheduled_flow_runs_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{name}/access",
            "method": "put",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "access_control": {
                                    "$ref": "#/components/schemas/ReplaceWorkPoolAccess"
                                }
                            },
                            "type": "object",
                            "required": [
                                "access_control"
                            ],
                            "title": "Body_set_work_pool_access_api_accounts__account_id__workspaces__workspace_id__work_pools__name__access_put"
                        }
                    }
                }
            },
            "description": "Set access controls for a work_pool.\nThe given access controls will replace any existing access controls.\n\nRequired workspace scopes: `manage_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "set_work_pool_access_api_accounts__account_id__workspaces__workspace_id__work_pools__name__access_put"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/my-access",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "title": "Response Read Actors Work Pool Access Api Accounts  Account Id  Workspaces  Workspace Id  Work Pools My Access Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "work_pool_ids": {
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "type": "array",
                                    "title": "Work Pool Ids",
                                    "default": []
                                },
                                "work_pool_names": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Work Pool Names",
                                    "default": []
                                }
                            },
                            "type": "object",
                            "title": "Body_read_actors_work_pool_access_api_accounts__account_id__workspaces__workspace_id__work_pools_my_access_post"
                        }
                    }
                }
            },
            "description": "Read access controls for a set of work pools and return the resolved\naccess levels for the current actor.\n\nRequired workspace scopes: `see_work_pools`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "read_actors_work_pool_access_api_accounts__account_id__workspaces__workspace_id__work_pools_my_access_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/queues",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the work queue."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "An optional description for the work queue.",
                                        "default": ""
                                    },
                                    "is_paused": {
                                        "type": "boolean",
                                        "title": "Is Paused",
                                        "description": "Whether or not the work queue is paused.",
                                        "default": false
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer",
                                                "minimum": 0.0
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "An optional concurrency limit for the work queue."
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "exclusiveMinimum": 0.0,
                                        "title": "Priority",
                                        "description": "The queue's priority. Lower values are higher priority (1 is the highest).",
                                        "default": 1
                                    },
                                    "work_pool_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Id",
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "filter": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/QueueFilter"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "DEPRECATED: Filter criteria for the work queue.",
                                        "deprecated": true
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time an agent polled this queue for work."
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkQueueStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work queue's current status."
                                    },
                                    "work_pool": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkPool"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the work pool the work pool resides within."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "WorkQueueResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "pattern": "^[^/%&><]+$",
                                    "title": "Name",
                                    "description": "The name of the work queue."
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "An optional description for the work queue.",
                                    "default": ""
                                },
                                "is_paused": {
                                    "type": "boolean",
                                    "title": "Is Paused",
                                    "description": "Whether or not the work queue is paused.",
                                    "default": false
                                },
                                "concurrency_limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Concurrency Limit",
                                    "description": "The work queue's concurrency limit."
                                },
                                "priority": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Priority",
                                    "description": "The queue's priority. Lower values are higher priority (1 is the highest)."
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/QueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "DEPRECATED: Filter criteria for the work queue.",
                                    "deprecated": true
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "WorkQueueCreate",
                            "description": "Data used by the Prefect REST API to create a work queue."
                        }
                    }
                }
            },
            "description": "Creates a new work pool queue. If a work pool queue with the same\nname already exists, an error will be raised.\n\nRequired workspace scopes: `write_work_queues`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "create_work_queue_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__queues_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/queues/{name}",
            "method": "patch",
            "parameters": [
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool queue name",
                        "title": "Name"
                    },
                    "description": "The work pool queue name"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "pattern": "^[^/%&><]+$"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "is_paused": {
                                    "type": "boolean",
                                    "title": "Is Paused",
                                    "description": "Whether or not the work queue is paused.",
                                    "default": false
                                },
                                "concurrency_limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Concurrency Limit"
                                },
                                "priority": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Priority"
                                },
                                "last_polled": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Last Polled"
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/QueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "DEPRECATED: Filter criteria for the work queue.",
                                    "deprecated": true
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "WorkQueueUpdate",
                            "description": "Data used by the Orion API to update a work queue."
                        }
                    }
                }
            },
            "description": "Update a work pool queue\n\nRequired workspace scopes: `write_work_queues`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "update_work_queue_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__queues__name__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/queues/{name}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool queue name",
                        "title": "Name"
                    },
                    "description": "The work pool queue name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a work pool queue\n\nRequired workspace scopes: `manage_work_queues`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "delete_work_queue_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__queues__name__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/queues/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkQueueResponse"
                                },
                                "title": "Response Read Work Queues Api Accounts  Account Id  Workspaces  Workspace Id  Work Pools  Work Pool Name  Queues Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "work_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_work_queues_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__queues_filter_post"
                        }
                    }
                }
            },
            "description": "Read all work pool queues\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "read_work_queues_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__queues_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/workers/heartbeat",
            "method": "post",
            "parameters": [
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "The worker process name"
                                },
                                "heartbeat_interval_seconds": {
                                    "anyOf": [
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Heartbeat Interval Seconds",
                                    "description": "The worker's heartbeat interval in seconds"
                                },
                                "return_id": {
                                    "type": "boolean",
                                    "title": "Return Id",
                                    "description": "Whether to return the worker ID. If False, returns 204.",
                                    "default": false
                                },
                                "metadata": {
                                    "anyOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Metadata",
                                    "description": "The worker's metadata"
                                }
                            },
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "Body_worker_heartbeat_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__workers_heartbeat_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `write_workers`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "worker_heartbeat_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__workers_heartbeat_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/workers/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Worker"
                                },
                                "title": "Response Read Workers Api Accounts  Account Id  Workspaces  Workspace Id  Work Pools  Work Pool Name  Workers Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "workers": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkerFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "sort": {
                                    "$ref": "#/components/schemas/WorkerSort",
                                    "default": "LAST_HEARTBEAT_DESC"
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_workers_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__workers_filter_post"
                        }
                    }
                }
            },
            "description": "Read all worker processes\n\nRequired workspace scopes: `see_workers`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "read_workers_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__workers_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/workers/paginate",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "results": {
                                        "items": {
                                            "$ref": "#/components/schemas/Worker"
                                        },
                                        "type": "array",
                                        "title": "Results"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit"
                                    },
                                    "pages": {
                                        "type": "integer",
                                        "title": "Pages"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "title": "Page"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "results",
                                    "count",
                                    "limit",
                                    "pages",
                                    "page"
                                ],
                                "title": "WorkerPaginatedResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "workers": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkerFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "sort": {
                                    "$ref": "#/components/schemas/WorkerSort",
                                    "default": "LAST_HEARTBEAT_DESC"
                                },
                                "page": {
                                    "type": "integer",
                                    "minimum": 1.0,
                                    "title": "Page",
                                    "default": 1
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_paginate_workers_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__workers_paginate_post"
                        }
                    }
                }
            },
            "description": "Read all worker processes\n\nRequired workspace scopes: `see_workers`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "paginate_workers_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__workers_paginate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_pools/{work_pool_name}/workers/{name}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "work_pool_name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool name",
                        "title": "Work Pool Name"
                    },
                    "description": "The work pool name"
                },
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "description": "The work pool's worker name",
                        "title": "Name"
                    },
                    "description": "The work pool's worker name"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a work pool's worker\n\nRequired workspace scopes: `manage_workers`",
            "tags": [
                "Work Pools"
            ],
            "operationId": "delete_worker_api_accounts__account_id__workspaces__workspace_id__work_pools__work_pool_name__workers__name__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_queues/",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "name": {
                                        "type": "string",
                                        "pattern": "^[^/%&><]+$",
                                        "title": "Name",
                                        "description": "The name of the work queue."
                                    },
                                    "description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Description",
                                        "description": "An optional description for the work queue.",
                                        "default": ""
                                    },
                                    "is_paused": {
                                        "type": "boolean",
                                        "title": "Is Paused",
                                        "description": "Whether or not the work queue is paused.",
                                        "default": false
                                    },
                                    "concurrency_limit": {
                                        "anyOf": [
                                            {
                                                "type": "integer",
                                                "minimum": 0.0
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Concurrency Limit",
                                        "description": "An optional concurrency limit for the work queue."
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "exclusiveMinimum": 0.0,
                                        "title": "Priority",
                                        "description": "The queue's priority. Lower values are higher priority (1 is the highest).",
                                        "default": 1
                                    },
                                    "work_pool_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Id",
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "filter": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/QueueFilter"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "DEPRECATED: Filter criteria for the work queue.",
                                        "deprecated": true
                                    },
                                    "last_polled": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Last Polled",
                                        "description": "The last time an agent polled this queue for work."
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkQueueStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work queue's current status."
                                    },
                                    "work_pool": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/WorkPool"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The work pool with which the queue is associated."
                                    },
                                    "work_pool_name": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Work Pool Name",
                                        "description": "The name of the work pool the work pool resides within."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "title": "WorkQueueResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "pattern": "^[^/%&><]+$",
                                    "title": "Name",
                                    "description": "The name of the work queue."
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description",
                                    "description": "An optional description for the work queue.",
                                    "default": ""
                                },
                                "is_paused": {
                                    "type": "boolean",
                                    "title": "Is Paused",
                                    "description": "Whether or not the work queue is paused.",
                                    "default": false
                                },
                                "concurrency_limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Concurrency Limit",
                                    "description": "The work queue's concurrency limit."
                                },
                                "priority": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Priority",
                                    "description": "The queue's priority. Lower values are higher priority (1 is the highest)."
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/QueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "DEPRECATED: Filter criteria for the work queue.",
                                    "deprecated": true
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "title": "WorkQueueCreate",
                            "description": "Data used by the Prefect REST API to create a work queue."
                        }
                    }
                }
            },
            "description": "Creates a new work queue for the default agent work pool.\n\nIf a work queue with the same name already exists, an error\nwill be raised.\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Queues"
            ],
            "operationId": "create_work_queue_api_accounts__account_id__workspaces__workspace_id__work_queues__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_queues/{id}",
            "method": "patch",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The work queue id",
                        "title": "Id"
                    },
                    "description": "The work queue id"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "pattern": "^[^/%&><]+$"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Name"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "is_paused": {
                                    "type": "boolean",
                                    "title": "Is Paused",
                                    "description": "Whether or not the work queue is paused.",
                                    "default": false
                                },
                                "concurrency_limit": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "minimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Concurrency Limit"
                                },
                                "priority": {
                                    "anyOf": [
                                        {
                                            "type": "integer",
                                            "exclusiveMinimum": 0.0
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Priority"
                                },
                                "last_polled": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Last Polled"
                                },
                                "filter": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/QueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "description": "DEPRECATED: Filter criteria for the work queue.",
                                    "deprecated": true
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "WorkQueueUpdate",
                            "description": "Data used by the Orion API to update a work queue."
                        }
                    }
                }
            },
            "description": "Updates an existing work queue.\n\nRequired workspace scopes: `write_work_queues`",
            "tags": [
                "Work Queues"
            ],
            "operationId": "update_work_queue_api_accounts__account_id__workspaces__workspace_id__work_queues__id__patch"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_queues/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The work queue id",
                        "title": "Id"
                    },
                    "description": "The work queue id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a work queue by id.\n\nRequired workspace scopes: `manage_work_queues`",
            "tags": [
                "Work Queues"
            ],
            "operationId": "delete_work_queue_api_accounts__account_id__workspaces__workspace_id__work_queues__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_queues/{id}/get_runs",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The work queue id",
                        "title": "Id"
                    },
                    "description": "The work queue id"
                },
                {
                    "name": "x-prefect-ui",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "A header to indicate this request came from the Prefect UI.",
                        "default": false,
                        "title": "X-Prefect-Ui"
                    },
                    "description": "A header to indicate this request came from the Prefect UI."
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FlowRunResponse"
                                },
                                "title": "Response Read Work Queue Runs Api Accounts  Account Id  Workspaces  Workspace Id  Work Queues  Id  Get Runs Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "scheduled_before": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Scheduled Before",
                                    "description": "Only flow runs scheduled to start before this time will be returned."
                                },
                                "agent_id": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Agent Id",
                                    "description": "An optional unique identifier for the agent making this query. If provided, the Orion API will track the last time this agent polled the work queue."
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_work_queue_runs_api_accounts__account_id__workspaces__workspace_id__work_queues__id__get_runs_post"
                        }
                    }
                }
            },
            "description": "Get flow runs from the work queue.\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Queues"
            ],
            "operationId": "read_work_queue_runs_api_accounts__account_id__workspaces__workspace_id__work_queues__id__get_runs_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/work_queues/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkQueueResponse"
                                },
                                "title": "Response Read Work Queues Api Accounts  Account Id  Workspaces  Workspace Id  Work Queues Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "work_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_work_queues_api_accounts__account_id__workspaces__workspace_id__work_queues_filter_post"
                        }
                    }
                }
            },
            "description": "Query for work queues.\n\nRequired workspace scopes: `see_work_queues`",
            "tags": [
                "Work Queues"
            ],
            "operationId": "read_work_queues_api_accounts__account_id__workspaces__workspace_id__work_queues_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_schemas/",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "title": "Id"
                                    },
                                    "created": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Created"
                                    },
                                    "updated": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Updated"
                                    },
                                    "checksum": {
                                        "type": "string",
                                        "title": "Checksum",
                                        "description": "The block schema's unique checksum"
                                    },
                                    "fields": {
                                        "type": "object",
                                        "title": "Fields",
                                        "description": "The block schema's field schema"
                                    },
                                    "block_type_id": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Block Type Id",
                                        "description": "A block type ID"
                                    },
                                    "block_type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/BlockType"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "description": "The associated block type"
                                    },
                                    "capabilities": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "title": "Capabilities",
                                        "description": "A list of Block capabilities"
                                    },
                                    "version": {
                                        "type": "string",
                                        "title": "Version",
                                        "description": "Human readable identifier for the block schema",
                                        "default": "non-versioned"
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "checksum",
                                    "block_type_id"
                                ],
                                "title": "BlockSchema",
                                "description": "An ORM representation of a block schema."
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "fields": {
                                    "type": "object",
                                    "title": "Fields",
                                    "description": "The block schema's field schema"
                                },
                                "block_type_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Block Type Id",
                                    "description": "A block type ID"
                                },
                                "capabilities": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Capabilities",
                                    "description": "A list of Block capabilities"
                                },
                                "version": {
                                    "type": "string",
                                    "title": "Version",
                                    "description": "Human readable identifier for the block schema",
                                    "default": "non-versioned"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "block_type_id"
                            ],
                            "title": "BlockSchemaCreate",
                            "description": "Data used by the Prefect REST API to create a block schema."
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block schemas"
            ],
            "operationId": "create_block_schema_api_accounts__account_id__workspaces__workspace_id__block_schemas__post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_schemas/{id}",
            "method": "delete",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The block schema id",
                        "title": "Id"
                    },
                    "description": "The block schema id"
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "Successful Response"
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {},
            "description": "Delete a block schema by id.\n\nRequired workspace scopes: `manage_blocks`",
            "tags": [
                "Block schemas"
            ],
            "operationId": "delete_block_schema_api_accounts__account_id__workspaces__workspace_id__block_schemas__id__delete"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/block_schemas/filter",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BlockSchema"
                                },
                                "title": "Response Read Block Schemas Api Accounts  Account Id  Workspaces  Workspace Id  Block Schemas Filter Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "block_schemas": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BlockSchemaFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "limit": {
                                    "type": "integer",
                                    "title": "Limit",
                                    "description": "Defaults to PREFECT_ORION_API_DEFAULT_LIMIT if not provided."
                                }
                            },
                            "type": "object",
                            "title": "Body_read_block_schemas_api_accounts__account_id__workspaces__workspace_id__block_schemas_filter_post"
                        }
                    }
                }
            },
            "description": "Read all block schemas, optionally filtered by type\n\nRequired workspace scopes: `see_blocks`",
            "tags": [
                "Block schemas"
            ],
            "operationId": "read_block_schemas_api_accounts__account_id__workspaces__workspace_id__block_schemas_filter_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/flows/count-deployments",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "integer"
                                },
                                "propertyNames": {
                                    "format": "uuid"
                                },
                                "title": "Response Count Deployments By Flow Api Accounts  Account Id  Workspaces  Workspace Id  Ui Flows Count Deployments Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flow_ids": {
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "type": "array",
                                    "title": "Flow Ids",
                                    "max_items": 200
                                }
                            },
                            "type": "object",
                            "required": [
                                "flow_ids"
                            ],
                            "title": "Body_count_deployments_by_flow_api_accounts__account_id__workspaces__workspace_id__ui_flows_count_deployments_post"
                        }
                    }
                }
            },
            "description": "Get deployment counts by flow id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flows",
                "UI"
            ],
            "operationId": "count_deployments_by_flow_api_accounts__account_id__workspaces__workspace_id__ui_flows_count_deployments_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/flows/next-runs",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/SimpleNextFlowRun"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "propertyNames": {
                                    "format": "uuid"
                                },
                                "title": "Response Next Runs By Flow Api Accounts  Account Id  Workspaces  Workspace Id  Ui Flows Next Runs Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flow_ids": {
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "type": "array",
                                    "title": "Flow Ids",
                                    "max_items": 200
                                }
                            },
                            "type": "object",
                            "required": [
                                "flow_ids"
                            ],
                            "title": "Body_next_runs_by_flow_api_accounts__account_id__workspaces__workspace_id__ui_flows_next_runs_post"
                        }
                    }
                }
            },
            "description": "Get the next flow run by flow id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flows",
                "UI"
            ],
            "operationId": "next_runs_by_flow_api_accounts__account_id__workspaces__workspace_id__ui_flows_next_runs_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/flow_runs/history",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SimpleFlowRun"
                                },
                                "title": "Response Read Flow Run History Api Accounts  Account Id  Workspaces  Workspace Id  Ui Flow Runs History Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/FlowRunSort",
                                    "default": "EXPECTED_START_TIME_DESC"
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 1000.0,
                                    "title": "Limit",
                                    "default": 1000
                                },
                                "offset": {
                                    "type": "integer",
                                    "minimum": 0.0,
                                    "title": "Offset",
                                    "default": 0
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_flow_run_history_api_accounts__account_id__workspaces__workspace_id__ui_flow_runs_history_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs",
                "UI"
            ],
            "operationId": "read_flow_run_history_api_accounts__account_id__workspaces__workspace_id__ui_flow_runs_history_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/flow_runs/history-v2",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "results": {
                                        "items": {
                                            "$ref": "#/components/schemas/FlowRunHistoryItem"
                                        },
                                        "type": "array",
                                        "title": "Results",
                                        "description": "The flow run history items."
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count",
                                        "description": "The total number of flow run history items."
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit",
                                        "description": "The limit of the response."
                                    },
                                    "pages": {
                                        "type": "integer",
                                        "title": "Pages",
                                        "description": "The number of pages in the response."
                                    },
                                    "page": {
                                        "type": "integer",
                                        "title": "Page",
                                        "description": "The current page in the response."
                                    }
                                },
                                "type": "object",
                                "required": [
                                    "results",
                                    "count",
                                    "limit",
                                    "pages",
                                    "page"
                                ],
                                "title": "FlowRunHistoryResponse"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "sort": {
                                    "$ref": "#/components/schemas/FlowRunSort",
                                    "default": "EXPECTED_START_TIME_DESC"
                                },
                                "limit": {
                                    "type": "integer",
                                    "maximum": 5000.0,
                                    "title": "Limit",
                                    "default": 5000
                                },
                                "page": {
                                    "type": "integer",
                                    "minimum": 1.0,
                                    "title": "Page",
                                    "default": 1
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pool_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_flow_run_history_v2_api_accounts__account_id__workspaces__workspace_id__ui_flow_runs_history_v2_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs",
                "UI"
            ],
            "operationId": "read_flow_run_history_v2_api_accounts__account_id__workspaces__workspace_id__ui_flow_runs_history_v2_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/flow_runs/count-task-runs",
            "method": "post",
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "integer"
                                },
                                "propertyNames": {
                                    "format": "uuid"
                                },
                                "title": "Response Count Task Runs By Flow Run Api Accounts  Account Id  Workspaces  Workspace Id  Ui Flow Runs Count Task Runs Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flow_run_ids": {
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "type": "array",
                                    "title": "Flow Run Ids",
                                    "max_items": 200
                                }
                            },
                            "type": "object",
                            "required": [
                                "flow_run_ids"
                            ],
                            "title": "Body_count_task_runs_by_flow_run_api_accounts__account_id__workspaces__workspace_id__ui_flow_runs_count_task_runs_post"
                        }
                    }
                }
            },
            "description": "Get task run counts by flow run id.\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Flow Runs",
                "UI"
            ],
            "operationId": "count_task_runs_by_flow_run_api_accounts__account_id__workspaces__workspace_id__ui_flow_runs_count_task_runs_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/task_runs/dashboard/counts",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DashboardTaskRunCount"
                                },
                                "title": "Response Read Dashboard Task Run Counts Api Accounts  Account Id  Workspaces  Workspace Id  Ui Task Runs Dashboard Counts Post"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "task_runs": {
                                    "$ref": "#/components/schemas/TaskRunFilter"
                                },
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_pools": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkPoolFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "work_queues": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/WorkQueueFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "required": [
                                "task_runs"
                            ],
                            "title": "Body_read_dashboard_task_run_counts_api_accounts__account_id__workspaces__workspace_id__ui_task_runs_dashboard_counts_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Runs",
                "UI"
            ],
            "operationId": "read_dashboard_task_run_counts_api_accounts__account_id__workspaces__workspace_id__ui_task_runs_dashboard_counts_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/task_runs/count",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "COMPLETED": {
                                        "type": "integer",
                                        "title": "Completed",
                                        "default": 0
                                    },
                                    "PENDING": {
                                        "type": "integer",
                                        "title": "Pending",
                                        "default": 0
                                    },
                                    "RUNNING": {
                                        "type": "integer",
                                        "title": "Running",
                                        "default": 0
                                    },
                                    "FAILED": {
                                        "type": "integer",
                                        "title": "Failed",
                                        "default": 0
                                    },
                                    "CANCELLED": {
                                        "type": "integer",
                                        "title": "Cancelled",
                                        "default": 0
                                    },
                                    "CRASHED": {
                                        "type": "integer",
                                        "title": "Crashed",
                                        "default": 0
                                    },
                                    "PAUSED": {
                                        "type": "integer",
                                        "title": "Paused",
                                        "default": 0
                                    },
                                    "CANCELLING": {
                                        "type": "integer",
                                        "title": "Cancelling",
                                        "default": 0
                                    },
                                    "SCHEDULED": {
                                        "type": "integer",
                                        "title": "Scheduled",
                                        "default": 0
                                    }
                                },
                                "type": "object",
                                "title": "CountByState"
                            }
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "flows": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "flow_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FlowRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "task_runs": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TaskRunFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "deployments": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DeploymentFilter"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object",
                            "title": "Body_read_task_run_counts_by_state_api_accounts__account_id__workspaces__workspace_id__ui_task_runs_count_post"
                        }
                    }
                }
            },
            "description": "\n\nRequired workspace scopes: `see_flows`",
            "tags": [
                "Task Runs",
                "UI"
            ],
            "operationId": "read_task_run_counts_by_state_api_accounts__account_id__workspaces__workspace_id__ui_task_runs_count_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/schemas/validate",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "schema": {
                                    "type": "object",
                                    "title": "Schema"
                                },
                                "values": {
                                    "type": "object",
                                    "title": "Values"
                                }
                            },
                            "type": "object",
                            "required": [
                                "schema",
                                "values"
                            ],
                            "title": "Body_validate_obj_api_accounts__account_id__workspaces__workspace_id__ui_schemas_validate_post"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "UI",
                "Schemas"
            ],
            "operationId": "validate_obj_api_accounts__account_id__workspaces__workspace_id__ui_schemas_validate_post"
        },
        {
            "server_url": "",
            "path": "/api/accounts/{account_id}/workspaces/{workspace_id}/ui/schemas/validate_schema",
            "method": "post",
            "parameters": [
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Account Id"
                    }
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Workspace Id"
                    }
                },
                {
                    "name": "x-prefect-api-version",
                    "in": "header",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "title": "X-Prefect-Api-Version"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "422": {
                    "description": "Validation Error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "detail": {
                                        "items": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        },
                                        "type": "array",
                                        "title": "Detail"
                                    }
                                },
                                "type": "object",
                                "title": "HTTPValidationError"
                            }
                        }
                    }
                }
            },
            "request_body_parameters": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "title": "Schema"
                        }
                    }
                }
            },
            "description": "",
            "tags": [
                "UI",
                "Schemas"
            ],
            "operationId": "validate_schema_api_accounts__account_id__workspaces__workspace_id__ui_schemas_validate_schema_post"
        }
    ]
}